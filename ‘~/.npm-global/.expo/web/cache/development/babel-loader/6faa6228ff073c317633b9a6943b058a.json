{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { DarkTheme, DefaultTheme, NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport HistoryScreen from \"../screens/HistoryScreen\";\nimport SendScreen from \"../screens/SendScreen\";\nimport Login from \"../screens/LoginScreen\";\nimport Signup from \"../screens/SignupScreen\";\nimport SettingsScreen from \"../screens/SettingsScreen\";\nimport NotFoundScreen from \"../screens/NotFoundScreen\";\nimport BottomTabNavigator from \"./BottomTabNavigator\";\nimport LinkingConfiguration from \"./LinkingConfiguration\";\nimport { UserContext } from \"../screens/UserContext\";\nimport React, { useState } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Navigation(_ref) {\n  var colorScheme = _ref.colorScheme;\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      value = _useState2[0],\n      setValue = _useState2[1];\n\n  return _jsx(UserContext.Provider, {\n    value: {\n      value: value,\n      setValue: setValue\n    },\n    children: _jsx(NavigationContainer, {\n      linking: LinkingConfiguration,\n      theme: colorScheme === \"dark\" ? DarkTheme : DefaultTheme,\n      children: _jsx(RootNavigator, {})\n    })\n  });\n}\nvar Stack = createStackNavigator();\n\nfunction RootNavigator(props) {\n  return _jsxs(Stack.Navigator, {\n    screenOptions: {\n      headerShown: false\n    },\n    children: [_jsx(Stack.Screen, {\n      name: \"Login\",\n      component: Login\n    }), _jsx(Stack.Screen, {\n      name: \"Root\",\n      component: BottomTabNavigator\n    }), _jsx(Stack.Screen, {\n      name: \"History\",\n      component: HistoryScreen\n    }), _jsx(Stack.Screen, {\n      name: \"Send\",\n      component: SendScreen\n    }), _jsx(Stack.Screen, {\n      name: \"Settings\",\n      component: SettingsScreen\n    }), _jsx(Stack.Screen, {\n      name: \"Signup\",\n      component: Signup\n    }), _jsx(Stack.Screen, {\n      name: \"NotFound\",\n      component: NotFoundScreen,\n      options: {\n        title: \"Oops!\"\n      }\n    })]\n  });\n}","map":{"version":3,"sources":["C:/Users/DavidWIlliams/Desktop/crewCoin/navigation/index.js"],"names":["DarkTheme","DefaultTheme","NavigationContainer","createStackNavigator","HistoryScreen","SendScreen","Login","Signup","SettingsScreen","NotFoundScreen","BottomTabNavigator","LinkingConfiguration","UserContext","React","useState","Navigation","colorScheme","value","setValue","Stack","RootNavigator","props","headerShown","title"],"mappings":";AAEA,SACEA,SADF,EAEEC,YAFF,EAGEC,mBAHF,QAIO,0BAJP;AAKA,SAASC,oBAAT,QAAqC,yBAArC;AACA,OAAOC,aAAP;AACA,OAAOC,UAAP;AACA,OAAOC,KAAP;AACA,OAAOC,MAAP;AACA,OAAOC,cAAP;AACA,OAAOC,cAAP;AACA,OAAOC,kBAAP;AACA,OAAOC,oBAAP;AACA,SAASC,WAAT;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,eAAe,SAASC,UAAT,OAAqC;AAAA,MAAfC,WAAe,QAAfA,WAAe;;AAClD,kBAA0BF,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOG,KAAP;AAAA,MAAcC,QAAd;;AACA,SACE,KAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAED,MAAAA,KAAK,EAALA,KAAF;AAASC,MAAAA,QAAQ,EAARA;AAAT,KAA7B;AAAA,cACE,KAAC,mBAAD;AACE,MAAA,OAAO,EAAEP,oBADX;AAEE,MAAA,KAAK,EAAEK,WAAW,KAAK,MAAhB,GAAyBhB,SAAzB,GAAqCC,YAF9C;AAAA,gBAIE,KAAC,aAAD;AAJF;AADF,IADF;AAWD;AAID,IAAMkB,KAAK,GAAGhB,oBAAoB,EAAlC;;AAEA,SAASiB,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,SACE,MAAC,KAAD,CAAO,SAAP;AAAiB,IAAA,aAAa,EAAE;AAAEC,MAAAA,WAAW,EAAE;AAAf,KAAhC;AAAA,eACE,KAAC,KAAD,CAAO,MAAP;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,SAAS,EAAEhB;AAFb,MADF,EAME,KAAC,KAAD,CAAO,MAAP;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,SAAS,EAAEI;AAFb,MANF,EAWE,KAAC,KAAD,CAAO,MAAP;AAEE,MAAA,IAAI,EAAC,SAFP;AAGE,MAAA,SAAS,EAAEN;AAHb,MAXF,EAgBE,KAAC,KAAD,CAAO,MAAP;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,SAAS,EAAEC;AAHb,MAhBF,EAqBE,KAAC,KAAD,CAAO,MAAP;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,SAAS,EAAEG;AAHb,MArBF,EA0BE,KAAC,KAAD,CAAO,MAAP;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,SAAS,EAAED;AAHb,MA1BF,EA+BE,KAAC,KAAD,CAAO,MAAP;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,SAAS,EAAEE,cAHb;AAIE,MAAA,OAAO,EAAE;AAAEc,QAAAA,KAAK,EAAE;AAAT;AAJX,MA/BF;AAAA,IADF;AAyCD","sourcesContent":["// If you are not familiar with React Navigation, check out the \"Fundamentals\" guide:\n// https://reactnavigation.org/docs/getting-started\nimport {\n  DarkTheme,\n  DefaultTheme,\n  NavigationContainer,\n} from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport HistoryScreen from \"../screens/HistoryScreen\";\nimport SendScreen from \"../screens/SendScreen\";\nimport Login from \"../screens/LoginScreen\";\nimport Signup from \"../screens/SignupScreen\";\nimport SettingsScreen from \"../screens/SettingsScreen\";\nimport NotFoundScreen from \"../screens/NotFoundScreen\";\nimport BottomTabNavigator from \"./BottomTabNavigator\";\nimport LinkingConfiguration from \"./LinkingConfiguration\";\nimport { UserContext } from \"../screens/UserContext\";\nimport React, { useState } from \"react\";\n\nexport default function Navigation({ colorScheme }) {\n  const [value, setValue] = useState({});\n  return (\n    <UserContext.Provider value={{ value, setValue }}>\n      <NavigationContainer\n        linking={LinkingConfiguration}\n        theme={colorScheme === \"dark\" ? DarkTheme : DefaultTheme}\n      >\n        <RootNavigator />\n\n      </NavigationContainer>\n    </UserContext.Provider>\n  );\n}\n\n// A root stack navigator is often used for displaying modals on top of all other content\n// Read more here: https://reactnavigation.org/docs/modal\nconst Stack = createStackNavigator();\n\nfunction RootNavigator(props) {\n  return (\n    <Stack.Navigator screenOptions={{ headerShown: false }}>\n      <Stack.Screen\n        name=\"Login\"\n        component={Login}\n\n      />\n      <Stack.Screen\n        name=\"Root\"\n        component={BottomTabNavigator}\n\n      />\n      <Stack.Screen\n\n        name=\"History\"\n        component={HistoryScreen}\n      />\n      <Stack.Screen\n\n        name=\"Send\"\n        component={SendScreen}\n      />\n      <Stack.Screen\n\n        name=\"Settings\"\n        component={SettingsScreen}\n      />\n      <Stack.Screen\n\n        name=\"Signup\"\n        component={Signup}\n      />\n      <Stack.Screen\n\n        name=\"NotFound\"\n        component={NotFoundScreen}\n        options={{ title: \"Oops!\" }}\n      />\n\n    </Stack.Navigator>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}