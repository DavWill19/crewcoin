{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Form } from \"react-native-web/dist/index\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport { NativeBaseProvider, Input, Center, Text, Box, Heading, Header, Divider, Stack, HStack, AspectRatio, Button } from 'native-base';\nimport { Ionicons } from '@expo/vector-icons';\nimport posts from \"./sample2\";\nimport { useNavigation } from '@react-navigation/native';\nimport { Component, useContext } from \"react\";\nimport { useState } from \"react\";\nimport { UserContext } from \"./UserContext\";\nimport moment from \"moment\";\nimport { toggleClass } from \"dom-helpers\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport default function SettingsScreen() {\n  var _useContext = useContext(UserContext),\n      value = _useContext.value,\n      setValue = _useContext.setValue;\n\n  var _useNavigation = useNavigation(),\n      navigation = _useNavigation.navigation;\n\n  return _jsx(NativeBaseProvider, {\n    children: _jsxs(ScrollView, {\n      children: [_jsx(AppBar, {}), _jsxs(ImageBackground, {\n        imageStyle: {\n          opacity: 0.7\n        },\n        style: styles.image2,\n        source: require(\"../assets/images/splashbg2.png\"),\n        resizeMode: \"cover\",\n        children: [_jsx(Divider, {}), _jsx(Center, {\n          children: _jsx(KeyboardAvoidingView, {\n            behavior: \"position\",\n            children: Example(value)\n          })\n        })]\n      })]\n    })\n  });\n}\n\nfunction AppBar() {\n  var navigation = useNavigation();\n  return _jsxs(_Fragment, {\n    children: [_jsx(Box, {\n      safeAreaTop: true,\n      backgroundColor: \"gray.100\"\n    }), _jsxs(HStack, {\n      bg: \"amber.300\",\n      px: \"1\",\n      alignItems: \"center\",\n      borderColor: \"gray.300\",\n      borderWidth: \"1\",\n      children: [_jsx(HStack, {\n        space: \"4\",\n        alignItems: \"center\",\n        children: _jsx(Ionicons, {\n          name: \"md-chevron-back-sharp\",\n          size: 24,\n          color: \"black\",\n          onPress: function onPress() {\n            navigation.navigate('Wallet');\n          }\n        })\n      }), _jsx(HStack, {\n        bg: \"amber.300\",\n        py: \"2\",\n        px: \"1\",\n        children: _jsx(Center, {\n          children: _jsx(Heading, {\n            size: \"lg\",\n            color: \"black\",\n            children: \"Account Settings\"\n          })\n        })\n      })]\n    })]\n  });\n}\n\nexport var Example = function Example(value) {\n  var navigation = useNavigation();\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      formData = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      show = _useState4[0],\n      setShow = _useState4[1];\n\n  function passwordForm(show) {\n    if (show) return _jsxs(_Fragment, {\n      children: [_jsx(Divider, {\n        mt: \"5\"\n      }), _jsx(Text, {\n        mt: \"5\",\n        children: \"New Password\"\n      }), _jsx(Input, {\n        w: \"50%\",\n        type: \"password\",\n        onChangeText: function onChangeText(value) {\n          return setData(_objectSpread(_objectSpread({}, formData), {}, {\n            newPassword: value\n          }));\n        }\n      }), _jsx(Text, {\n        children: \"Confirm Password\"\n      }), _jsx(Input, {\n        w: \"50%\",\n        type: \"password\",\n        onChangeText: function onChangeText(value) {\n          return setData(_objectSpread(_objectSpread({}, formData), {}, {\n            confirmPassword: value\n          }));\n        }\n      }), _jsx(Button, {\n        m: \"3\",\n        onPress: function onPress() {\n          if (formData.newPassword && formData.confirmPassword) {\n            if (formData.newPassword === formData.confirmPassword && formData.newPassword.length > 7 && /^(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{6,16}$/.test(formData.newPassword)) {\n              passwordChange(formData.newPassword);\n            } else {\n              Alert.alert(\"Passwords must match\", \"Password Must be at least 8 characters long and contain at least one number and one special character\", [{\n                text: \"OK\",\n                onPress: function onPress() {\n                  return console.log(\"OK Pressed\");\n                }\n              }]);\n            }\n          }\n        },\n        children: \"Submit\"\n      }), _jsx(Divider, {})]\n    });\n  }\n\n  function passwordChange(password) {\n    fetch(\"https://crewcoin.herokuapp.com/crewuser/passchange/\" + value.username, {\n      method: \"PUT\",\n      headers: {\n        authorization: \"jwt\",\n        credentials: \"same-origin\",\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        mode: \"cors\"\n      },\n      body: JSON.stringify({\n        \"password\": password\n      })\n    }).then(function (res) {\n      return res.json();\n    }).then(function (res) {\n      if (res.success) {\n        console.log(\"success\");\n        Alert.alert(\"Password Changed\", \"Your password has been changed\", [{\n          text: \"OK\",\n          onPress: function onPress() {\n            return console.log(\"OK Pressed\");\n          }\n        }]);\n      } else {\n        console.log(\"fail\");\n        Alert.alert(\"Password Change Failed\", \"Your password could not be changed\", [{\n          text: \"OK\",\n          onPress: function onPress() {\n            return console.log(\"OK Pressed\");\n          }\n        }]);\n      }\n    }).catch(function (err) {\n      console.log(err);\n    });\n  }\n\n  function toggleShow() {\n    setShow(!show);\n  }\n\n  return _jsx(_Fragment, {\n    children: _jsxs(Box, {\n      shadow: 7,\n      mt: \"5\",\n      mb: \"2\",\n      my: \"1\",\n      pt: \"6\",\n      pb: \"6\",\n      style: styles.image2,\n      maxW: \"100%\",\n      rounded: \"lg\",\n      overflow: \"hidden\",\n      borderColor: \"gray.300\",\n      borderWidth: \"1\",\n      _dark: {\n        borderColor: \"gray.900\",\n        backgroundColor: \"gray.900\"\n      },\n      _web: {\n        shadow: 2,\n        borderWidth: 0\n      },\n      _light: {\n        backgroundColor: \"gray.50\"\n      },\n      children: [_jsxs(Stack, {\n        w: \"350\",\n        p: \"6\",\n        space: 3,\n        children: [_jsx(Center, {\n          mb: \"5\",\n          backgroundColor: \"amber.200\",\n          borderTopRadius: \"10\",\n          borderBottomRadius: \"10\",\n          children: _jsx(Heading, {\n            p: \"1\",\n            textAlign: \"center\",\n            size: \"xl\",\n            ml: \"-1\",\n            children: \"My Account\"\n          })\n        }), _jsx(Divider, {}), _jsxs(HStack, {\n          space: 2,\n          children: [_jsx(Heading, {\n            size: \"sm\",\n            ml: \"-1\",\n            children: \"Name:\"\n          }), _jsx(Heading, {\n            size: \"sm\",\n            children: value.firstname + \" \" + value.lastname\n          })]\n        }), _jsx(Divider, {}), _jsxs(HStack, {\n          space: 2,\n          children: [_jsx(Heading, {\n            size: \"sm\",\n            ml: \"-1\",\n            children: \"Email:\"\n          }), _jsx(Heading, {\n            size: \"sm\",\n            children: value.username\n          })]\n        }), _jsx(Divider, {}), _jsxs(HStack, {\n          space: 2,\n          children: [_jsx(Heading, {\n            size: \"sm\",\n            ml: \"-1\",\n            children: \"Phone:\"\n          }), _jsx(Heading, {\n            size: \"sm\",\n            children: value.phone\n          })]\n        }), _jsx(Divider, {}), _jsxs(HStack, {\n          space: 2,\n          children: [_jsx(Heading, {\n            size: \"sm\",\n            ml: \"-1\",\n            children: \"Organization:\"\n          }), _jsx(Heading, {\n            size: \"sm\",\n            children: value.organization\n          })]\n        }), _jsx(Divider, {}), _jsxs(HStack, {\n          space: 2,\n          children: [_jsx(Heading, {\n            size: \"sm\",\n            ml: \"-1\",\n            children: \"Member Since:\"\n          }), _jsx(Heading, {\n            size: \"sm\",\n            children: moment(value.joined).format(\"MM/DD/YYYY\")\n          })]\n        }), _jsx(Divider, {}), _jsxs(HStack, {\n          space: 2,\n          children: [_jsx(Heading, {\n            size: \"sm\",\n            ml: \"-1\",\n            children: \"Portal ID:\"\n          }), _jsx(Heading, {\n            size: \"sm\",\n            children: value.portalId\n          })]\n        }), _jsx(Divider, {}), _jsxs(HStack, {\n          space: 2,\n          children: [_jsx(Heading, {\n            size: \"md\",\n            ml: \"-1\",\n            children: \"Account Balance:\"\n          }), _jsx(Heading, {\n            size: \"md\",\n            children: value.balance\n          })]\n        }), _jsx(Divider, {})]\n      }), _jsxs(Center, {\n        mt: \"5%\",\n        children: [_jsx(Button, {\n          shadow: 2,\n          border: \"1\",\n          borderColor: \"gray.400\",\n          borderTopRadius: \"10\",\n          borderBottomRadius: \"10\",\n          backgroundColor: \"amber.300\",\n          onPress: function onPress() {\n            toggleShow(show, setShow);\n          },\n          children: _jsx(Heading, {\n            children: \"Change Password\"\n          })\n        }), passwordForm(show), _jsx(Button, {\n          shadow: 2,\n          mt: \"4\",\n          border: \"1\",\n          borderColor: \"gray.400\",\n          borderTopRadius: \"10\",\n          borderBottomRadius: \"10\",\n          backgroundColor: \"amber.300\",\n          onPress: function onPress() {\n            navigation.navigate('Login');\n          },\n          children: _jsx(Heading, {\n            children: \"Log Out\"\n          })\n        })]\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  icon: {\n    color: 'black',\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  balance: {\n    fontSize: 25,\n    width: '100%'\n  },\n  coin: {\n    width: 200,\n    resizeMode: 'contain',\n    height: 50\n  },\n  coingif: {\n    size: '100%'\n  },\n  coingif: {\n    width: 10\n  },\n  image: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: '100%',\n    height: '100%',\n    resizeMode: 'cover'\n  },\n  image2: {\n    flex: 1\n  },\n  title: {\n    width: 400,\n    resizeMode: 'cover',\n    marginTop: -100,\n    marginBottom: -100,\n    margin: -100\n  },\n  header: {\n    marginTop: '15%',\n    marginLeft: '18%',\n    justifyContent: 'flex-start',\n    alignItems: 'flex-start',\n    backgroundColor: '#fff'\n  },\n  center: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  }\n});","map":{"version":3,"sources":["C:/Users/DavidWIlliams/Desktop/crewCoin/screens/SettingsScreen.js"],"names":["Form","NativeBaseProvider","Input","Center","Text","Box","Heading","Header","Divider","Stack","HStack","AspectRatio","Button","Ionicons","posts","useNavigation","Component","useContext","useState","UserContext","moment","toggleClass","SettingsScreen","value","setValue","navigation","opacity","styles","image2","require","Example","AppBar","navigate","formData","setData","show","setShow","passwordForm","newPassword","confirmPassword","length","test","passwordChange","Alert","alert","text","onPress","console","log","password","fetch","username","method","headers","authorization","credentials","Accept","mode","body","JSON","stringify","then","res","json","success","catch","err","toggleShow","borderColor","backgroundColor","shadow","borderWidth","firstname","lastname","phone","organization","joined","format","portalId","balance","StyleSheet","create","container","flex","alignItems","justifyContent","icon","color","fontSize","fontWeight","width","coin","resizeMode","height","coingif","size","image","title","marginTop","marginBottom","margin","header","marginLeft","center"],"mappings":"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","sourcesContent":["import { StyleSheet, ScrollView, ImageBackground, Image, Alert, Form, KeyboardAvoidingView } from \"react-native\";\r\nimport { NativeBaseProvider, Input, Center, Text, Box, Heading, Header, Divider, Stack, HStack, AspectRatio, Button } from 'native-base';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport posts from './sample2';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { Component, useContext } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { UserContext } from \"./UserContext\";\r\nimport moment from \"moment\";\r\nimport { toggleClass } from \"dom-helpers\";\r\n\r\n\r\nexport default function SettingsScreen() {\r\n    const { value, setValue } = useContext(UserContext);\r\n    const { navigation } = useNavigation();\r\n\r\n    return (\r\n        <NativeBaseProvider>\r\n            <ScrollView>\r\n                <AppBar />\r\n                <ImageBackground imageStyle=\r\n                    {{ opacity: 0.7 }} style={styles.image2} source={require('../assets/images/splashbg2.png')} resizeMode=\"cover\" >\r\n                    <Divider />\r\n                    <Center>\r\n                        <KeyboardAvoidingView behavior=\"position\" >\r\n                            {Example(value)}\r\n                        </KeyboardAvoidingView>\r\n                    </Center>\r\n                </ImageBackground>\r\n            </ScrollView>\r\n        </NativeBaseProvider>\r\n    );\r\n}\r\n\r\nfunction AppBar() {\r\n    const navigation = useNavigation();\r\n    return (\r\n        <>\r\n            <Box safeAreaTop backgroundColor=\"gray.100\" />\r\n            <HStack bg='amber.300' px=\"1\" alignItems='center' borderColor=\"gray.300\"\r\n                borderWidth=\"1\">\r\n                <HStack space=\"4\" alignItems='center'>\r\n                    <Ionicons name=\"md-chevron-back-sharp\" size={24} color=\"black\" onPress={() => { navigation.navigate('Wallet'); }} />\r\n                </HStack>\r\n\r\n\r\n                <HStack bg='amber.300' py=\"2\" px=\"1\">\r\n                    <Center><Heading size=\"lg\" color=\"black\">Account Settings</Heading></Center>\r\n                </HStack>\r\n            </HStack>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const Example = (value) => {\r\n    const navigation = useNavigation();\r\n    const [formData, setData] = useState({});\r\n    const [show, setShow] = useState(false);\r\n\r\n\r\n\r\n    function passwordForm(show) {\r\n        if (show)\r\n            return (\r\n                <>\r\n                    <Divider mt=\"5\" />\r\n                    <Text mt=\"5\">New Password</Text>\r\n                    <Input w=\"50%\" type=\"password\" onChangeText={(value) => setData({ ...formData, newPassword: value })} />\r\n                    <Text>Confirm Password</Text>\r\n                    <Input w=\"50%\" type=\"password\" onChangeText={(value) => setData({ ...formData, confirmPassword: value })} />\r\n\r\n                    <Button m=\"3\" onPress={() => {\r\n                        if (formData.newPassword && formData.confirmPassword) {\r\n                            if (formData.newPassword === formData.confirmPassword && formData.newPassword.length > 7 && /^(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{6,16}$/.test(formData.newPassword)) {\r\n                                passwordChange(formData.newPassword);\r\n                            } else {\r\n                                Alert.alert(\r\n                                    \"Passwords must match\",\r\n                                    \"Password Must be at least 8 characters long and contain at least one number and one special character\",\r\n                                    [\r\n                                        { text: \"OK\", onPress: () => console.log(\"OK Pressed\") }\r\n                                    ]\r\n                                );\r\n                            }\r\n                        }\r\n                    }}\r\n                    >Submit</Button>\r\n                    <Divider />\r\n                </>\r\n            )\r\n\r\n    }\r\n    function passwordChange(password) {\r\n        fetch(`https://crewcoin.herokuapp.com/crewuser/passchange/${value.username}`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                authorization: \"jwt\",\r\n                credentials: \"same-origin\",\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                mode: \"cors\"\r\n            },\r\n            body: JSON.stringify({\r\n                \"password\": password\r\n            }),\r\n        })\r\n\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                if (res.success) {\r\n                    console.log(\"success\");\r\n                    Alert.alert(\r\n                        \"Password Changed\",\r\n                        \"Your password has been changed\",\r\n                        [\r\n                            { text: \"OK\", onPress: () => console.log(\"OK Pressed\") }\r\n                        ]\r\n                    );\r\n                } else {\r\n                    console.log(\"fail\");\r\n                    Alert.alert(\r\n                        \"Password Change Failed\",\r\n                        \"Your password could not be changed\",\r\n                        [\r\n                            { text: \"OK\", onPress: () => console.log(\"OK Pressed\") }\r\n                        ]\r\n                    );\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            }\r\n            );\r\n    }\r\n    function toggleShow() {\r\n        setShow(!show);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Box\r\n                shadow={7}\r\n                mt=\"5\"\r\n                mb=\"2\"\r\n                my=\"1\"\r\n                pt=\"6\"\r\n                pb=\"6\"\r\n\r\n                style={styles.image2}\r\n                maxW=\"100%\"\r\n                rounded=\"lg\"\r\n                overflow=\"hidden\"\r\n                borderColor=\"gray.300\"\r\n                borderWidth=\"1\"\r\n                _dark={{\r\n                    borderColor: \"gray.900\",\r\n                    backgroundColor: \"gray.900\",\r\n                }}\r\n                _web={{\r\n                    shadow: 2,\r\n                    borderWidth: 0,\r\n                }}\r\n                _light={{\r\n                    backgroundColor: \"gray.50\",\r\n                }}\r\n            >\r\n                <Stack w=\"350\" p=\"6\" space={3}>\r\n                    <Center mb=\"5\" backgroundColor=\"amber.200\" borderTopRadius=\"10\" borderBottomRadius=\"10\">\r\n                        <Heading p=\"1\" textAlign=\"center\" size=\"xl\" ml=\"-1\">\r\n                            My Account\r\n                        </Heading>\r\n                    </Center>\r\n                    <Divider />\r\n                    <HStack space={2}>\r\n                        <Heading size=\"sm\" ml=\"-1\">\r\n                            Name:\r\n                        </Heading>\r\n                        <Heading size=\"sm\" >\r\n                            {value.firstname + \" \" + value.lastname}\r\n                        </Heading>\r\n                    </HStack>\r\n                    <Divider />\r\n                    <HStack space={2}>\r\n                        <Heading size=\"sm\" ml=\"-1\">\r\n                            Email:\r\n                        </Heading>\r\n                        <Heading size=\"sm\" >\r\n                            {value.username}\r\n                        </Heading>\r\n                    </HStack>\r\n                    <Divider />\r\n                    <HStack space={2}>\r\n                        <Heading size=\"sm\" ml=\"-1\">\r\n                            Phone:\r\n                        </Heading>\r\n                        <Heading size=\"sm\" >\r\n                            {value.phone}\r\n                        </Heading>\r\n                    </HStack>\r\n                    <Divider />\r\n                    <HStack space={2}>\r\n                        <Heading size=\"sm\" ml=\"-1\">\r\n                            Organization:\r\n                        </Heading>\r\n                        <Heading size=\"sm\" >\r\n                            {value.organization}\r\n                        </Heading>\r\n                    </HStack>\r\n                    <Divider />\r\n                    <HStack space={2}>\r\n                        <Heading size=\"sm\" ml=\"-1\">\r\n                            Member Since:\r\n                        </Heading>\r\n                        <Heading size=\"sm\" >\r\n                            {moment(value.joined).format(\"MM/DD/YYYY\")}\r\n                        </Heading>\r\n                    </HStack>\r\n                    <Divider />\r\n                    <HStack space={2}>\r\n                        <Heading size=\"sm\" ml=\"-1\">\r\n                            Portal ID:\r\n                        </Heading>\r\n                        <Heading size=\"sm\" >\r\n                            {value.portalId}\r\n                        </Heading>\r\n                    </HStack>\r\n                    <Divider />\r\n                    <HStack space={2}>\r\n                        <Heading size=\"md\" ml=\"-1\">\r\n                            Account Balance:\r\n                        </Heading>\r\n                        <Heading size=\"md\" >\r\n                            {value.balance}\r\n                        </Heading>\r\n                    </HStack>\r\n                    <Divider />\r\n                </Stack>\r\n                <Center mt=\"5%\">\r\n                    <Button shadow={2} border=\"1\" borderColor=\"gray.400\" borderTopRadius=\"10\" borderBottomRadius=\"10\" backgroundColor=\"amber.300\" onPress={() => { toggleShow(show, setShow) }}><Heading>Change Password</Heading></Button>\r\n                    {passwordForm(show)}\r\n                    <Button shadow={2} mt=\"4\" border=\"1\" borderColor=\"gray.400\" borderTopRadius=\"10\" borderBottomRadius=\"10\" backgroundColor=\"amber.300\" onPress={() => { navigation.navigate('Login') }}><Heading>Log Out</Heading></Button>\r\n                </Center>\r\n            </Box>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n    },\r\n    icon: {\r\n        color: 'black',\r\n        fontSize: 16,\r\n        fontWeight: 'bold',\r\n\r\n\r\n    },\r\n    balance: {\r\n        fontSize: 25,\r\n        width: '100%',\r\n    },\r\n    coin: {\r\n        width: 200,\r\n        resizeMode: 'contain',\r\n        height: 50,\r\n    },\r\n    coingif: {\r\n        size: '100%',\r\n    },\r\n    coingif: {\r\n        width: 10,\r\n    },\r\n    image: {\r\n        flex: 1,\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        width: '100%',\r\n        height: '100%',\r\n        resizeMode: 'cover',\r\n    },\r\n    image2: {\r\n        flex: 1,\r\n    },\r\n    title: {\r\n        width: 400,\r\n        resizeMode: 'cover',\r\n        marginTop: -100,\r\n        marginBottom: -100,\r\n        margin: -100,\r\n    },\r\n    header: {\r\n        marginTop: '15%',\r\n        marginLeft: '18%',\r\n        justifyContent: 'flex-start',\r\n        alignItems: 'flex-start',\r\n        backgroundColor: '#fff',\r\n    },\r\n    center: {\r\n        flex: 1,\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n    },\r\n});"]},"metadata":{},"sourceType":"module"}