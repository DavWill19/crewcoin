{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport { NativeBaseProvider, Image, Button, Input, Center, Text, Box, Heading, Header, Divider, Stack, HStack, VStack, AspectRatio } from 'native-base';\nimport { Ionicons } from '@expo/vector-icons';\nimport { ScrollView } from \"react-native-gesture-handler\";\nimport posts from \"./sample2\";\nimport { Component, useContext, useEffect, useMemo } from \"react\";\nimport { useState } from \"react\";\nimport { UserContext } from \"./UserContext\";\nimport moment from \"moment\";\nimport * as ImagePicker from 'expo-image-picker';\nimport * as Permissions from 'expo-permissions';\nimport * as ImageManipulator from 'expo-image-manipulator';\nimport * as MediaLibrary from 'expo-media-library';\nimport { useNavigation } from '@react-navigation/native';\nimport { style, width } from \"dom-helpers\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport default function TabTwoScreen() {\n  var _useContext = useContext(UserContext),\n      value = _useContext.value,\n      setValue = _useContext.setValue;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      postsData = _useState2[0],\n      setPosts = _useState2[1];\n\n  function Post() {\n    var _useState3 = useState({}),\n        _useState4 = _slicedToArray(_useState3, 2),\n        postData = _useState4[0],\n        setPost = _useState4[1];\n\n    var imageUrl = postData.imageUrl;\n\n    function handlePost(setPosts) {\n      if (!postData.title || !postData.announcement) {\n        Alert.alert(\"Please fill in all fields!\");\n      } else {\n        fetch(\"https://crewcoin.herokuapp.com/announcements\", {\n          method: \"POST\",\n          headers: {\n            authorization: \"jwt\",\n            credentials: \"same-origin\",\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            mode: \"cors\"\n          },\n          body: JSON.stringify({\n            \"title\": postData.title,\n            \"description\": postData.announcement,\n            \"image\": postData.imageUrl,\n            \"portalId\": value.portalId\n          })\n        }).then(function (res) {\n          return res.json();\n        }).then(function (res) {\n          if (res.success) {\n            setPosts(function (postsData) {\n              return [].concat(_toConsumableArray(postsData), [res.announcements]);\n            });\n            Alert.alert(\"Success!\", \"Your post has been successfully posted\", [{\n              text: \"OK\",\n              onPress: function onPress() {\n                return console.log(\"OK Pressed\");\n              }\n            }]);\n            setPost({\n              title: \"\",\n              announcement: \"\",\n              imageUrl: \"\"\n            });\n          } else {\n            Alert.alert(\"Something went wrong\", \"Error\", [{\n              text: \"OK\",\n              onPress: function onPress() {\n                return console.log(\"OK Pressed\");\n              }\n            }]);\n          }\n        }).catch(function (err) {\n          Alert.alert(\"Error\", \"\" + err, [{\n            text: \"OK\",\n            onPress: function onPress() {\n              return console.log(\"OK Pressed\");\n            }\n          }]);\n        });\n      }\n    }\n\n    var getImageFromCamera = function getImageFromCamera() {\n      var cameraPermission, cameraRollPermission, capturedImage;\n      return _regeneratorRuntime.async(function getImageFromCamera$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA));\n\n            case 2:\n              cameraPermission = _context.sent;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA_ROLL));\n\n            case 5:\n              cameraRollPermission = _context.sent;\n\n              if (!(cameraPermission.status === 'granted' && cameraRollPermission.status === 'granted')) {\n                _context.next = 11;\n                break;\n              }\n\n              _context.next = 9;\n              return _regeneratorRuntime.awrap(ImagePicker.launchCameraAsync({\n                allowsEditing: true,\n                aspect: [1, 1]\n              }));\n\n            case 9:\n              capturedImage = _context.sent;\n\n              if (!capturedImage.cancelled) {\n                console.log(capturedImage);\n                processImage(capturedImage.uri);\n                MediaLibrary.createAssetAsync(capturedImage.uri);\n              }\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    var getImageFromGallery = function getImageFromGallery() {\n      var cameraPermission, cameraRollPermission, capturedImage;\n      return _regeneratorRuntime.async(function getImageFromGallery$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA));\n\n            case 2:\n              cameraPermission = _context2.sent;\n              _context2.next = 5;\n              return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA_ROLL));\n\n            case 5:\n              cameraRollPermission = _context2.sent;\n\n              if (!(cameraPermission.status === 'granted' && cameraRollPermission.status === 'granted')) {\n                _context2.next = 11;\n                break;\n              }\n\n              _context2.next = 9;\n              return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n                allowsEditing: true,\n                aspect: [1, 1]\n              }));\n\n            case 9:\n              capturedImage = _context2.sent;\n\n              if (!capturedImage.cancelled) {\n                processImage(capturedImage.uri);\n              }\n\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    var processImage = function processImage(imgUri) {\n      var processedImage;\n      return _regeneratorRuntime.async(function processImage$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _regeneratorRuntime.awrap(ImageManipulator.manipulateAsync(imgUri, [{\n                resize: {\n                  width: 400\n                }\n              }], {\n                format: ImageManipulator.SaveFormat.PNG\n              }));\n\n            case 2:\n              processedImage = _context3.sent;\n              setPost(_objectSpread(_objectSpread({}, postData), {}, {\n                imageUrl: processedImage.uri\n              }));\n              console.log(\"processedImage\", processedImage);\n\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    if (value.admin) {\n      function TempImage() {\n        if (imageUrl) {\n          return _jsx(Image, {\n            alt: \"temp\",\n            shadow: 9,\n            style: {\n              width: 300,\n              height: 300,\n              borderRadius: 5\n            },\n            source: {\n              uri: imageUrl\n            },\n            resizeMode: \"contain\"\n          });\n        } else {\n          return null;\n        }\n      }\n\n      return _jsx(_Fragment, {\n        children: _jsx(Box, {\n          shadow: 2,\n          mt: \"2\",\n          mb: \"2\",\n          pt: \"2\",\n          style: styles.image2,\n          maxW: \"360\",\n          rounded: \"lg\",\n          overflow: \"hidden\",\n          borderColor: \"gray.100\",\n          borderWidth: \"1\",\n          _dark: {\n            borderColor: \"gray.900\",\n            backgroundColor: \"gray.900\"\n          },\n          _web: {\n            shadow: 2,\n            borderWidth: 0\n          },\n          _light: {\n            backgroundColor: \"gray.50\"\n          },\n          children: _jsxs(Stack, {\n            w: \"100%\",\n            p: \"4\",\n            space: 3,\n            children: [_jsxs(HStack, {\n              alignItems: \"center\",\n              children: [_jsx(Heading, {\n                size: \"md\",\n                ml: \"-1\",\n                children: \"New Announcement\"\n              }), _jsx(TouchableOpacity, {\n                onPress: function onPress() {\n                  getImageFromCamera();\n                },\n                children: _jsx(Image, {\n                  mt: \"4\",\n                  style: styles.image3,\n                  source: require(\"../assets/images/camera1.png\"),\n                  resizeMode: \"contain\"\n                })\n              }), _jsx(TouchableOpacity, {\n                onPress: function onPress() {\n                  getImageFromGallery();\n                },\n                children: _jsx(Image, {\n                  mt: \"4\",\n                  style: styles.image4,\n                  source: require(\"../assets/images/camera.png\"),\n                  resizeMode: \"contain\"\n                })\n              })]\n            }), _jsx(Center, {\n              children: _jsx(TempImage, {})\n            }), _jsx(Input, {\n              value: postData.title,\n              onChangeText: function onChangeText(value) {\n                return setPost(_objectSpread(_objectSpread({}, postData), {}, {\n                  title: value\n                }));\n              },\n              placeholder: \"Title\"\n            }), _jsx(Input, {\n              value: postData.announcement,\n              onChangeText: function onChangeText(value) {\n                return setPost(_objectSpread(_objectSpread({}, postData), {}, {\n                  announcement: value\n                }));\n              },\n              placeholder: \"Announcement\"\n            }), _jsx(Button, {\n              onPress: function onPress() {\n                handlePost(setPosts);\n              },\n              children: \" Post \"\n            })]\n          })\n        })\n      });\n    } else {\n      return null;\n    }\n  }\n\n  var Posts = function Posts() {\n    var _useState5 = useState([]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        postsData = _useState6[0],\n        setPosts = _useState6[1];\n\n    useEffect(function () {\n      fetch(\"https://crewcoin.herokuapp.com/announcements\", {\n        method: \"GET\",\n        headers: {\n          authorization: \"jwt\",\n          credentials: \"same-origin\",\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          mode: \"cors\"\n        }\n      }).then(function (res) {\n        return res.json();\n      }).then(function (res) {\n        if (res.success) {\n          setPosts(res.announcements);\n          console.log(\"another fetch\");\n        } else {\n          Alert.alert(\"Something went wrong\", \"Error\", [{\n            text: \"OK\",\n            onPress: function onPress() {\n              return console.log(\"OK Pressed\");\n            }\n          }]);\n        }\n      }).catch(function (err) {\n        Alert.alert(\"Error\", \"Please check internet connection!\", [{\n          text: \"OK\",\n          onPress: function onPress() {\n            return console.log(\"OK Pressed\");\n          }\n        }]);\n      });\n    }, []);\n    var posts = postsData.sort(function (a, b) {\n      return new Date(b.createdAt) - new Date(a.createdAt);\n    });\n\n    function deleteButton(posts) {\n      if (value.admin) {\n        return _jsx(Button, {\n          colorScheme: \"rose\",\n          mb: \"1\",\n          onPress: function onPress() {\n            Alert.alert(\"Remove Post\", \"Are you sure you want to remove this post?\", [{\n              text: \"No\",\n              onPress: function onPress() {\n                return console.log(\"Cancel Pressed\");\n              },\n              style: \"cancel\"\n            }, {\n              text: \"Yes\",\n              onPress: function onPress() {\n                deletePost(posts._id);\n              }\n            }], {\n              cancelable: false\n            });\n          },\n          children: \"Delete Post\"\n        });\n      } else {\n        return null;\n      }\n    }\n\n    function deletePost(posts) {\n      fetch(\"https://crewcoin.herokuapp.com/announcements/delete/\" + posts, {\n        method: \"DELETE\",\n        headers: {\n          authorization: \"jwt\",\n          credentials: \"same-origin\",\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          mode: \"cors\"\n        },\n        body: JSON.stringify({\n          \"post\": posts\n        })\n      }).then(function (res) {\n        return res.json();\n      }).then(function (res) {\n        if (res.success) {\n          setPosts(function (postsData) {\n            return postsData.filter(function (post) {\n              return post._id !== res.postId;\n            });\n          });\n          setValue(_objectSpread(_objectSpread({}, value), {}, {\n            posts: res.posts\n          }));\n          Alert.alert(\"Post\", \"Removed\", [{\n            text: \"OK\",\n            onPress: function onPress() {\n              return console.log(\"OK Pressed\");\n            }\n          }]);\n          console.log(res.prizes);\n        } else {\n          Alert.alert(\"Something went wrong\", \"Error\", [{\n            text: \"OK\",\n            onPress: function onPress() {\n              return console.log(\"OK Pressed\");\n            }\n          }]);\n        }\n      }).catch(function (err) {\n        Alert.alert(\"Error\", \"Please check internet connection!\", [{\n          text: \"OK\",\n          onPress: function onPress() {\n            return console.log(\"OK Pressed\");\n          }\n        }]);\n      });\n    }\n\n    return posts.map(function (posts) {\n      function postImage(posts) {\n        if (posts.image) {\n          return _jsx(Image, {\n            shadow: 9,\n            style: {\n              width: 300,\n              height: 300,\n              borderRadius: 5\n            },\n            alt: posts.createdAt,\n            source: {\n              uri: posts.image\n            }\n          });\n        } else {\n          return null;\n        }\n      }\n\n      return _jsxs(Box, {\n        shadow: 2,\n        mt: \"2\",\n        mb: \"2\",\n        style: styles.image2,\n        maxW: \"360\",\n        rounded: \"lg\",\n        overflow: \"hidden\",\n        borderColor: \"gray.300\",\n        borderWidth: \"1\",\n        _dark: {\n          borderColor: \"gray.900\",\n          backgroundColor: \"gray.900\"\n        },\n        _web: {\n          shadow: 2,\n          borderWidth: 0\n        },\n        _light: {\n          backgroundColor: \"gray.50\"\n        },\n        children: [_jsx(Box, {\n          pt: \"4\",\n          children: postImage(posts)\n        }), _jsxs(Stack, {\n          w: \"330\",\n          p: \"4\",\n          space: 3,\n          children: [_jsx(Stack, {\n            children: _jsx(Center, {\n              children: _jsx(Heading, {\n                size: \"md\",\n                ml: \"-1\",\n                children: posts.title\n              })\n            })\n          }), _jsx(Divider, {}), _jsx(Text, {\n            fontWeight: \"400\",\n            fontSize: 18,\n            children: posts.description\n          }), _jsx(Divider, {}), _jsxs(HStack, {\n            alignItems: \"center\",\n            space: 2,\n            justifyContent: \"space-between\",\n            children: [_jsxs(HStack, {\n              alignItems: \"center\",\n              children: [_jsx(Image, {\n                style: styles.coin2,\n                alt: \"icon\",\n                source: require(\"../assets/images/icon3.gif\")\n              }), _jsx(Text, {\n                color: \"yellow.600\",\n                _dark: {\n                  color: \"warmGray.200\"\n                },\n                fontWeight: \"400\",\n                bold: \"true\",\n                children: moment(posts.createdAt).format(\"MM/DD/YYYY h:mma\")\n              })]\n            }), deleteButton(posts)]\n          })]\n        })]\n      });\n    });\n  };\n\n  return _jsxs(NativeBaseProvider, {\n    children: [_jsx(AppBar, {}), _jsx(ImageBackground, {\n      imageStyle: {\n        opacity: 0.5\n      },\n      style: styles.image,\n      source: require(\"../assets/images/splashbg2.png\"),\n      resizeMode: \"cover\",\n      children: _jsxs(ScrollView, {\n        children: [_jsx(Divider, {}), _jsxs(Center, {\n          children: [_jsx(Post, {}), _jsx(Posts, {})]\n        })]\n      })\n    })]\n  });\n}\n\nfunction AppBar() {\n  var _useContext2 = useContext(UserContext),\n      value = _useContext2.value,\n      setValue = _useContext2.setValue;\n\n  return _jsxs(_Fragment, {\n    children: [_jsx(Box, {\n      safeAreaTop: true,\n      backgroundColor: \"#f2f2f2\"\n    }), _jsxs(HStack, {\n      borderColor: \"gray.300\",\n      borderWidth: \"1\",\n      bg: \"amber.300\",\n      px: \"1\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      children: [_jsx(HStack, {\n        space: \"4\",\n        alignItems: \"center\",\n        children: _jsx(Image, {\n          style: styles.coin,\n          source: require(\"../assets/images/crewcoinlogo.png\")\n        })\n      }), _jsx(HStack, {\n        space: \"4\",\n        children: _jsx(Text, {\n          px: \"1\",\n          style: styles.icon,\n          children: value.firstname + \" \" + value.lastname\n        })\n      })]\n    })]\n  });\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  icon: {\n    color: 'black',\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  balance: {\n    fontSize: 25,\n    width: '100%'\n  },\n  coin: {\n    width: 200,\n    resizeMode: 'contain',\n    height: 50\n  },\n  coin2: {\n    width: 300,\n    resizeMode: 'contain',\n    height: 50,\n    marginLeft: \"-45%\",\n    marginRight: \"-36%\",\n    marginTop: \"-1%\"\n  },\n  coingif: {\n    size: '100%'\n  },\n  coingif: {\n    width: 10\n  },\n  image: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: '100%',\n    height: '100%',\n    resizeMode: 'cover'\n  },\n  image2: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: 450,\n    resizeMode: 'cover'\n  },\n  image3: {\n    width: 45,\n    resizeMode: 'contain',\n    marginBottom: -85,\n    marginTop: -90,\n    marginLeft: 35\n  },\n  image4: {\n    width: 51,\n    resizeMode: 'contain',\n    marginBottom: -85,\n    marginTop: -90,\n    marginLeft: 10\n  },\n  title: {\n    width: 400,\n    resizeMode: 'cover',\n    marginTop: -100,\n    marginBottom: -100,\n    margin: -100\n  },\n  header: {\n    marginTop: '15%',\n    marginLeft: '18%',\n    justifyContent: 'flex-start',\n    alignItems: 'flex-start',\n    backgroundColor: '#fff'\n  },\n  center: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  }\n});","map":{"version":3,"sources":["C:/Users/DavidWIlliams/Desktop/crewCoin/screens/TabTwoScreen.js"],"names":["NativeBaseProvider","Image","Button","Input","Center","Text","Box","Heading","Header","Divider","Stack","HStack","VStack","AspectRatio","Ionicons","ScrollView","posts","Component","useContext","useEffect","useMemo","useState","UserContext","moment","ImagePicker","Permissions","ImageManipulator","MediaLibrary","useNavigation","style","width","TabTwoScreen","value","setValue","postsData","setPosts","Post","postData","setPost","imageUrl","handlePost","title","announcement","Alert","alert","fetch","method","headers","authorization","credentials","Accept","mode","body","JSON","stringify","portalId","then","res","json","success","announcements","text","onPress","console","log","catch","err","getImageFromCamera","askAsync","CAMERA","cameraPermission","CAMERA_ROLL","cameraRollPermission","status","launchCameraAsync","allowsEditing","aspect","capturedImage","cancelled","processImage","uri","createAssetAsync","getImageFromGallery","launchImageLibraryAsync","imgUri","manipulateAsync","resize","format","SaveFormat","PNG","processedImage","admin","TempImage","height","borderRadius","styles","image2","borderColor","backgroundColor","shadow","borderWidth","image3","require","image4","Posts","sort","a","b","Date","createdAt","deleteButton","deletePost","_id","cancelable","filter","post","postId","prizes","map","postImage","image","description","coin2","color","opacity","AppBar","coin","icon","firstname","lastname","StyleSheet","create","container","flex","alignItems","justifyContent","fontSize","fontWeight","balance","resizeMode","marginLeft","marginRight","marginTop","coingif","size","marginBottom","margin","header","center"],"mappings":"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","sourcesContent":["import { StyleSheet, ImageBackground, TouchableOpacity, Alert, RefreshControl } from \"react-native\";\nimport { NativeBaseProvider, Image, Button, Input, Center, Text, Box, Heading, Header, Divider, Stack, HStack, VStack, AspectRatio } from 'native-base';\nimport { Ionicons } from '@expo/vector-icons';\nimport { ScrollView } from \"react-native-gesture-handler\";\nimport posts from './sample2';\nimport { Component, useContext, useEffect, useMemo } from \"react\";\nimport { useState } from \"react\";\nimport { UserContext } from \"./UserContext\";\nimport moment from \"moment\";\nimport * as ImagePicker from 'expo-image-picker';\nimport * as Permissions from 'expo-permissions';\nimport * as ImageManipulator from 'expo-image-manipulator';\nimport * as MediaLibrary from 'expo-media-library';\nimport { useNavigation } from '@react-navigation/native';\nimport { style, width } from \"dom-helpers\";\n\n\n\nexport default function TabTwoScreen() {\n  const { value, setValue } = useContext(UserContext);\n  const [postsData, setPosts] = useState([]);\n\n  function Post() {\n    const [postData, setPost] = useState({});\n    const imageUrl = postData.imageUrl;\n\n    function handlePost(setPosts) {\n\n      if (!postData.title || !postData.announcement) {\n        Alert.alert(\"Please fill in all fields!\");\n      } else {\n      fetch(`https://crewcoin.herokuapp.com/announcements`, {\n        method: \"POST\",\n        headers: {\n          authorization: \"jwt\",\n          credentials: \"same-origin\",\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          mode: \"cors\"\n        },\n        body: JSON.stringify({\n          \"title\": postData.title,\n          \"description\": postData.announcement,\n          \"image\": postData.imageUrl,\n          \"portalId\": value.portalId,\n        }),\n      })\n\n        .then(res => res.json())\n        .then(res => {\n          if (res.success) {\n            setPosts(postsData => [...postsData, res.announcements])\n            Alert.alert(\n              \"Success!\",\n              \"Your post has been successfully posted\",\n              [\n                { text: \"OK\", onPress: () => console.log(\"OK Pressed\") }\n              ]\n            );\n            setPost({ title: \"\", announcement: \"\", imageUrl: \"\" });\n          } else {\n            Alert.alert(\n              \"Something went wrong\",\n              `Error`,\n              [\n                { text: \"OK\", onPress: () => console.log(\"OK Pressed\") }\n              ]\n            );\n          }\n        })\n        .catch(err => {\n          Alert.alert(\n            `Error`,\n            `${err}`,\n            [\n\n              { text: \"OK\", onPress: () => console.log(\"OK Pressed\") }\n            ]\n          )\n        }\n        );\n    }\n  }\n  \n\n    let getImageFromCamera = async () => {\n      const cameraPermission = await Permissions.askAsync(Permissions.CAMERA);\n      const cameraRollPermission = await Permissions.askAsync(Permissions.CAMERA_ROLL);\n\n      if (cameraPermission.status === 'granted' && cameraRollPermission.status === 'granted') {\n        const capturedImage = await ImagePicker.launchCameraAsync({\n          allowsEditing: true,\n          aspect: [1, 1]\n        });\n        if (!capturedImage.cancelled) {\n          console.log(capturedImage);\n          processImage(capturedImage.uri);\n          MediaLibrary.createAssetAsync(capturedImage.uri);\n        }\n      }\n    }\n    let getImageFromGallery = async () => {\n      const cameraPermission = await Permissions.askAsync(Permissions.CAMERA);\n      const cameraRollPermission = await Permissions.askAsync(Permissions.CAMERA_ROLL);\n\n      if (cameraPermission.status === 'granted' && cameraRollPermission.status === 'granted') {\n        const capturedImage = await ImagePicker.launchImageLibraryAsync({\n          allowsEditing: true,\n          aspect: [1, 1]\n        });\n        if (!capturedImage.cancelled) {\n          processImage(capturedImage.uri);\n        }\n      }\n    }\n    let processImage = async (imgUri) => {\n      const processedImage = await ImageManipulator.manipulateAsync(imgUri,\n        [{ resize: { width: 400 } }],\n        { format: ImageManipulator.SaveFormat.PNG }\n      );\n      setPost({ ...postData, imageUrl: processedImage.uri })\n      console.log(\"processedImage\", processedImage)\n    }\n\n    if (value.admin) {\n      function TempImage() {\n        if (imageUrl) {\n          return (\n            <Image alt=\"temp\" shadow={9} style={{ width: 300, height: 300, borderRadius: 5 }}\n              source={{ uri: imageUrl }} resizeMode=\"contain\" />\n          )\n        } else {\n          return null;\n        }\n      }\n    \n\n      return (\n\n        <>\n          <Box\n            shadow={2}\n            mt=\"2\"\n            mb=\"2\"\n            pt=\"2\"\n            style={styles.image2}\n            maxW=\"360\"\n            rounded=\"lg\"\n            overflow=\"hidden\"\n            borderColor=\"gray.100\"\n            borderWidth=\"1\"\n            _dark={{\n              borderColor: \"gray.900\",\n              backgroundColor: \"gray.900\",\n            }}\n            _web={{\n              shadow: 2,\n              borderWidth: 0,\n            }}\n            _light={{\n              backgroundColor: \"gray.50\",\n            }}\n          >\n            <Stack w=\"100%\" p=\"4\" space={3}>\n              <HStack alignItems=\"center\">\n                <Heading size=\"md\" ml=\"-1\" >\n                  New Announcement\n                </Heading>\n                <TouchableOpacity onPress={() => { getImageFromCamera() }}>\n                  <Image mt=\"4\" style={styles.image3} source={require('../assets/images/camera1.png')} resizeMode=\"contain\" />\n                </TouchableOpacity>\n                <TouchableOpacity onPress={() => { getImageFromGallery() }}>\n                  <Image mt=\"4\" style={styles.image4} source={require('../assets/images/camera.png')} resizeMode=\"contain\" />\n                </TouchableOpacity>\n              </HStack>\n              <Center>\n                <TempImage />\n              </Center>\n              <Input value={postData.title} onChangeText={(value) => setPost({ ...postData, title: value })} placeholder=\"Title\" />\n              <Input value={postData.announcement} onChangeText={(value) => setPost({ ...postData, announcement: value })} placeholder=\"Announcement\" />\n              {/* <Divider />\n            <Image style={styles.image3} source={require('../assets/images/camera.png')} resizeMode=\"contain\" />\n            <Divider /> */}\n              <Button onPress={() => { handlePost(setPosts) }}> Post </Button>\n            </Stack>\n          </Box>\n\n\n        </>\n      )\n    } else {\n      return null\n    }\n  }\n\n\n  const Posts = () => {\n    const [postsData, setPosts] = useState([]);\n    useEffect(() => {\n      fetch(`https://crewcoin.herokuapp.com/announcements`, {\n        method: \"GET\",\n        headers: {\n          authorization: \"jwt\",\n          credentials: \"same-origin\",\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          mode: \"cors\"\n        },\n      })\n\n        .then(res => res.json())\n        .then(res => {\n          if (res.success) {\n            setPosts(res.announcements);\n            console.log(\"another fetch\")\n          } else {\n            Alert.alert(\n              \"Something went wrong\",\n              `Error`,\n              [\n                { text: \"OK\", onPress: () => console.log(\"OK Pressed\") }\n              ]\n            );\n          }\n        })\n        .catch(err => {\n          Alert.alert(\n            `Error`,\n            \"Please check internet connection!\",\n            [\n              { text: \"OK\", onPress: () => console.log(\"OK Pressed\") }\n            ]\n          )\n        }\n        );\n    }, []);\n\n    let posts = postsData.sort(function (a, b) {\n      // Turn your strings into dates, and then subtract them\n      // to get a value that is either negative, positive, or zero.\n      return new Date(b.createdAt) - new Date(a.createdAt);\n    });\n    function deleteButton(posts) {\n      if (value.admin) {\n        return (\n          <Button colorScheme=\"rose\" mb=\"1\" onPress={() => {\n            Alert.alert(\n              \"Remove Post\",\n              \"Are you sure you want to remove this post?\",\n              [\n                {\n                  text: \"No\",\n                  onPress: () => console.log(\"Cancel Pressed\"),\n                  style: \"cancel\"\n                },\n                {\n                  text: \"Yes\", onPress: () => {\n                    deletePost(posts._id)\n                  }\n                }\n              ],\n              { cancelable: false }\n            );\n          }}>Delete Post</Button>\n        )\n      } else {\n        return null;\n      }\n    }\n\n    function deletePost(posts) {\n      fetch(`https://crewcoin.herokuapp.com/announcements/delete/${posts}`, {\n        method: \"DELETE\",\n        headers: {\n          authorization: \"jwt\",\n          credentials: \"same-origin\",\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          mode: \"cors\"\n        },\n        body: JSON.stringify({\n          \"post\": posts\n        }),\n      })\n\n        .then(res => res.json())\n        .then(res => {\n          if (res.success) {\n            setPosts(postsData => postsData.filter(post => post._id !== res.postId))\n            setValue({ ...value, posts: res.posts })\n            Alert.alert(\n              \"Post\",\n              `Removed`,\n              [\n                { text: \"OK\", onPress: () => console.log(\"OK Pressed\") }\n              ]\n            );\n            console.log(res.prizes)\n          } else {\n            Alert.alert(\n              \"Something went wrong\",\n              `Error`,\n              [\n                { text: \"OK\", onPress: () => console.log(\"OK Pressed\") }\n              ]\n            );\n          }\n        })\n        .catch(err => {\n          Alert.alert(\n            `Error`,\n            \"Please check internet connection!\",\n            [\n              { text: \"OK\", onPress: () => console.log(\"OK Pressed\") }\n            ]\n          )\n        }\n        );\n    }\n\n    return (\n      posts.map(posts => {\n        function postImage(posts) {\n          if (posts.image) {\n            return (\n              <Image\n                shadow={9}\n                style={{ width: 300, height: 300, borderRadius: 5 }}\n                alt={posts.createdAt}\n                source={{ uri: posts.image }}\n              />\n            )\n          } else {\n            return null;\n          }\n        }\n        return (\n          <Box\n            shadow={2}\n            mt=\"2\"\n            mb=\"2\"\n            style={styles.image2}\n            maxW=\"360\"\n            rounded=\"lg\"\n            overflow=\"hidden\"\n            borderColor=\"gray.300\"\n            borderWidth=\"1\"\n            _dark={{\n              borderColor: \"gray.900\",\n              backgroundColor: \"gray.900\",\n            }}\n            _web={{\n              shadow: 2,\n              borderWidth: 0,\n            }}\n            _light={{\n              backgroundColor: \"gray.50\",\n            }}\n          >\n            <Box pt=\"4\">\n              {postImage(posts)}\n            </Box>\n            <Stack w=\"330\" p=\"4\" space={3}>\n              <Stack>\n                <Center>\n                  <Heading size=\"md\" ml=\"-1\">\n                    {posts.title}\n                  </Heading>\n                </Center>\n              </Stack>\n              <Divider />\n              <Text fontWeight=\"400\" fontSize={18}>\n                {posts.description}\n              </Text>\n              <Divider />\n              <HStack alignItems=\"center\" space={2} justifyContent=\"space-between\">\n                <HStack alignItems=\"center\">\n\n                  <Image style={styles.coin2} alt=\"icon\" source={require('../assets/images/icon3.gif')} />\n                  <Text\n                    color=\"yellow.600\"\n                    _dark={{\n                      color: \"warmGray.200\",\n                    }}\n                    fontWeight=\"400\"\n                    bold=\"true\"\n                  >\n                    {moment(posts.createdAt).format(\"MM/DD/YYYY h:mma\")}\n                  </Text>\n                </HStack>\n                {deleteButton(posts)}\n              </HStack>\n            </Stack>\n          </Box>\n        )\n      })\n    )\n  }\n\n\n  return (\n    <NativeBaseProvider>\n      <AppBar />\n      <ImageBackground imageStyle=\n        {{ opacity: 0.5 }} style={styles.image} source={require('../assets/images/splashbg2.png')} resizeMode=\"cover\" >\n        <ScrollView>\n          <Divider />\n          <Center>\n            <Post />\n            <Posts />\n          </Center>\n        </ScrollView>\n      </ImageBackground>\n    </NativeBaseProvider>\n  );\n}\n\nfunction AppBar() {\n  const { value, setValue } = useContext(UserContext);\n  return (\n    <>\n      <Box safeAreaTop backgroundColor=\"#f2f2f2\" />\n      <HStack borderColor=\"gray.300\"\n        borderWidth=\"1\" bg='amber.300' px=\"1\" justifyContent='space-between' alignItems='center'>\n        <HStack space=\"4\" alignItems='center'>\n          <Image style={styles.coin} source={require('../assets/images/crewcoinlogo.png')} />\n        </HStack>\n        <HStack space=\"4\">\n          <Text px=\"1\" style={styles.icon}>\n            {value.firstname + \" \" + value.lastname}\n          </Text>\n        </HStack>\n      </HStack>\n\n    </>\n  )\n}\n\n\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  icon: {\n    color: 'black',\n    fontSize: 16,\n    fontWeight: 'bold',\n\n\n  },\n  balance: {\n    fontSize: 25,\n    width: '100%',\n  },\n  coin: {\n    width: 200,\n    resizeMode: 'contain',\n    height: 50,\n  },\n  coin2: {\n    width: 300,\n    resizeMode: 'contain',\n    height: 50,\n    marginLeft: \"-45%\",\n    marginRight: \"-36%\",\n    marginTop: \"-1%\",\n  },\n  coingif: {\n    size: '100%',\n  },\n  coingif: {\n    width: 10,\n  },\n  image: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: '100%',\n    height: '100%',\n    resizeMode: 'cover',\n  },\n  image2: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: 450,\n    resizeMode: 'cover',\n  },\n  image3: {\n    width: 45,\n    resizeMode: 'contain',\n    marginBottom: -85,\n    marginTop: -90,\n    marginLeft: 35,\n  },\n  image4: {\n    width: 51,\n    resizeMode: 'contain',\n    marginBottom: -85,\n    marginTop: -90,\n    marginLeft: 10,\n  },\n  title: {\n    width: 400,\n    resizeMode: 'cover',\n    marginTop: -100,\n    marginBottom: -100,\n    margin: -100,\n  },\n  header: {\n    marginTop: '15%',\n    marginLeft: '18%',\n    justifyContent: 'flex-start',\n    alignItems: 'flex-start',\n    backgroundColor: '#fff',\n  },\n  center: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n});"]},"metadata":{},"sourceType":"module"}