{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport * as React from \"react\";\nimport { Box, Text, Heading, VStack, FormControl, Input, Link, Button, HStack, Center, NativeBaseProvider } from \"native-base\";\nimport { useNavigation } from '@react-navigation/native';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport { useContext, useEffect } from \"react\";\nimport { UserContext } from \"./UserContext\";\nimport * as Notifications from \"expo-notifications\";\nimport * as Permissions from \"expo-permissions\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nNotifications.setNotificationHandler({\n  handleNotification: function handleNotification() {\n    return _regeneratorRuntime.async(function handleNotification$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", {\n              shouldShowAlert: true\n            });\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n});\nexport var Signup = function Signup() {\n  var navigation = useNavigation();\n\n  var _useContext = useContext(UserContext),\n      value = _useContext.value,\n      setValue = _useContext.setValue;\n\n  var _React$useState = React.useState({}),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      formData = _React$useState2[0],\n      setData = _React$useState2[1];\n\n  var _React$useState3 = React.useState({}),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      user = _React$useState4[0],\n      setUser = _React$useState4[1];\n\n  var _React$useState5 = React.useState(false),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      isLoading = _React$useState6[0],\n      setIsLoading = _React$useState6[1];\n\n  function Spinner() {\n    if (isLoading) {\n      return _jsx(Image, {\n        source: require(\"../assets/images/genericspinner.gif\"),\n        style: {\n          marginTop: \"-69%\",\n          width: '36%',\n          height: '40%',\n          zIndex: 2,\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          top: \"57%\",\n          right: \"-33%\",\n          resizeMode: \"contain\"\n        }\n      });\n    }\n  }\n\n  useEffect(function () {\n    Permissions.getAsync(Permissions.NOTIFICATIONS).then(function (statusObj) {\n      if (statusObj.status !== \"granted\") {\n        return Permissions.askAsync(Permissions.NOTIFICATIONS);\n      }\n\n      return statusObj;\n    }).then(function (statusObj) {\n      if (statusObj.status !== \"granted\") {\n        throw new Error(\"Permission not granted\");\n      }\n    }).then(function () {\n      return Notifications.getExpoPushTokenAsync();\n    }).then(function (response) {\n      var deviceToken = response.data;\n      console.log({\n        deviceToken: deviceToken\n      });\n      setData(_objectSpread(_objectSpread({}, formData), {}, {\n        pushToken: deviceToken\n      }));\n    }).catch(function (err) {\n      return null;\n    });\n  }, []);\n  return _jsx(Box, {\n    backgroundColor: \"#fff\",\n    safeArea: true,\n    p: \"2\",\n    py: \"4\",\n    w: \"80%\",\n    maxW: \"100%\",\n    children: _jsxs(KeyboardAvoidingView, {\n      behavior: Platform.OS === \"ios\" ? \"padding\" : \"height\",\n      style: styles.container,\n      children: [Spinner(), _jsx(Image, {\n        style: styles.title,\n        source: require(\"../assets/images/crewcoinlogo.png\")\n      }), _jsx(Heading, {\n        color: \"amber.600\",\n        fontWeight: \"medium\",\n        size: \"lg\",\n        children: \"Sign up to continue!\"\n      }), _jsxs(VStack, {\n        space: 3,\n        mt: \"5\",\n        children: [_jsxs(FormControl, {\n          children: [_jsx(FormControl.Label, {\n            children: \"First Name\"\n          }), _jsx(Input, {\n            placeholder: \"First Name\",\n            onChangeText: function onChangeText(value) {\n              return setData(_objectSpread(_objectSpread({}, formData), {}, {\n                firstname: value\n              }));\n            }\n          })]\n        }), _jsxs(FormControl, {\n          children: [_jsx(FormControl.Label, {\n            children: \"Last Name\"\n          }), _jsx(Input, {\n            placeholder: \"Last Name\",\n            onChangeText: function onChangeText(value) {\n              return setData(_objectSpread(_objectSpread({}, formData), {}, {\n                lastname: value\n              }));\n            }\n          })]\n        }), _jsxs(FormControl, {\n          children: [_jsx(FormControl.Label, {\n            children: \"Email ID\"\n          }), _jsx(Input, {\n            placeholder: \"Email\",\n            onChangeText: function onChangeText(value) {\n              return setData(_objectSpread(_objectSpread({}, formData), {}, {\n                username: value.toLowerCase()\n              }));\n            }\n          })]\n        }), _jsxs(FormControl, {\n          children: [_jsx(FormControl.Label, {\n            children: \"Password\"\n          }), _jsx(Input, {\n            placeholder: \"Password\",\n            type: \"password\",\n            onChangeText: function onChangeText(value) {\n              return setData(_objectSpread(_objectSpread({}, formData), {}, {\n                password: value\n              }));\n            }\n          })]\n        }), _jsxs(FormControl, {\n          children: [_jsx(FormControl.Label, {\n            children: \"Confirm Password\"\n          }), _jsx(Input, {\n            placeholder: \"Confirm Password\",\n            type: \"password\",\n            onChangeText: function onChangeText(value) {\n              return setData(_objectSpread(_objectSpread({}, formData), {}, {\n                confirmpassword: value\n              }));\n            }\n          })]\n        }), _jsxs(FormControl, {\n          children: [_jsx(FormControl.Label, {\n            children: \"Phone\"\n          }), _jsx(Input, {\n            placeholder: \"Phone\",\n            onChangeText: function onChangeText(value) {\n              return setData(_objectSpread(_objectSpread({}, formData), {}, {\n                phone: value\n              }));\n            }\n          })]\n        }), _jsxs(FormControl, {\n          children: [_jsx(FormControl.Label, {\n            children: \"Organization\"\n          }), _jsx(Input, {\n            placeholder: \"Organization\",\n            onChangeText: function onChangeText(value) {\n              return setData(_objectSpread(_objectSpread({}, formData), {}, {\n                organization: value\n              }));\n            }\n          })]\n        }), _jsxs(FormControl, {\n          children: [_jsx(FormControl.Label, {\n            children: \"Portal ID\"\n          }), _jsx(Input, {\n            maxLength: 4,\n            placeholder: \"Portal ID\",\n            onChangeText: function onChangeText(value) {\n              return setData(_objectSpread(_objectSpread({}, formData), {}, {\n                portalId: value\n              }));\n            }\n          })]\n        }), _jsx(Button, {\n          mt: \"2\",\n          colorScheme: \"yellow\",\n          onPress: function onPress() {\n            if (formData.password === formData.confirmpassword && formData.password.length > 7 && /^(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{6,16}$/.test(formData.password)) {\n              if (/.+@.+\\.[A-Za-z]+$/.test(formData.username)) {\n                handleSubmit(formData, navigation, setUser, setValue, setIsLoading);\n              } else {\n                Alert.alert(\"Alert Title\", \"Please enter valid email\", [{\n                  text: \"OK\",\n                  onPress: function onPress() {\n                    return console.log(\"OK Pressed\");\n                  }\n                }]);\n              }\n            } else {\n              Alert.alert(\"Passwords do not match\", \"Password Must be at least 8 characters long and contain at least one number and one special character\", [{\n                text: \"OK\",\n                onPress: function onPress() {\n                  return console.log(\"OK Pressed\");\n                }\n              }]);\n            }\n          },\n          children: \"Sign Up!\"\n        }), _jsxs(HStack, {\n          mb: \"6\",\n          justifyContent: \"center\",\n          children: [_jsxs(Text, {\n            fontSize: \"sm\",\n            color: \"coolGray.600\",\n            _dark: {\n              color: \"warmGray.200\"\n            },\n            children: [\"I'm an administrator.\", \" \"]\n          }), _jsx(Link, {\n            _text: {\n              color: \"indigo.500\",\n              fontWeight: \"medium\",\n              fontSize: \"sm\"\n            },\n            href: \"https://www.crew-coin.com\",\n            children: \"Setup New Organization\"\n          })]\n        }), _jsxs(HStack, {\n          mb: \"6\",\n          justifyContent: \"center\",\n          children: [_jsxs(Text, {\n            fontSize: \"sm\",\n            color: \"coolGray.600\",\n            _dark: {\n              color: \"warmGray.200\"\n            },\n            children: [\"I have an account. \", \" \"]\n          }), _jsx(Link, {\n            _text: {\n              color: \"indigo.500\",\n              fontWeight: \"medium\",\n              fontSize: \"sm\"\n            },\n            onPress: function onPress() {\n              return navigation.navigate(\"Login\");\n            },\n            children: \"Login.\"\n          })]\n        })]\n      })]\n    })\n  });\n};\n\nfunction handleSubmit(formData, navigation, setUser, setValue, setIsLoading) {\n  setIsLoading(true);\n  fetch(\"https://crewcoin.herokuapp.com/crewuser/signup\", {\n    method: \"POST\",\n    headers: {\n      authorization: \"jwt\",\n      credentials: \"same-origin\",\n      Accept: \"application/json, text/html, */*\",\n      \"Content-Type\": \"application/json\",\n      mode: \"cors\"\n    },\n    body: JSON.stringify({\n      \"username\": formData.username,\n      \"password\": formData.password,\n      \"firstname\": formData.firstname,\n      \"lastname\": formData.lastname,\n      \"phone\": formData.phone,\n      \"organization\": formData.organization,\n      \"portalId\": formData.portalId,\n      \"pushToken\": formData.pushToken\n    })\n  }).then(function (res) {\n    return res.json();\n  }).then(function (res) {\n    if (res.success) {\n      setValue(res.user);\n      navigation.navigate(\"Root\");\n    } else {\n      Alert.alert(\"Error\", \"\" + res.err.message, [{\n        text: \"Cancel\",\n        onPress: function onPress() {\n          return console.log(\"Cancel Pressed\");\n        },\n        style: \"cancel\"\n      }, {\n        text: \"OK\",\n        onPress: function onPress() {\n          return console.log(\"OK Pressed\");\n        }\n      }]);\n    }\n  }).catch(function (err) {\n    console.log(err);\n    Alert.alert(\"Error\", \"Something went wrong\", [{\n      text: \"OK\",\n      onPress: function onPress() {\n        return console.log(\"OK Pressed\");\n      }\n    }]);\n  });\n  setIsLoading(false);\n}\n\nexport default function SignupScreen() {\n  return _jsx(NativeBaseProvider, {\n    children: _jsx(ScrollView, {\n      backgroundColor: \"#fff\",\n      children: _jsx(Center, {\n        flex: 1,\n        px: \"3\",\n        children: _jsx(Signup, {})\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  title: {\n    width: 350,\n    resizeMode: 'contain',\n    marginLeft: \"-14%\",\n    marginTop: -90,\n    marginBottom: -90\n  },\n  image: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: '100%'\n  }\n});","map":{"version":3,"sources":["C:/Users/DavidWIlliams/Desktop/crewCoin/screens/SignupScreen.js"],"names":["React","Box","Text","Heading","VStack","FormControl","Input","Link","Button","HStack","Center","NativeBaseProvider","useNavigation","useContext","useEffect","UserContext","Notifications","Permissions","setNotificationHandler","handleNotification","shouldShowAlert","Signup","navigation","value","setValue","useState","formData","setData","user","setUser","isLoading","setIsLoading","Spinner","require","marginTop","width","height","zIndex","justifyContent","alignItems","top","right","resizeMode","getAsync","NOTIFICATIONS","then","statusObj","status","askAsync","Error","getExpoPushTokenAsync","response","deviceToken","data","console","log","pushToken","catch","err","Platform","OS","styles","container","title","firstname","lastname","username","toLowerCase","password","confirmpassword","phone","organization","portalId","length","test","handleSubmit","Alert","alert","text","onPress","color","fontWeight","fontSize","navigate","fetch","method","headers","authorization","credentials","Accept","mode","body","JSON","stringify","res","json","success","message","style","SignupScreen","StyleSheet","create","marginLeft","marginBottom","image","flex"],"mappings":"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","sourcesContent":["import * as React from \"react\"\r\nimport {\r\n    Box,\r\n    Text,\r\n    Heading,\r\n    VStack,\r\n    FormControl,\r\n    Input,\r\n    Link,\r\n    Button,\r\n    HStack,\r\n    Center,\r\n    NativeBaseProvider,\r\n} from \"native-base\"\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { StyleSheet, Image, Alert, ScrollView, KeyboardAvoidingView  } from \"react-native\";\r\nimport { useContext, useEffect } from \"react\";\r\nimport { UserContext } from \"./UserContext\";\r\nimport * as Notifications from \"expo-notifications\"\r\nimport * as Permissions from \"expo-permissions\"\r\n\r\nNotifications.setNotificationHandler({\r\n    handleNotification: async () => {\r\n      return {\r\n        shouldShowAlert: true,\r\n      }\r\n    },\r\n  })\r\n\r\nexport const Signup = () => {\r\n    const navigation = useNavigation();\r\n    const { value, setValue } = useContext(UserContext);\r\n    const [formData, setData] = React.useState({});\r\n    const [user, setUser] = React.useState({});\r\n    const [isLoading, setIsLoading] = React.useState(false);\r\n    function Spinner() {\r\n        if (isLoading) {\r\n            return (\r\n                <Image source={require('../assets/images/genericspinner.gif')}\r\n                    style={{ marginTop: \"-69%\", width: '36%', height: '40%', zIndex:2, justifyContent: \"center\", alignItems: \"center\", top: \"57%\", right: \"-33%\", resizeMode: \"contain\" }} />\r\n            )\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        // Permission for iOS\r\n        Permissions.getAsync(Permissions.NOTIFICATIONS)\r\n          .then(statusObj => {\r\n            // Check if we already have permission\r\n            if (statusObj.status !== \"granted\") {\r\n              // If permission is not there, ask for the same\r\n              return Permissions.askAsync(Permissions.NOTIFICATIONS)\r\n            }\r\n            return statusObj\r\n          })\r\n          .then(statusObj => {\r\n            // If permission is still not given throw error\r\n            if (statusObj.status !== \"granted\") {\r\n              throw new Error(\"Permission not granted\")\r\n            }\r\n          })\r\n          .then(() => {\r\n            return Notifications.getExpoPushTokenAsync()\r\n          })\r\n          .then(response => {\r\n            const deviceToken = response.data\r\n            console.log({ deviceToken })\r\n            setData({ ...formData, pushToken: deviceToken })\r\n          })\r\n          .catch(err => {\r\n            return null\r\n          })\r\n      }, [])\r\n\r\n\r\n    return (\r\n        <Box backgroundColor=\"#fff\" safeArea p=\"2\" py=\"4\" w=\"80%\" maxW=\"100%\">\r\n            <KeyboardAvoidingView\r\n                behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\r\n                style={styles.container}\r\n            >\r\n            {Spinner()}\r\n                <Image style={styles.title} source={require('../assets/images/crewcoinlogo.png')} />\r\n                <Heading\r\n                    color=\"amber.600\"\r\n                    fontWeight=\"medium\"\r\n                    size=\"lg\"\r\n                >\r\n                    Sign up to continue!\r\n                </Heading>\r\n\r\n                <VStack space={3} mt=\"5\">\r\n                    <FormControl>\r\n                        <FormControl.Label>First Name</FormControl.Label>\r\n                        <Input placeholder=\"First Name\" onChangeText={(value) => setData({ ...formData, firstname: value })} />\r\n                    </FormControl>\r\n                    <FormControl>\r\n                        <FormControl.Label>Last Name</FormControl.Label>\r\n                        <Input placeholder=\"Last Name\" onChangeText={(value) => setData({ ...formData, lastname: value })} />\r\n                    </FormControl>\r\n                    <FormControl>\r\n                        <FormControl.Label>Email ID</FormControl.Label>\r\n                        <Input placeholder=\"Email\" onChangeText={(value) => setData({ ...formData, username: value.toLowerCase() })} />\r\n                    </FormControl>\r\n                    <FormControl>\r\n                        <FormControl.Label>Password</FormControl.Label>\r\n                        <Input placeholder=\"Password\" type=\"password\" onChangeText={(value) => setData({ ...formData, password: value })} />\r\n                    </FormControl>\r\n                    <FormControl>\r\n                        <FormControl.Label>Confirm Password</FormControl.Label>\r\n                        <Input placeholder=\"Confirm Password\" type=\"password\" onChangeText={(value) => setData({ ...formData, confirmpassword: value })} />\r\n                    </FormControl>\r\n                    <FormControl>\r\n                        <FormControl.Label>Phone</FormControl.Label>\r\n                        <Input placeholder=\"Phone\" onChangeText={(value) => setData({ ...formData, phone: value })} />\r\n                    </FormControl>\r\n                    <FormControl>\r\n                        <FormControl.Label>Organization</FormControl.Label>\r\n                        <Input placeholder=\"Organization\" onChangeText={(value) => setData({ ...formData, organization: value })} />\r\n                    </FormControl>\r\n                    <FormControl>\r\n                        <FormControl.Label>Portal ID</FormControl.Label>\r\n                        <Input maxLength={4} placeholder=\"Portal ID\" onChangeText={(value) => setData({ ...formData, portalId: value })} />\r\n                    </FormControl>\r\n                    <Button mt=\"2\" colorScheme=\"yellow\"\r\n                        onPress={() => {\r\n                            if (formData.password === formData.confirmpassword && formData.password.length > 7 && /^(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{6,16}$/.test(formData.password)) {\r\n\r\n                                if (/.+@.+\\.[A-Za-z]+$/.test(formData.username)) {\r\n                                    handleSubmit(formData, navigation, setUser, setValue, setIsLoading);\r\n                                } else {\r\n                                    Alert.alert(\r\n                                        \"Alert Title\",\r\n                                        \"Please enter valid email\",\r\n                                        [\r\n                                            { text: \"OK\", onPress: () => console.log(\"OK Pressed\") }\r\n                                        ]\r\n                                    );\r\n                                }\r\n                            } else {\r\n                                Alert.alert(\r\n                                    \"Passwords do not match\",\r\n                                    \"Password Must be at least 8 characters long and contain at least one number and one special character\",\r\n                                    [\r\n                                        { text: \"OK\", onPress: () => console.log(\"OK Pressed\") }\r\n                                    ]\r\n                                );\r\n                            }\r\n                        }\r\n                        }\r\n                    >\r\n                        Sign Up!\r\n                    </Button>\r\n                    <HStack mb=\"6\" justifyContent=\"center\">\r\n                        <Text\r\n                            fontSize=\"sm\"\r\n                            color=\"coolGray.600\"\r\n                            _dark={{\r\n                                color: \"warmGray.200\",\r\n                            }}\r\n                        >\r\n                            I'm an administrator.{\" \"}\r\n                        </Text>\r\n                        <Link\r\n                            _text={{\r\n                                color: \"indigo.500\",\r\n                                fontWeight: \"medium\",\r\n                                fontSize: \"sm\",\r\n                            }}\r\n                            href=\"https://www.crew-coin.com\"\r\n                        >\r\n                            Setup New Organization\r\n                        </Link>\r\n                    </HStack>\r\n                    <HStack mb=\"6\" justifyContent=\"center\">\r\n                        <Text\r\n                            fontSize=\"sm\"\r\n                            color=\"coolGray.600\"\r\n                            _dark={{\r\n                                color: \"warmGray.200\",\r\n                            }}\r\n                        >\r\n                            I have an account. {\" \"}\r\n                        </Text>\r\n                        <Link\r\n                            _text={{\r\n                                color: \"indigo.500\",\r\n                                fontWeight: \"medium\",\r\n                                fontSize: \"sm\",\r\n                            }}\r\n                            onPress={() => navigation.navigate(\"Login\")}\r\n                        >\r\n                            Login.\r\n                        </Link>\r\n                    </HStack>\r\n                </VStack>\r\n            </KeyboardAvoidingView>\r\n        </Box>\r\n    )\r\n}\r\n\r\n\r\n\r\nfunction handleSubmit(formData, navigation, setUser, setValue, setIsLoading) {\r\n    setIsLoading(true)\r\n    fetch(\"https://crewcoin.herokuapp.com/crewuser/signup\", {\r\n        method: \"POST\",\r\n        headers: {\r\n            authorization: \"jwt\",\r\n            credentials: \"same-origin\",\r\n            Accept: \"application/json, text/html, */*\",\r\n            \"Content-Type\": \"application/json\",\r\n            mode: \"cors\"\r\n        },\r\n        body: JSON.stringify({\r\n            \"username\": formData.username,\r\n            \"password\": formData.password,\r\n            \"firstname\": formData.firstname,\r\n            \"lastname\": formData.lastname,\r\n            \"phone\": formData.phone,\r\n            \"organization\": formData.organization,\r\n            \"portalId\": formData.portalId,\r\n            \"pushToken\": formData.pushToken\r\n\r\n        }),\r\n    })\r\n\r\n        .then(res => res.json())\r\n        .then(res => {\r\n            if (res.success) {\r\n                setValue(res.user);\r\n                navigation.navigate(\"Root\");\r\n            } else {\r\n                Alert.alert(\r\n                    \"Error\",\r\n                    `${res.err.message}`,\r\n                    [\r\n                        {\r\n                            text: \"Cancel\",\r\n                            onPress: () => console.log(\"Cancel Pressed\"),\r\n                            style: \"cancel\"\r\n                        },\r\n                        { text: \"OK\", onPress: () => console.log(\"OK Pressed\") }\r\n                    ]\r\n                );\r\n            }\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n            Alert.alert(\r\n                \"Error\",\r\n                \"Something went wrong\",\r\n                [\r\n\r\n                    { text: \"OK\", onPress: () => console.log(\"OK Pressed\") }\r\n                ]\r\n            )\r\n        }\r\n        );\r\n        setIsLoading(false)\r\n}\r\n\r\nexport default function SignupScreen() {\r\n    return (\r\n        <NativeBaseProvider>\r\n            <ScrollView backgroundColor=\"#fff\"> \r\n                <Center flex={1} px=\"3\">\r\n                    <Signup />\r\n                </Center>\r\n            </ScrollView>\r\n        </NativeBaseProvider>\r\n    )\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n\r\n    title: {\r\n        width: 350,\r\n        resizeMode: 'contain',\r\n        marginLeft: \"-14%\",\r\n        marginTop: -90,\r\n        marginBottom: -90,\r\n\r\n    },\r\n    image: {\r\n        flex: 1,\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        width: '100%',\r\n    },\r\n});"]},"metadata":{},"sourceType":"module"}