{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { NativeBaseProvider, Box, Container, Heading, Divider, AspectRatio, Stack, HStack, Text, Icon, VStack, Center, StatusBar, Button, Input } from 'native-base';\nimport { Ionicons } from '@expo/vector-icons';\nimport { FlatList, ScrollView } from \"react-native-gesture-handler\";\nimport prizes from \"./sample\";\nimport Counter from \"react-native-counters\";\nimport { useNavigation } from '@react-navigation/native';\nimport { Component, useContext, useEffect } from \"react\";\nimport { UserContext } from \"./UserContext\";\nimport React from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport default function SendScreen() {\n  var _React$useState = React.useState({}),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      formData = _React$useState2[0],\n      setData = _React$useState2[1];\n\n  var _useContext = useContext(UserContext),\n      value = _useContext.value,\n      setValue = _useContext.setValue;\n\n  return _jsxs(NativeBaseProvider, {\n    children: [_jsx(AppBar, {}), _jsx(ImageBackground, {\n      imageStyle: {\n        opacity: 0.2\n      },\n      style: styles.image2,\n      source: require(\"../assets/images/splashbg2.png\"),\n      resizeMode: \"cover\",\n      children: _jsx(ScrollView, {\n        children: _jsx(CoinShow, {\n          prizes: prizes\n        })\n      })\n    }), _jsx(CardBalance, {})]\n  });\n}\n\nfunction AppBar() {\n  var navigation = useNavigation();\n  return _jsxs(_Fragment, {\n    children: [_jsx(Box, {\n      safeAreaTop: true,\n      backgroundColor: \"#f2f2f2\"\n    }), _jsxs(HStack, {\n      borderColor: \"gray.300\",\n      borderWidth: \"1\",\n      bg: \"amber.300\",\n      py: \"2\",\n      px: \"1\",\n      alignItems: \"center\",\n      children: [_jsx(HStack, {\n        space: \"4\",\n        alignItems: \"center\",\n        children: _jsx(Ionicons, {\n          name: \"md-chevron-back-sharp\",\n          size: 24,\n          color: \"black\",\n          onPress: function onPress() {\n            navigation.navigate('Root');\n          }\n        })\n      }), _jsx(HStack, {\n        bg: \"amber.300\",\n        px: \"1\",\n        children: _jsx(Center, {\n          children: _jsx(Heading, {\n            size: \"lg\",\n            color: \"black\",\n            children: \"Send Coins\"\n          })\n        })\n      })]\n    })]\n  });\n}\n\nfunction CardBalance() {\n  var _useContext2 = useContext(UserContext),\n      value = _useContext2.value,\n      setValue = _useContext2.setValue;\n\n  return _jsx(_Fragment, {\n    children: _jsx(VStack, {\n      borderColor: \"gray.300\",\n      borderWidth: \"1\",\n      space: \"4\",\n      bg: \"amber.300\",\n      px: \"2\",\n      mb: \"2\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      children: _jsx(Center, {\n        children: _jsxs(HStack, {\n          children: [_jsx(Image, {\n            style: styles.coinbalance,\n            source: require(\"../assets/images/coinbalance.png\")\n          }), _jsx(Text, {\n            style: styles.icon2,\n            children: value.balance\n          })]\n        })\n      })\n    })\n  });\n}\n\nexport var CoinShow = function CoinShow() {\n  var _useContext3 = useContext(UserContext),\n      value = _useContext3.value,\n      setValue = _useContext3.setValue;\n\n  var _React$useState3 = React.useState([]),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      userData = _React$useState4[0],\n      setUser = _React$useState4[1];\n\n  var _React$useState5 = React.useState({}),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      formData = _React$useState6[0],\n      setData = _React$useState6[1];\n\n  var navigation = useNavigation();\n\n  function reload() {\n    setData(_objectSpread(_objectSpread({}, formData), {}, {\n      coinincrease: 0\n    }));\n    fetch(\"https://crewcoin.herokuapp.com/crewuser/reload/\" + value._id, {\n      method: \"GET\",\n      headers: {\n        authorization: \"jwt\",\n        credentials: \"same-origin\",\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        mode: \"cors\"\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (res) {\n      if (res) {\n        setValue(res[0]);\n      } else {\n        Alert.alert(\"Error\", \"Please check your internet connection\", [{\n          text: \"OK\",\n          onPress: function onPress() {\n            return console.log(\"OK Pressed\");\n          }\n        }]);\n      }\n    }).catch(function (err) {\n      console.log(err);\n    });\n  }\n\n  useEffect(function () {\n    fetch(\"https://crewcoin.herokuapp.com/crewuser/\" + value.portalId, {\n      method: \"GET\",\n      headers: {\n        authorization: \"jwt\",\n        credentials: \"same-origin\",\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        mode: \"cors\"\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (res) {\n      if (res) {\n        setUser(res);\n\n        var _self = res.filter(function (user) {\n          return user.username === value.username;\n        });\n\n        setValue(_self[0]);\n      } else {\n        Alert.alert(\"Error\", \"Please check your internet connection\", [{\n          text: \"OK\",\n          onPress: function onPress() {\n            return console.log(\"OK Pressed\");\n          }\n        }]);\n      }\n    }).catch(function (err) {\n      console.log(err);\n    });\n  }, []);\n  var user = userData.filter(function (el) {\n    return el.username !== value.username;\n  });\n  return user.map(function (user) {\n    function handleReceive(navigation, user, formData, self) {\n      var amount = formData.coinincrease + user.balance;\n      var comment = formData.comments;\n\n      if (value.balance >= formData.coinincrease) {\n        fetch(\"https://crewcoin.herokuapp.com/crewuser/\" + user._id, {\n          method: \"PUT\",\n          headers: {\n            authorization: \"jwt\",\n            credentials: \"same-origin\",\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            mode: \"cors\"\n          },\n          body: JSON.stringify({\n            \"balance\": amount,\n            \"history\": {\n              \"date\": new Date(),\n              \"action\": \"Received\",\n              \"amount\": formData.coinincrease,\n              \"balance\": amount,\n              \"comments\": comment,\n              \"who\": \"from \" + value.firstname + \" \" + value.lastname\n            }\n          })\n        }).then(function (res) {\n          return res.json();\n        }).then(function (res) {\n          if (res.success) {\n            Alert.alert(\"Coins Sent!\", \"You sent \" + formData.coinincrease + \" crew coins to \" + (user.firstname + \" \" + user.lastname), [{\n              text: \"Cancel\",\n              onPress: function onPress() {\n                return console.log(\"Cancel Pressed\");\n              },\n              style: \"cancel\"\n            }, {\n              text: \"OK\",\n              onPress: function onPress() {\n                return console.log(\"OK Pressed\");\n              }\n            }]);\n          } else {\n            Alert.alert(\"\" + err, \"Please check internet connection!\", [{\n              text: \"OK\",\n              onPress: function onPress() {\n                return console.log(\"OK Pressed\");\n              }\n            }]);\n          }\n        }).catch(function (err) {\n          console.log(\"an error occured\");\n        });\n        var secondAmount = value.balance - formData.coinincrease;\n        fetch(\"https://crewcoin.herokuapp.com/crewuser/\" + value._id, {\n          method: \"PUT\",\n          headers: {\n            authorization: \"jwt\",\n            credentials: \"same-origin\",\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            mode: \"cors\"\n          },\n          body: JSON.stringify({\n            \"balance\": secondAmount,\n            \"history\": {\n              \"date\": new Date(),\n              \"action\": \"Sent\",\n              \"amount\": formData.coinincrease,\n              \"balance\": secondAmount,\n              \"comments\": comment,\n              \"who\": \"to \" + user.firstname + \" \" + user.lastname\n            }\n          })\n        }).then(function (res) {\n          return res.json();\n        }).catch(function (err) {\n          Alert.alert(\"\" + err, \"Please check internet connection!\", [{\n            text: \"OK\",\n            onPress: function onPress() {\n              return console.log(\"OK Pressed\");\n            }\n          }]);\n        });\n        reload();\n      } else {\n        Alert.alert(\"You need more crew coins!\", \"You do not have enough crew coins! Current balance: \" + value.balance, [{\n          text: \"Cancel\",\n          onPress: function onPress() {\n            return console.log(\"Cancel Pressed\");\n          },\n          style: \"cancel\"\n        }, {\n          text: \"OK\",\n          onPress: function onPress() {\n            return console.log(\"OK Pressed\");\n          }\n        }]);\n      }\n\n      setValue(_objectSpread({}, value));\n    }\n\n    return _jsx(Box, {\n      style: {\n        width: 500,\n        marginLeft: 0\n      },\n      shadow: 9,\n      mt: \"3\",\n      maxW: \"380\",\n      rounded: \"lg\",\n      overflow: \"hidden\",\n      borderColor: \"coolGray.200\",\n      borderWidth: \"1\",\n      _dark: {\n        borderColor: \"coolGray.600\",\n        backgroundColor: \"gray.700\"\n      },\n      _web: {\n        shadow: 2,\n        borderWidth: 0\n      },\n      _light: {\n        backgroundColor: \"gray.50\"\n      },\n      children: _jsxs(Stack, {\n        children: [_jsxs(HStack, {\n          display: \"flex\",\n          flexDirection: \"row\",\n          alignItems: \"center\",\n          w: \"100%\",\n          space: 3,\n          justifyContent: \"space-evenly\",\n          children: [_jsx(Text, {\n            width: \"40%\",\n            py: \"3\",\n            px: \"2\",\n            fontSize: \"lg\",\n            color: \"gray.600\",\n            _dark: {\n              color: \"amber.600\"\n            },\n            fontWeight: \"600\",\n            children: user.firstname + \" \" + user.lastname\n          }), _jsxs(HStack, {\n            justifyContent: \"center\",\n            children: [_jsx(Counter, {\n              id: user._id,\n              min: 1,\n              start: 1,\n              count: setData(_objectSpread(_objectSpread({}, formData), {}, {\n                count: value\n              })),\n              value: formData.coinincrease,\n              onChange: function onChange(value) {\n                return setData(_objectSpread(_objectSpread({}, formData), {}, {\n                  coinincrease: value\n                }));\n              }\n            }), _jsx(Button, {\n              ml: \"3\",\n              onPress: function onPress() {\n                handleReceive(navigation, user, formData, self);\n              },\n              children: \"Send\"\n            })]\n          })]\n        }), _jsx(Input, {\n          id: user._id,\n          value: formData.comments,\n          m: \"2\",\n          size: \"sm\",\n          placeholder: \"Comments:\",\n          onChangeText: function onChangeText(value) {\n            return setData(_objectSpread(_objectSpread({}, formData), {}, {\n              comments: value\n            }));\n          }\n        })]\n      })\n    }, user._id);\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  icon: {\n    color: 'black',\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  gif: {\n    width: 80,\n    height: 80,\n    marginTop: -30,\n    marginLeft: -30\n  },\n  icon2: {\n    color: 'black',\n    fontSize: 42,\n    fontWeight: '700',\n    paddingTop: 23,\n    marginTop: 6,\n    opacity: 0.9,\n    fontFamily: 'System'\n  },\n  coin: {\n    width: 200,\n    resizeMode: 'contain',\n    height: 50\n  },\n  coingif: {\n    size: '100%'\n  },\n  coingif: {\n    width: 10\n  },\n  coinbalance: {\n    zIndex: 2,\n    resizeMode: 'contain',\n    width: 210,\n    marginTop: -90,\n    marginBottom: -110\n  },\n  image: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: '100%',\n    height: '100%',\n    resizeMode: 'cover'\n  },\n  image2: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: '100%',\n    height: '100%',\n    marginBottom: 20,\n    marginBottom: 5\n  },\n  title: {\n    width: 400,\n    resizeMode: 'cover',\n    marginTop: -100,\n    marginBottom: -100,\n    margin: -100\n  },\n  header: {\n    marginTop: '15%',\n    marginLeft: '18%',\n    justifyContent: 'flex-start',\n    alignItems: 'flex-start',\n    backgroundColor: '#fff'\n  },\n  BalanceBar: {\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    right: 0,\n    borderTopLeftRadius: 60,\n    borderTopRightRadius: 60\n  },\n  center: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  coin2: {\n    width: 80,\n    height: 50\n  }\n});","map":{"version":3,"sources":["C:/Users/DavidWIlliams/Desktop/crewCoin/screens/SendScreen.js"],"names":["NativeBaseProvider","Box","Container","Heading","Divider","AspectRatio","Stack","HStack","Text","Icon","VStack","Center","StatusBar","Button","Input","Ionicons","FlatList","ScrollView","prizes","Counter","useNavigation","Component","useContext","useEffect","UserContext","React","SendScreen","useState","formData","setData","value","setValue","opacity","styles","image2","require","AppBar","navigation","navigate","CardBalance","coinbalance","icon2","balance","CoinShow","userData","setUser","reload","coinincrease","fetch","_id","method","headers","authorization","credentials","Accept","mode","then","res","json","Alert","alert","text","onPress","console","log","catch","err","portalId","self","filter","user","username","el","map","handleReceive","amount","comment","comments","body","JSON","stringify","Date","firstname","lastname","success","style","secondAmount","width","marginLeft","borderColor","backgroundColor","shadow","borderWidth","color","count","StyleSheet","create","container","flex","alignItems","justifyContent","icon","fontSize","fontWeight","gif","height","marginTop","paddingTop","fontFamily","coin","resizeMode","coingif","size","zIndex","marginBottom","image","title","margin","header","BalanceBar","position","bottom","left","right","borderTopLeftRadius","borderTopRightRadius","center","coin2"],"mappings":"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","sourcesContent":["import { StyleSheet, ImageBackground, Image, View, Alert } from \"react-native\";\r\nimport { NativeBaseProvider, Box, Container, Heading, Divider, AspectRatio, Stack, HStack, Text, Icon, VStack, Center, StatusBar, Button, Input } from 'native-base';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { FlatList, ScrollView } from \"react-native-gesture-handler\";\r\nimport prizes from './sample';\r\nimport Counter from \"react-native-counters\";\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { Component, useContext, useEffect } from \"react\";\r\nimport { UserContext } from \"./UserContext\";\r\nimport React from \"react\";\r\n\r\nexport default function SendScreen() {\r\n    const [formData, setData] = React.useState({});\r\n    const { value, setValue } = useContext(UserContext);\r\n    return (\r\n        <NativeBaseProvider>\r\n            <AppBar />\r\n            <ImageBackground imageStyle=\r\n                {{ opacity: 0.2 }} style={styles.image2} source={require('../assets/images/splashbg2.png')} resizeMode=\"cover\" >\r\n                <ScrollView>\r\n                    <CoinShow prizes={prizes} />\r\n                </ScrollView>\r\n            </ImageBackground>\r\n            <CardBalance />\r\n        </NativeBaseProvider>\r\n    );\r\n}\r\nfunction AppBar() {\r\n    const navigation = useNavigation();\r\n    return (\r\n        <>\r\n            <Box safeAreaTop backgroundColor=\"#f2f2f2\" />\r\n            <HStack borderColor=\"gray.300\"\r\n                borderWidth=\"1\" bg='amber.300' py=\"2\" px=\"1\" alignItems='center'>\r\n                <HStack space=\"4\" alignItems='center'>\r\n                    <Ionicons name=\"md-chevron-back-sharp\" size={24} color=\"black\" onPress={() => { navigation.navigate('Root'); }} />\r\n                </HStack>\r\n\r\n\r\n                <HStack bg='amber.300' px=\"1\">\r\n                    <Center><Heading size=\"lg\" color=\"black\">Send Coins</Heading></Center>\r\n                </HStack>\r\n            </HStack>\r\n        </>\r\n    )\r\n}\r\n\r\nfunction CardBalance() {\r\n    const { value, setValue } = useContext(UserContext);\r\n    return (\r\n        <>\r\n            <VStack borderColor=\"gray.300\" borderWidth=\"1\" space=\"4\" bg='amber.300' px=\"2\" mb=\"2\" justifyContent='space-between' alignItems='center'>\r\n                <Center>\r\n                    <HStack >\r\n                        <Image style={styles.coinbalance} source={require('../assets/images/coinbalance.png')} />\r\n                        <Text style={styles.icon2}>{value.balance}</Text>\r\n                    </HStack>\r\n                </Center>\r\n            </VStack>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const CoinShow = () => {\r\n    const { value, setValue } = useContext(UserContext);\r\n    const [userData, setUser] = React.useState([]);\r\n    const [formData, setData] = React.useState({});\r\n    const navigation = useNavigation();\r\n\r\n\r\n    function reload() {\r\n        setData({ ...formData, coinincrease: 0 });\r\n        fetch(`https://crewcoin.herokuapp.com/crewuser/reload/${value._id}`, {\r\n            method: \"GET\",\r\n            headers: {\r\n                authorization: \"jwt\",\r\n                credentials: \"same-origin\",\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                mode: \"cors\"\r\n            },\r\n        })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                if (res) {\r\n                    setValue(res[0]);\r\n                } else {\r\n                    Alert.alert(\r\n                        \"Error\",\r\n                        \"Please check your internet connection\",\r\n                        [\r\n\r\n                            { text: \"OK\", onPress: () => console.log(\"OK Pressed\") }\r\n                        ]\r\n                    )\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            }\r\n            );\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetch(`https://crewcoin.herokuapp.com/crewuser/${value.portalId}`, {\r\n            method: \"GET\",\r\n            headers: {\r\n                authorization: \"jwt\",\r\n                credentials: \"same-origin\",\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                mode: \"cors\"\r\n            },\r\n        })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                if (res) {\r\n                    setUser(res);\r\n                    let self = res.filter(user => user.username === value.username);\r\n                    setValue(self[0]);\r\n                } else {\r\n                    Alert.alert(\r\n                        \"Error\",\r\n                        \"Please check your internet connection\",\r\n                        [\r\n\r\n                            { text: \"OK\", onPress: () => console.log(\"OK Pressed\") }\r\n                        ]\r\n                    )\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            }\r\n            );\r\n    }, []);\r\n    let user = userData.filter(el => el.username !== value.username);\r\n\r\n    return (\r\n        user.map((user) => {\r\n            function handleReceive(navigation, user, formData, self) {\r\n                const amount = formData.coinincrease + user.balance;\r\n                const comment = formData.comments;\r\n\r\n                if (value.balance >= formData.coinincrease) {\r\n                    fetch(`https://crewcoin.herokuapp.com/crewuser/${user._id}`, {\r\n                        method: \"PUT\",\r\n                        headers: {\r\n                            authorization: \"jwt\",\r\n                            credentials: \"same-origin\",\r\n                            Accept: \"application/json\",\r\n                            \"Content-Type\": \"application/json\",\r\n                            mode: \"cors\"\r\n                        },\r\n                        body: JSON.stringify({\r\n                            \"balance\": amount,\r\n                            \"history\": {\r\n                                \"date\": new Date(),\r\n                                \"action\": \"Received\",\r\n                                \"amount\": formData.coinincrease,\r\n                                \"balance\": amount,\r\n                                \"comments\": comment,\r\n                                \"who\": `from ${value.firstname} ${value.lastname}`\r\n                            }\r\n                        }),\r\n                    })\r\n\r\n                        .then(res => res.json())\r\n                        .then(res => {\r\n                            if (res.success) {\r\n                                Alert.alert(\r\n                                    \"Coins Sent!\",\r\n                                    `You sent ${formData.coinincrease} crew coins to ${user.firstname + \" \" + user.lastname}`,\r\n                                    [\r\n                                        {\r\n                                            text: \"Cancel\",\r\n                                            onPress: () => console.log(\"Cancel Pressed\"),\r\n                                            style: \"cancel\"\r\n                                        },\r\n                                        { text: \"OK\", onPress: () => console.log(\"OK Pressed\") }\r\n                                    ]\r\n                                );\r\n                            } else {\r\n                                Alert.alert(\r\n                                    `${err}`,\r\n                                    \"Please check internet connection!\",\r\n                                    [\r\n    \r\n                                        { text: \"OK\", onPress: () => console.log(\"OK Pressed\") }\r\n                                    ]\r\n                                )\r\n                            }\r\n                        })\r\n                        .catch(err => {\r\n                            console.log(\"an error occured\")\r\n                        }\r\n                        );\r\n                    const secondAmount = value.balance - formData.coinincrease;\r\n                    fetch(`https://crewcoin.herokuapp.com/crewuser/${value._id}`, {\r\n                        method: \"PUT\",\r\n                        headers: {\r\n                            authorization: \"jwt\",\r\n                            credentials: \"same-origin\",\r\n                            Accept: \"application/json\",\r\n                            \"Content-Type\": \"application/json\",\r\n                            mode: \"cors\"\r\n                        },\r\n                        body: JSON.stringify({\r\n                            \"balance\": secondAmount,\r\n                            \"history\": {\r\n                                \"date\": new Date(),\r\n                                \"action\": \"Sent\",\r\n                                \"amount\": formData.coinincrease,\r\n                                \"balance\": secondAmount,\r\n                                \"comments\": comment,\r\n                                \"who\": `to ${user.firstname} ${user.lastname}`\r\n                            }\r\n                        }),\r\n                    })\r\n\r\n                        .then(res => res.json())\r\n                        .catch(err => {\r\n                            Alert.alert(\r\n                                `${err}`,\r\n                                \"Please check internet connection!\",\r\n                                [\r\n\r\n                                    { text: \"OK\", onPress: () => console.log(\"OK Pressed\") }\r\n                                ]\r\n                            )\r\n                        }\r\n                        );\r\n                    reload();\r\n                    \r\n                }\r\n                else {\r\n                    Alert.alert(\r\n                        \"You need more crew coins!\",\r\n                        `You do not have enough crew coins! Current balance: ${value.balance}`,\r\n                        [\r\n                            {\r\n                                text: \"Cancel\",\r\n                                onPress: () => console.log(\"Cancel Pressed\"),\r\n                                style: \"cancel\"\r\n                            },\r\n                            { text: \"OK\", onPress: () => console.log(\"OK Pressed\") }\r\n                        ]\r\n                    );\r\n                }\r\n                setValue({...value})\r\n            }\r\n\r\n            return (\r\n\r\n                <Box\r\n                    key={user._id}\r\n                    style={{ width: 500, marginLeft: 0 }}\r\n                    shadow={9}\r\n                    mt=\"3\"\r\n                    maxW=\"380\"\r\n                    rounded=\"lg\"\r\n                    overflow=\"hidden\"\r\n                    borderColor=\"coolGray.200\"\r\n                    borderWidth=\"1\"\r\n                    _dark={{\r\n                        borderColor: \"coolGray.600\",\r\n                        backgroundColor: \"gray.700\",\r\n                    }}\r\n                    _web={{\r\n                        shadow: 2,\r\n                        borderWidth: 0,\r\n                    }}\r\n                    _light={{\r\n                        backgroundColor: \"gray.50\",\r\n                    }}\r\n                >\r\n\r\n                    <Stack>\r\n                        <HStack display=\"flex\" flexDirection=\"row\" alignItems=\"center\" w=\"100%\" space={3} justifyContent=\"space-evenly\">\r\n\r\n                            <Text\r\n                                width=\"40%\"\r\n                                py=\"3\"\r\n                                px=\"2\"\r\n                                fontSize=\"lg\"\r\n                                color=\"gray.600\"\r\n                                _dark={{\r\n                                    color: \"amber.600\",\r\n                                }}\r\n                                fontWeight=\"600\"\r\n                            >\r\n                                {user.firstname + \" \" + user.lastname}\r\n                            </Text>\r\n                            <HStack justifyContent=\"center\">\r\n                                <Counter id={user._id} min={1} start={1} count={setData({...formData, count: value})} value={formData.coinincrease} onChange={(value) => setData({ ...formData, coinincrease: value })} />\r\n                                <Button ml=\"3\"\r\n                                    onPress={() => {\r\n                                        (handleReceive(navigation, user, formData, self));\r\n\r\n\r\n                                    }}>Send</Button>\r\n                            </HStack>\r\n                        </HStack>\r\n                        <Input id={user._id} value={formData.comments} m=\"2\" size=\"sm\" placeholder=\"Comments:\" onChangeText={(value) => setData({ ...formData, comments: value })} />\r\n                    </Stack>\r\n                </Box>\r\n\r\n            )\r\n        })\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n    },\r\n    icon: {\r\n        color: 'black',\r\n        fontSize: 16,\r\n        fontWeight: 'bold',\r\n\r\n\r\n    },\r\n    gif: {\r\n        width: 80,\r\n        height: 80,\r\n        marginTop: -30,\r\n        marginLeft: -30,\r\n    },\r\n    icon2: {\r\n        color: 'black',\r\n        fontSize: 42,\r\n        fontWeight: '700',\r\n        paddingTop: 23,\r\n        marginTop: 6,\r\n        opacity: 0.9,\r\n        fontFamily: 'System',\r\n    },\r\n    coin: {\r\n        width: 200,\r\n        resizeMode: 'contain',\r\n        height: 50,\r\n    },\r\n    coingif: {\r\n        size: '100%',\r\n    },\r\n    coingif: {\r\n        width: 10,\r\n    },\r\n    coinbalance: {\r\n        zIndex: 2,\r\n        resizeMode: 'contain',\r\n        width: 210,\r\n        marginTop: -90,\r\n        marginBottom: -110,\r\n    },\r\n\r\n    image: {\r\n        flex: 1,\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        width: '100%',\r\n        height: '100%',\r\n        resizeMode: 'cover',\r\n    },\r\n    image2: {\r\n        flex: 1,\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        width: '100%',\r\n        height: '100%',\r\n        marginBottom: 20,\r\n        marginBottom: 5,\r\n    },\r\n    title: {\r\n        width: 400,\r\n        resizeMode: 'cover',\r\n        marginTop: -100,\r\n        marginBottom: -100,\r\n        margin: -100,\r\n    },\r\n    header: {\r\n        marginTop: '15%',\r\n        marginLeft: '18%',\r\n        justifyContent: 'flex-start',\r\n        alignItems: 'flex-start',\r\n        backgroundColor: '#fff',\r\n    },\r\n    BalanceBar: {\r\n        position: 'absolute',\r\n        bottom: 0,\r\n        left: 0,\r\n        right: 0,\r\n        borderTopLeftRadius: 60,\r\n        borderTopRightRadius: 60,\r\n    },\r\n    center: {\r\n        flex: 1,\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n    },\r\n    coin2: {\r\n        width: 80,\r\n        height: 50,\r\n    },\r\n});"]},"metadata":{},"sourceType":"module"}