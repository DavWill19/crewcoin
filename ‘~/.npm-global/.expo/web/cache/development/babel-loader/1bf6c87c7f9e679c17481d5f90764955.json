{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport * as React from \"react\";\nimport { Box, Text, Heading, VStack, FormControl, Input, Link, Button, HStack, Center, NativeBaseProvider } from \"native-base\";\nimport { useNavigation } from '@react-navigation/native';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { useContext, useEffect } from \"react\";\nimport { UserContext } from \"./UserContext\";\nimport * as Notifications from \"expo-notifications\";\nimport * as Permissions from \"expo-permissions\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nNotifications.setNotificationHandler({\n  handleNotification: function () {\n    var _handleNotification = _asyncToGenerator(function* () {\n      return {\n        shouldShowAlert: true\n      };\n    });\n    function handleNotification() {\n      return _handleNotification.apply(this, arguments);\n    }\n    return handleNotification;\n  }()\n});\nexport var Signup = function Signup() {\n  var navigation = useNavigation();\n  var _useContext = useContext(UserContext),\n    value = _useContext.value,\n    setValue = _useContext.setValue;\n  var _React$useState = React.useState({}),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    formData = _React$useState2[0],\n    setData = _React$useState2[1];\n  var _React$useState3 = React.useState({}),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    user = _React$useState4[0],\n    setUser = _React$useState4[1];\n  var _React$useState5 = React.useState(false),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    isLoading = _React$useState6[0],\n    setIsLoading = _React$useState6[1];\n  function Spinner() {\n    if (isLoading) {\n      return _jsx(Image, {\n        source: require(\"../assets/images/genericspinner.gif\"),\n        style: {\n          marginTop: \"-69%\",\n          width: '36%',\n          height: '40%',\n          zIndex: 2,\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          top: \"57%\",\n          right: \"-33%\",\n          resizeMode: \"contain\"\n        }\n      });\n    }\n  }\n  registerForPushNotificationsAsync = function () {\n    var _ref = _asyncToGenerator(function* () {\n      if (Platform.OS === 'android' || Platform.OS === 'ios') {\n        var _yield$Notifications$ = yield Notifications.getPermissionsAsync(),\n          existingStatus = _yield$Notifications$.status;\n        var finalStatus = existingStatus;\n        if (existingStatus !== 'granted') {\n          var _yield$Notifications$2 = yield Notifications.requestPermissionsAsync(),\n            status = _yield$Notifications$2.status;\n          finalStatus = status;\n        }\n        if (finalStatus !== 'granted') {\n          alert('Failed to get push token for push notification!');\n          return;\n        }\n        var token = (yield Notifications.getExpoPushTokenAsync()).data;\n        console.log(token);\n        setData(_objectSpread(_objectSpread({}, formData), {}, {\n          pushToken: token\n        }));\n      } else {\n        alert('Must use physical device for Push Notifications');\n      }\n      if (Platform.OS === 'android') {\n        Notifications.setNotificationChannelAsync('default', {\n          name: 'default',\n          importance: Notifications.AndroidImportance.MAX,\n          vibrationPattern: [0, 250, 250, 250],\n          lightColor: '#FF231F7C'\n        });\n      }\n    });\n    return function registerForPushNotificationsAsync() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    registerForPushNotificationsAsync();\n  }, []);\n  return _jsx(Box, {\n    backgroundColor: \"#fff\",\n    safeArea: true,\n    p: \"2\",\n    py: \"4\",\n    w: \"80%\",\n    maxW: \"100%\",\n    children: _jsxs(KeyboardAvoidingView, {\n      behavior: Platform.OS === \"ios\" ? \"padding\" : \"height\",\n      style: {\n        flex: 1\n      },\n      children: [Spinner(), _jsx(Image, {\n        style: styles.title,\n        source: require(\"../assets/images/crewcoinlogo.png\")\n      }), _jsxs(ScrollView, {\n        children: [_jsx(Heading, {\n          color: \"amber.600\",\n          fontWeight: \"medium\",\n          size: \"lg\",\n          children: \"Sign up to continue!\"\n        }), _jsxs(VStack, {\n          space: 3,\n          mt: \"5\",\n          children: [_jsxs(FormControl, {\n            children: [_jsx(FormControl.Label, {\n              children: \"First Name\"\n            }), _jsx(Input, {\n              placeholder: \"First Name\",\n              onChangeText: function onChangeText(value) {\n                return setData(_objectSpread(_objectSpread({}, formData), {}, {\n                  firstname: value\n                }));\n              }\n            })]\n          }), _jsxs(FormControl, {\n            children: [_jsx(FormControl.Label, {\n              children: \"Last Name\"\n            }), _jsx(Input, {\n              placeholder: \"Last Name\",\n              onChangeText: function onChangeText(value) {\n                return setData(_objectSpread(_objectSpread({}, formData), {}, {\n                  lastname: value\n                }));\n              }\n            })]\n          }), _jsxs(FormControl, {\n            children: [_jsx(FormControl.Label, {\n              children: \"Email ID\"\n            }), _jsx(Input, {\n              placeholder: \"Email\",\n              onChangeText: function onChangeText(value) {\n                return setData(_objectSpread(_objectSpread({}, formData), {}, {\n                  username: value.toLowerCase()\n                }));\n              }\n            })]\n          }), _jsxs(FormControl, {\n            children: [_jsx(FormControl.Label, {\n              children: \"Password\"\n            }), _jsx(Input, {\n              placeholder: \"Password\",\n              type: \"password\",\n              onChangeText: function onChangeText(value) {\n                return setData(_objectSpread(_objectSpread({}, formData), {}, {\n                  password: value\n                }));\n              }\n            })]\n          }), _jsxs(FormControl, {\n            children: [_jsx(FormControl.Label, {\n              children: \"Confirm Password\"\n            }), _jsx(Input, {\n              placeholder: \"Confirm Password\",\n              type: \"password\",\n              onChangeText: function onChangeText(value) {\n                return setData(_objectSpread(_objectSpread({}, formData), {}, {\n                  confirmpassword: value\n                }));\n              }\n            })]\n          }), _jsxs(FormControl, {\n            children: [_jsx(FormControl.Label, {\n              children: \"Phone\"\n            }), _jsx(Input, {\n              placeholder: \"Phone\",\n              onChangeText: function onChangeText(value) {\n                return setData(_objectSpread(_objectSpread({}, formData), {}, {\n                  phone: value\n                }));\n              }\n            })]\n          }), _jsxs(FormControl, {\n            children: [_jsx(FormControl.Label, {\n              children: \"Portal ID\"\n            }), _jsx(Input, {\n              maxLength: 8,\n              placeholder: \"Portal ID\",\n              onChangeText: function onChangeText(value) {\n                return setData(_objectSpread(_objectSpread({}, formData), {}, {\n                  portalId: value.toUpperCase()\n                }));\n              }\n            })]\n          }), _jsx(Button, {\n            mt: \"2\",\n            colorScheme: \"yellow\",\n            onPress: function onPress() {\n              if (formData.password === formData.confirmpassword && formData.password.length > 7 && /^(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{6,16}$/.test(formData.password)) {\n                if (/.+@.+\\.[A-Za-z]+$/.test(formData.username)) {\n                  handleSubmit(formData, navigation, setUser, setValue, setIsLoading);\n                } else {\n                  Alert.alert(\"Alert Title\", \"Please enter valid email\", [{\n                    text: \"OK\",\n                    onPress: function onPress() {\n                      return console.log(\"OK Pressed\");\n                    }\n                  }]);\n                }\n              } else {\n                Alert.alert(\"Passwords do not match\", \"Password Must be at least 8 characters long and contain at least one number and one special character\", [{\n                  text: \"OK\",\n                  onPress: function onPress() {\n                    return console.log(\"OK Pressed\");\n                  }\n                }]);\n              }\n            },\n            children: \"Sign Up!\"\n          }), _jsx(VStack, {\n            mb: \"2\",\n            justifyContent: \"center\",\n            children: _jsxs(Center, {\n              mt: \"2\",\n              children: [_jsxs(Text, {\n                fontSize: \"sm\",\n                color: \"coolGray.600\",\n                _dark: {\n                  color: \"warmGray.200\"\n                },\n                children: [\"I'm an administrator.\", \" \"]\n              }), _jsx(Link, {\n                _text: {\n                  color: \"indigo.500\",\n                  fontWeight: \"medium\",\n                  fontSize: \"sm\"\n                },\n                href: \"https://www.crew-coin.com/#/signup\",\n                children: \"Setup New Organization\"\n              })]\n            })\n          }), _jsx(VStack, {\n            justifyContent: \"center\",\n            children: _jsxs(Center, {\n              children: [_jsxs(Text, {\n                fontSize: \"sm\",\n                color: \"coolGray.600\",\n                _dark: {\n                  color: \"warmGray.200\"\n                },\n                children: [\"I have an account. \", \" \"]\n              }), _jsx(Link, {\n                _text: {\n                  color: \"indigo.500\",\n                  fontWeight: \"medium\",\n                  fontSize: \"sm\"\n                },\n                onPress: function onPress() {\n                  return navigation.navigate(\"Login\");\n                },\n                children: \"Login.\"\n              })]\n            })\n          })]\n        })]\n      })]\n    })\n  });\n};\nfunction handleSubmit(formData, navigation, setUser, setValue, setIsLoading) {\n  setIsLoading(true);\n  fetch(\"https://crewcoinserver.vercel.app/crewuser/signup\", {\n    method: \"POST\",\n    headers: {\n      authorization: \"jwt\",\n      credentials: \"same-origin\",\n      Accept: \"application/json, text/html, */*\",\n      \"Content-Type\": \"application/json\",\n      mode: \"cors\"\n    },\n    body: JSON.stringify({\n      \"username\": formData.username,\n      \"password\": formData.password,\n      \"firstname\": formData.firstname[0].toUpperCase() + formData.firstname.substring(1),\n      \"lastname\": formData.lastname[0].toUpperCase() + formData.lastname.substring(1),\n      \"phone\": formData.phone,\n      \"portalId\": formData.portalId,\n      \"pushToken\": formData.pushToken\n    })\n  }).then(function (res) {\n    return res.json();\n  }).then(function (res) {\n    if (res.success) {\n      setValue(res.user);\n      navigation.navigate(\"Root\");\n    } else {\n      Alert.alert(\"Error\", \"\" + res.message, [{\n        text: \"Cancel\",\n        onPress: function onPress() {\n          return console.log(\"Cancel Pressed\");\n        },\n        style: \"cancel\"\n      }, {\n        text: \"OK\",\n        onPress: function onPress() {\n          return console.log(\"OK Pressed\");\n        }\n      }]);\n    }\n  }).catch(function (err) {\n    console.log(err);\n    Alert.alert(\"Error\", \"Something went wrong\", [{\n      text: \"OK\",\n      onPress: function onPress() {\n        return console.log(\"OK Pressed\");\n      }\n    }]);\n  });\n  setIsLoading(false);\n}\nexport default function SignupScreen() {\n  function AppBar() {\n    return _jsx(_Fragment, {\n      children: _jsx(Box, {\n        safeAreaTop: true,\n        backgroundColor: \"#fff\"\n      })\n    });\n  }\n  return _jsxs(NativeBaseProvider, {\n    children: [_jsx(AppBar, {}), _jsx(ScrollView, {\n      backgroundColor: \"#fff\",\n      children: _jsx(Center, {\n        flex: 1,\n        px: \"3\",\n        children: _jsx(Signup, {})\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  title: {\n    width: 350,\n    resizeMode: 'contain',\n    marginLeft: \"-14%\",\n    marginTop: -90,\n    marginBottom: -90\n  },\n  image: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: '100%'\n  }\n});","map":{"version":3,"names":["React","Box","Text","Heading","VStack","FormControl","Input","Link","Button","HStack","Center","NativeBaseProvider","useNavigation","useContext","useEffect","UserContext","Notifications","Permissions","setNotificationHandler","handleNotification","shouldShowAlert","Signup","navigation","value","setValue","useState","formData","setData","user","setUser","isLoading","setIsLoading","Spinner","require","marginTop","width","height","zIndex","justifyContent","alignItems","top","right","resizeMode","registerForPushNotificationsAsync","Platform","OS","getPermissionsAsync","existingStatus","status","finalStatus","requestPermissionsAsync","alert","token","getExpoPushTokenAsync","data","console","log","pushToken","setNotificationChannelAsync","name","importance","AndroidImportance","MAX","vibrationPattern","lightColor","flex","styles","title","firstname","lastname","username","toLowerCase","password","confirmpassword","phone","portalId","toUpperCase","length","test","handleSubmit","Alert","text","onPress","color","fontWeight","fontSize","navigate","fetch","method","headers","authorization","credentials","Accept","mode","body","JSON","stringify","substring","then","res","json","success","message","style","catch","err","SignupScreen","AppBar","StyleSheet","create","marginLeft","marginBottom","image"],"sources":["C:/Users/DavidWIlliams/Desktop/crewCoin/screens/SignupScreen.js"],"sourcesContent":["import * as React from \"react\"\r\nimport {\r\n    Box,\r\n    Text,\r\n    Heading,\r\n    VStack,\r\n    FormControl,\r\n    Input,\r\n    Link,\r\n    Button,\r\n    HStack,\r\n    Center,\r\n    NativeBaseProvider,\r\n} from \"native-base\"\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { StyleSheet, Image, Alert, ScrollView, KeyboardAvoidingView, Platform } from \"react-native\";\r\nimport { useContext, useEffect } from \"react\";\r\nimport { UserContext } from \"./UserContext\";\r\nimport * as Notifications from \"expo-notifications\"\r\nimport * as Permissions from \"expo-permissions\"\r\n\r\nNotifications.setNotificationHandler({\r\n    handleNotification: async () => {\r\n        return {\r\n            shouldShowAlert: true,\r\n        }\r\n    },\r\n})\r\n\r\nexport const Signup = () => {\r\n    const navigation = useNavigation();\r\n    const { value, setValue } = useContext(UserContext);\r\n    const [formData, setData] = React.useState({});\r\n    const [user, setUser] = React.useState({});\r\n    const [isLoading, setIsLoading] = React.useState(false);\r\n    //loading spinner\r\n    function Spinner() {\r\n        if (isLoading) {\r\n            return (\r\n                <Image source={require('../assets/images/genericspinner.gif')}\r\n                    style={{ marginTop: \"-69%\", width: '36%', height: '40%', zIndex: 2, justifyContent: \"center\", alignItems: \"center\", top: \"57%\", right: \"-33%\", resizeMode: \"contain\" }} />\r\n            )\r\n        }\r\n    }\r\n    //register for expo push notifications\r\n    registerForPushNotificationsAsync = async () => {\r\n        if (Platform.OS === 'android' || Platform.OS === 'ios') {\r\n          const { status: existingStatus } = await Notifications.getPermissionsAsync();\r\n          let finalStatus = existingStatus;\r\n          if (existingStatus !== 'granted') {\r\n            const { status } = await Notifications.requestPermissionsAsync();\r\n            finalStatus = status;\r\n          }\r\n          if (finalStatus !== 'granted') {\r\n            alert('Failed to get push token for push notification!');\r\n            return;\r\n          }\r\n          const token = (await Notifications.getExpoPushTokenAsync()).data;\r\n          console.log(token);\r\n          setData({ ...formData, pushToken: token })\r\n        } else {\r\n          alert('Must use physical device for Push Notifications');\r\n        }\r\n      \r\n        if (Platform.OS === 'android') {\r\n          Notifications.setNotificationChannelAsync('default', {\r\n            name: 'default',\r\n            importance: Notifications.AndroidImportance.MAX,\r\n            vibrationPattern: [0, 250, 250, 250],\r\n            lightColor: '#FF231F7C',\r\n          });\r\n        }\r\n        };\r\n\r\n    useEffect(() => {\r\n        // Permission for iOS\r\n        // Permissions.getAsync(Permissions.NOTIFICATIONS)\r\n        //     .then(statusObj => {\r\n        //         // Check if we already have permission\r\n        //         if (statusObj.status !== \"granted\") {\r\n        //             // If permission is not there, ask for the same\r\n        //             return Permissions.askAsync(Permissions.NOTIFICATIONS)\r\n        //         }\r\n        //         return statusObj\r\n        //     })\r\n        //     .then(statusObj => {\r\n        //         // If permission is still not given throw error\r\n        //         if (statusObj.status !== \"granted\") {\r\n        //             throw new Error(\"Permission not granted\")\r\n        //         }\r\n        //     })\r\n        //     .then(() => {\r\n        //         return Notifications.getExpoPushTokenAsync()\r\n        //     })\r\n        //     .then(response => {\r\n        //         const deviceToken = response.data\r\n        //         console.log({ deviceToken })\r\n        //         setData({ ...formData, pushToken: deviceToken })\r\n        //     })\r\n        //     .catch(err => {\r\n        //         return null\r\n        //     })\r\n            registerForPushNotificationsAsync();\r\n    }, [])\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Box backgroundColor=\"#fff\" safeArea p=\"2\" py=\"4\" w=\"80%\" maxW=\"100%\">\r\n\r\n            <KeyboardAvoidingView\r\n                behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\r\n                style={{ flex: 1 }}\r\n            >\r\n\r\n                {Spinner()}\r\n                <Image style={styles.title} source={require('../assets/images/crewcoinlogo.png')} />\r\n                <ScrollView>\r\n                    <Heading\r\n                        color=\"amber.600\"\r\n                        fontWeight=\"medium\"\r\n                        size=\"lg\"\r\n                    >\r\n                        Sign up to continue!\r\n                    </Heading>\r\n\r\n                    <VStack space={3} mt=\"5\">\r\n                        <FormControl>\r\n                            <FormControl.Label>First Name</FormControl.Label>\r\n                            <Input placeholder=\"First Name\" onChangeText={(value) => setData({ ...formData, firstname: value })} />\r\n                        </FormControl>\r\n                        <FormControl>\r\n                            <FormControl.Label>Last Name</FormControl.Label>\r\n                            <Input placeholder=\"Last Name\" onChangeText={(value) => setData({ ...formData, lastname: value })} />\r\n                        </FormControl>\r\n                        <FormControl>\r\n                            <FormControl.Label>Email ID</FormControl.Label>\r\n                            <Input placeholder=\"Email\" onChangeText={(value) => setData({ ...formData, username: value.toLowerCase() })} />\r\n                        </FormControl>\r\n                        <FormControl>\r\n                            <FormControl.Label>Password</FormControl.Label>\r\n                            <Input placeholder=\"Password\" type=\"password\" onChangeText={(value) => setData({ ...formData, password: value })} />\r\n                        </FormControl>\r\n                        <FormControl>\r\n                            <FormControl.Label>Confirm Password</FormControl.Label>\r\n                            <Input placeholder=\"Confirm Password\" type=\"password\" onChangeText={(value) => setData({ ...formData, confirmpassword: value })} />\r\n                        </FormControl>\r\n                        <FormControl>\r\n                            <FormControl.Label>Phone</FormControl.Label>\r\n                            <Input placeholder=\"Phone\" onChangeText={(value) => setData({ ...formData, phone: value })} />\r\n                        </FormControl>\r\n                        <FormControl>\r\n                            <FormControl.Label>Portal ID</FormControl.Label>\r\n                            <Input maxLength={8} placeholder=\"Portal ID\" onChangeText={(value) => setData({ ...formData, portalId: value.toUpperCase() })} />\r\n                        </FormControl>\r\n                        <Button mt=\"2\" colorScheme=\"yellow\"\r\n                            onPress={() => {\r\n                                if (formData.password === formData.confirmpassword && formData.password.length > 7 && /^(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{6,16}$/.test(formData.password)) {\r\n\r\n                                    if (/.+@.+\\.[A-Za-z]+$/.test(formData.username)) {\r\n                                        handleSubmit(formData, navigation, setUser, setValue, setIsLoading);\r\n                                    } else {\r\n                                        Alert.alert(\r\n                                            \"Alert Title\",\r\n                                            \"Please enter valid email\",\r\n                                            [\r\n                                                { text: \"OK\", onPress: () => console.log(\"OK Pressed\") }\r\n                                            ]\r\n                                        );\r\n                                    }\r\n                                } else {\r\n                                    Alert.alert(\r\n                                        \"Passwords do not match\",\r\n                                        \"Password Must be at least 8 characters long and contain at least one number and one special character\",\r\n                                        [\r\n                                            { text: \"OK\", onPress: () => console.log(\"OK Pressed\") }\r\n                                        ]\r\n                                    );\r\n                                }\r\n                            }\r\n                            }\r\n                        >\r\n                            Sign Up!\r\n                        </Button>\r\n                        \r\n                        <VStack mb=\"2\" justifyContent=\"center\">\r\n                        <Center mt=\"2\">\r\n                            <Text\r\n                                fontSize=\"sm\"\r\n                                color=\"coolGray.600\"\r\n                                _dark={{\r\n                                    color: \"warmGray.200\",\r\n                                }}\r\n                            >\r\n                                I'm an administrator.{\" \"}\r\n                            </Text>\r\n                            <Link\r\n                                _text={{\r\n                                    color: \"indigo.500\",\r\n                                    fontWeight: \"medium\",\r\n                                    fontSize: \"sm\",\r\n                                }}\r\n                                href=\"https://www.crew-coin.com/#/signup\"\r\n                            >\r\n                                Setup New Organization\r\n                            </Link>\r\n                            </Center>\r\n                        </VStack>\r\n                        <VStack justifyContent=\"center\">\r\n                        <Center>\r\n                            <Text\r\n                                fontSize=\"sm\"\r\n                                color=\"coolGray.600\"\r\n                                _dark={{\r\n                                    color: \"warmGray.200\",\r\n                                }}\r\n                            >\r\n                                I have an account. {\" \"}\r\n                            </Text>\r\n                            <Link\r\n                                _text={{\r\n                                    color: \"indigo.500\",\r\n                                    fontWeight: \"medium\",\r\n                                    fontSize: \"sm\",\r\n                                }}\r\n                                onPress={() => navigation.navigate(\"Login\")}\r\n                            >\r\n                                Login.\r\n                            </Link>\r\n                            </Center>\r\n                        </VStack>\r\n                        \r\n                    </VStack>\r\n                </ScrollView>\r\n            </KeyboardAvoidingView>\r\n        </Box>\r\n    )\r\n}\r\n\r\n\r\n\r\nfunction handleSubmit(formData, navigation, setUser, setValue, setIsLoading) {\r\n    setIsLoading(true)\r\n    fetch(\"https://crewcoinserver.vercel.app/crewuser/signup\", {\r\n        method: \"POST\",\r\n        headers: {\r\n            authorization: \"jwt\",\r\n            credentials: \"same-origin\",\r\n            Accept: \"application/json, text/html, */*\",\r\n            \"Content-Type\": \"application/json\",\r\n            mode: \"cors\"\r\n        },\r\n        body: JSON.stringify({\r\n            \"username\": formData.username,\r\n            \"password\": formData.password,\r\n            \"firstname\": formData.firstname[0].toUpperCase() + formData.firstname.substring(1),\r\n            \"lastname\": formData.lastname[0].toUpperCase() + formData.lastname.substring(1),\r\n            \"phone\": formData.phone,\r\n            \"portalId\": formData.portalId,\r\n            \"pushToken\": formData.pushToken\r\n\r\n        }),\r\n    })\r\n\r\n        .then(res => res.json())\r\n        .then(res => {\r\n            if (res.success) {\r\n                setValue(res.user);\r\n                navigation.navigate(\"Root\");\r\n            } else {\r\n                Alert.alert(\r\n                    \"Error\",\r\n                    `${res.message}`,\r\n                    [\r\n                        {\r\n                            text: \"Cancel\",\r\n                            onPress: () => console.log(\"Cancel Pressed\"),\r\n                            style: \"cancel\"\r\n                        },\r\n                        { text: \"OK\", onPress: () => console.log(\"OK Pressed\") }\r\n                    ]\r\n                );\r\n            }\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n            Alert.alert(\r\n                \"Error\",\r\n                \"Something went wrong\",\r\n                [\r\n\r\n                    { text: \"OK\", onPress: () => console.log(\"OK Pressed\") }\r\n                ]\r\n            )\r\n        }\r\n        );\r\n    setIsLoading(false)\r\n}\r\n\r\nexport default function SignupScreen() {\r\n\r\n    function AppBar() {\r\n        return (\r\n          <>\r\n            <Box safeAreaTop backgroundColor=\"#fff\" />      \r\n          </>\r\n        )\r\n      }\r\n    return (\r\n        <NativeBaseProvider>\r\n        <AppBar />\r\n            <ScrollView backgroundColor=\"#fff\">\r\n                <Center flex={1} px=\"3\">\r\n                    <Signup />\r\n                </Center>\r\n            </ScrollView>\r\n        </NativeBaseProvider>\r\n    )\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n\r\n    title: {\r\n        width: 350,\r\n        resizeMode: 'contain',\r\n        marginLeft: \"-14%\",\r\n        marginTop: -90,\r\n        marginBottom: -90,\r\n\r\n    },\r\n    image: {\r\n        flex: 1,\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        width: '100%',\r\n    },\r\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}