{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport * as React from \"react\";\nimport { Box, Text, Heading, VStack, FormControl, Input, Link, Button, HStack, Center, View, NativeBaseProvider } from \"native-base\";\nimport { useNavigation } from '@react-navigation/native';\nimport * as SecureStore from 'expo-secure-store';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport { Component, useContext, useEffect } from \"react\";\nimport { UserContext } from \"./UserContext\";\nimport { getNextTriggerDateAsync } from \"expo-notifications\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport function Login() {\n  var navigation = useNavigation();\n  var _useContext = useContext(UserContext),\n    value = _useContext.value,\n    setValue = _useContext.setValue;\n  var _React$useState = React.useState(_objectSpread(_objectSpread({}, formData), {}, {\n      username: username\n    })),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    formData = _React$useState2[0],\n    setData = _React$useState2[1];\n  var _React$useState3 = React.useState(\"\"),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    username = _React$useState4[0],\n    setUsername = _React$useState4[1];\n  var _React$useState5 = React.useState({}),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    user = _React$useState6[0],\n    setUser = _React$useState6[1];\n  var _React$useState7 = React.useState(false),\n    _React$useState8 = _slicedToArray(_React$useState7, 2),\n    isLoading = _React$useState8[0],\n    setIsLoading = _React$useState8[1];\n  function getValueFor(_x) {\n    return _getValueFor.apply(this, arguments);\n  }\n  function _getValueFor() {\n    _getValueFor = _asyncToGenerator(function* (key) {\n      var result = yield SecureStore.getItemAsync(key);\n      if (result) {\n        setUsername(result);\n      } else {\n        setUsername(\"\");\n      }\n    });\n    return _getValueFor.apply(this, arguments);\n  }\n  getValueFor(\"username\");\n  useEffect(function () {\n    if (username.length > 0) {\n      setData(_objectSpread(_objectSpread({}, formData), {}, {\n        username: username\n      }));\n    }\n  }, [username]);\n  function Spinner() {\n    if (isLoading) {\n      return _jsx(Image, {\n        source: require(\"../assets/images/genericspinner.gif\"),\n        style: {\n          marginTop: \"-69%\",\n          width: '36%',\n          height: '40%',\n          zIndex: 2,\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          top: \"57%\",\n          right: \"-33%\",\n          resizeMode: \"contain\"\n        }\n      });\n    }\n  }\n  return _jsxs(View, {\n    width: \"80%\",\n    backgroundColor: \"#fff\",\n    children: [Spinner(), _jsxs(Box, {\n      mx: \"auto\",\n      safeArea: true,\n      p: \"2\",\n      py: \"4\",\n      w: \"100%\",\n      maxW: \"340\",\n      children: [_jsx(Image, {\n        style: styles.title,\n        source: require(\"../assets/images/crewcoinlogo.png\")\n      }), _jsx(Heading, {\n        _dark: {\n          color: \"warmGray.200\"\n        },\n        color: \"coolGray.600\",\n        fontWeight: \"medium\",\n        size: \"xs\",\n        children: \"Sign in to continue!\"\n      }), _jsxs(VStack, {\n        space: 3,\n        mt: \"5\",\n        children: [_jsxs(FormControl, {\n          children: [_jsx(FormControl.Label, {\n            children: \"Email ID\"\n          }), _jsx(Input, {\n            defaultValue: username,\n            type: \"email\",\n            onChangeText: function onChangeText(value) {\n              return setData(_objectSpread(_objectSpread({}, formData), {}, {\n                username: value.toLowerCase()\n              }));\n            }\n          })]\n        }), _jsxs(FormControl, {\n          children: [_jsx(FormControl.Label, {\n            children: \"Password\"\n          }), _jsx(Input, {\n            type: \"password\",\n            onChangeText: function onChangeText(value) {\n              return setData(_objectSpread(_objectSpread({}, formData), {}, {\n                password: value\n              }));\n            }\n          }), _jsx(Link, {\n            _text: {\n              color: \"indigo.500\",\n              fontWeight: \"medium\",\n              fontSize: \"sm\"\n            },\n            href: \"https://www.crew-coin.com/#/forgotpassword\",\n            children: \"Forgot Password?\"\n          })]\n        }), _jsx(Button, {\n          mt: \"2\",\n          colorScheme: \"yellow\",\n          onPress: function onPress() {\n            handleSubmit(formData, navigation, setUser, setValue, setData, isLoading, setIsLoading);\n          },\n          children: \"Sign in\"\n        }), _jsxs(HStack, {\n          mt: \"6\",\n          justifyContent: \"center\",\n          children: [_jsxs(Text, {\n            fontSize: \"sm\",\n            color: \"coolGray.600\",\n            _dark: {\n              color: \"warmGray.200\"\n            },\n            children: [\"I'm a new user.\", \" \"]\n          }), _jsx(Link, {\n            _text: {\n              color: \"indigo.500\",\n              fontWeight: \"medium\",\n              fontSize: \"sm\"\n            },\n            onPress: function onPress() {\n              return navigation.navigate(\"Signup\");\n            },\n            children: \"Sign Up\"\n          })]\n        }), _jsxs(HStack, {\n          mb: \"6\",\n          justifyContent: \"center\",\n          children: [_jsxs(Text, {\n            fontSize: \"sm\",\n            color: \"coolGray.600\",\n            _dark: {\n              color: \"warmGray.200\"\n            },\n            children: [\"I'm an administrator.\", \" \"]\n          }), _jsx(Link, {\n            _text: {\n              color: \"indigo.500\",\n              fontWeight: \"medium\",\n              fontSize: \"sm\"\n            },\n            href: \"https://www.crew-coin.com/#/signup\",\n            children: \"Setup New Organization\"\n          })]\n        })]\n      })]\n    })]\n  });\n}\nfunction save(_x2, _x3) {\n  return _save.apply(this, arguments);\n}\nfunction _save() {\n  _save = _asyncToGenerator(function* (key, value) {\n    yield SecureStore.setItemAsync(key, value);\n  });\n  return _save.apply(this, arguments);\n}\nfunction handleSubmit(formData, navigation, setUser, setValue, setData, isLoading, setIsLoading) {\n  setIsLoading(true);\n  fetch(\"https://crewcoinserver.vercel.app/crewuser/login\", {\n    method: \"POST\",\n    headers: {\n      authorization: \"jwt\",\n      credentials: \"same-origin\",\n      Accept: \"application/json, text/html, */*\",\n      \"Content-Type\": \"application/json\",\n      mode: \"cors\"\n    },\n    body: JSON.stringify({\n      \"username\": formData.username,\n      \"password\": formData.password\n    })\n  }).then(function (res) {\n    return res.json();\n  }).then(function (res) {\n    if (res) {\n      console.log(res.session, \"session\");\n      if (res.success === true) {\n        setIsLoading(false);\n        setUser(res.user);\n        setValue(res.user);\n        save(\"token\", res.token);\n        save(\"username\", res.user.username);\n        setIsLoading(false);\n        navigation.navigate('Root');\n      }\n    }\n  }).catch(function (err) {\n    console.log(err.toString());\n    if (err.toString() == \"SyntaxError: JSON Parse error: Unexpected identifier \\\"Unauthorized\\\"\") {\n      Alert.alert(\"Invalid Username or Password\", \"\", [{\n        text: \"OK\",\n        onPress: function onPress() {\n          return console.log(\"OK Pressed\");\n        }\n      }]);\n      setIsLoading(false);\n    } else {\n      Alert.alert(\"Error\", \"Something went wrong. Check internet connection\", [{\n        text: \"OK\",\n        onPress: function onPress() {\n          return console.log(\"OK Pressed\");\n        }\n      }]);\n      setIsLoading(false);\n    }\n  });\n}\nexport default function LoginScreen() {\n  return _jsx(_Fragment, {\n    children: _jsx(KeyboardAvoidingView, {\n      behavior: Platform.OS === \"ios\" ? \"padding\" : \"height\",\n      style: {\n        flex: 1\n      },\n      children: _jsx(NativeBaseProvider, {\n        children: _jsx(ScrollView, {\n          backgroundColor: \"#fff\",\n          children: _jsx(Center, {\n            flex: 1,\n            px: \"3\",\n            children: _jsx(Login, {})\n          })\n        })\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  title: {\n    width: 350,\n    resizeMode: 'contain',\n    marginLeft: -40\n  },\n  image: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: '100%'\n  }\n});","map":{"version":3,"names":["React","Box","Text","Heading","VStack","FormControl","Input","Link","Button","HStack","Center","View","NativeBaseProvider","useNavigation","SecureStore","Component","useContext","useEffect","UserContext","getNextTriggerDateAsync","Login","navigation","value","setValue","useState","formData","username","setData","setUsername","user","setUser","isLoading","setIsLoading","getValueFor","key","result","getItemAsync","length","Spinner","require","marginTop","width","height","zIndex","justifyContent","alignItems","top","right","resizeMode","styles","title","color","toLowerCase","password","fontWeight","fontSize","handleSubmit","navigate","save","setItemAsync","fetch","method","headers","authorization","credentials","Accept","mode","body","JSON","stringify","then","res","json","console","log","session","success","token","catch","err","toString","Alert","alert","text","onPress","LoginScreen","Platform","OS","flex","StyleSheet","create","marginLeft","image"],"sources":["C:/Users/DavidWIlliams/Desktop/crewCoin/screens/LoginScreen.js"],"sourcesContent":["import * as React from \"react\"\r\nimport {\r\n    Box,\r\n    Text,\r\n    Heading,\r\n    VStack,\r\n    FormControl,\r\n    Input,\r\n    Link,\r\n    Button,\r\n    HStack,\r\n    Center,\r\n    View,\r\n    NativeBaseProvider,\r\n} from \"native-base\"\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport * as SecureStore from 'expo-secure-store';\r\nimport { StyleSheet, Image, Alert, ScrollView, KeyboardAvoidingView } from \"react-native\";\r\nimport { Component, useContext, useEffect } from \"react\";\r\nimport { UserContext } from \"./UserContext\";\r\nimport { getNextTriggerDateAsync } from \"expo-notifications\";\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport function Login() {\r\n    const navigation = useNavigation();\r\n    const { value, setValue } = useContext(UserContext);\r\n    const [formData, setData] = React.useState({ ...formData, username: username });\r\n    const [username, setUsername] = React.useState(\"\");\r\n    const [user, setUser] = React.useState({});\r\n    const [isLoading, setIsLoading] = React.useState(false);\r\n\r\n    async function getValueFor(key) {\r\n        let result = await SecureStore.getItemAsync(key);\r\n        if (result) {\r\n            setUsername(result);\r\n        } else {\r\n            setUsername(\"\");\r\n        }\r\n    }\r\n    getValueFor(\"username\");\r\n\r\n\r\n    useEffect(() => {\r\n        if (username.length > 0) {\r\n            setData({ ...formData, username: username });\r\n        }\r\n    }, [username]);\r\n\r\n\r\n\r\n\r\n    function Spinner() {\r\n        if (isLoading) {\r\n            return (\r\n                <Image source={require('../assets/images/genericspinner.gif')}\r\n                    style={{ marginTop: \"-69%\", width: '36%', height: '40%', zIndex: 2, justifyContent: \"center\", alignItems: \"center\", top: \"57%\", right: \"-33%\", resizeMode: \"contain\" }} />\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <View width=\"80%\" backgroundColor=\"#fff\">\r\n            {Spinner()}\r\n            <Box mx=\"auto\" safeArea p=\"2\" py=\"4\" w=\"100%\" maxW=\"340\" >\r\n                <Image style={styles.title} source={require('../assets/images/crewcoinlogo.png')} />\r\n                <Heading\r\n\r\n                    _dark={{\r\n                        color: \"warmGray.200\",\r\n                    }}\r\n                    color=\"coolGray.600\"\r\n                    fontWeight=\"medium\"\r\n                    size=\"xs\"\r\n                >\r\n                    Sign in to continue!\r\n                </Heading>\r\n\r\n                <VStack space={3} mt=\"5\">\r\n                    <FormControl>\r\n                        <FormControl.Label>Email ID</FormControl.Label>\r\n                        <Input defaultValue={username} type=\"email\" onChangeText={(value) => setData({ ...formData, username: value.toLowerCase() })} />\r\n                    </FormControl>\r\n                    <FormControl>\r\n                        <FormControl.Label>Password</FormControl.Label>\r\n                        <Input type=\"password\" onChangeText={(value) => setData({ ...formData, password: value })} />\r\n                        <Link\r\n                            _text={{\r\n                                color: \"indigo.500\",\r\n                                fontWeight: \"medium\",\r\n                                fontSize: \"sm\",\r\n                            }}\r\n                            href=\"https://www.crew-coin.com/#/forgotpassword\"\r\n                        >\r\n                            Forgot Password?\r\n                        </Link>\r\n                    </FormControl>\r\n                    <Button mt=\"2\" colorScheme=\"yellow\"\r\n                        onPress={() => {\r\n\r\n                            (handleSubmit(formData, navigation, setUser, setValue, setData, isLoading, setIsLoading));\r\n\r\n\r\n                        }}\r\n                    >\r\n                        Sign in\r\n                    </Button>\r\n                    <HStack mt=\"6\" justifyContent=\"center\">\r\n                        <Text\r\n                            fontSize=\"sm\"\r\n                            color=\"coolGray.600\"\r\n                            _dark={{\r\n                                color: \"warmGray.200\",\r\n                            }}\r\n\r\n                        >\r\n                            I'm a new user.{\" \"}\r\n                        </Text>\r\n                        <Link\r\n                            _text={{\r\n                                color: \"indigo.500\",\r\n                                fontWeight: \"medium\",\r\n                                fontSize: \"sm\",\r\n                            }}\r\n                            onPress={() => navigation.navigate(\"Signup\")}\r\n                        >\r\n                            Sign Up\r\n                        </Link>\r\n                    </HStack>\r\n                    <HStack mb=\"6\" justifyContent=\"center\">\r\n                        <Text\r\n                            fontSize=\"sm\"\r\n                            color=\"coolGray.600\"\r\n                            _dark={{\r\n                                color: \"warmGray.200\",\r\n                            }}\r\n                        >\r\n                            I'm an administrator.{\" \"}\r\n                        </Text>\r\n                        <Link\r\n                            _text={{\r\n                                color: \"indigo.500\",\r\n                                fontWeight: \"medium\",\r\n                                fontSize: \"sm\",\r\n                            }}\r\n                            href=\"https://www.crew-coin.com/#/signup\"\r\n                        >\r\n                            Setup New Organization\r\n                        </Link>\r\n                    </HStack>\r\n                </VStack>\r\n            </Box>\r\n        </View>\r\n    )\r\n}\r\n\r\nasync function save(key, value) {\r\n    await SecureStore.setItemAsync(key, value);\r\n}\r\n\r\n\r\nfunction handleSubmit(formData, navigation, setUser, setValue, setData, isLoading, setIsLoading) {\r\n    setIsLoading(true);\r\n    fetch(\"https://crewcoinserver.vercel.app/crewuser/login\", {\r\n        method: \"POST\",\r\n        headers: {\r\n            authorization: \"jwt\",\r\n            credentials: \"same-origin\",\r\n            Accept: \"application/json, text/html, */*\",\r\n            \"Content-Type\": \"application/json\",\r\n            mode: \"cors\"\r\n        },\r\n        body: JSON.stringify({\r\n            \"username\": formData.username,\r\n            \"password\": formData.password\r\n        }),\r\n    })\r\n\r\n        .then(res => res.json())\r\n        .then(res => {\r\n            if (res) {\r\n                console.log(res.session, \"session\")\r\n                if (res.success === true) {\r\n                    setIsLoading(false);\r\n                    setUser(res.user);\r\n                    setValue(res.user);\r\n                    //store json web token in secure storage\r\n                    save(\"token\", res.token);\r\n                    save(\"username\", res.user.username);\r\n                    setIsLoading(false);\r\n                    navigation.navigate('Root');\r\n                }\r\n            }\r\n        }\r\n        )\r\n        .catch(err => {\r\n            console.log(err.toString())\r\n            if (err.toString() == `SyntaxError: JSON Parse error: Unexpected identifier \"Unauthorized\"`) {\r\n                Alert.alert(\r\n                    \"Invalid Username or Password\",\r\n                    \"\",\r\n                    [\r\n\r\n                        { text: \"OK\", onPress: () => console.log(\"OK Pressed\") }\r\n                    ]\r\n                )\r\n                setIsLoading(false);\r\n            }\r\n            else {\r\n                Alert.alert(\r\n                    \"Error\",\r\n                    \"Something went wrong. Check internet connection\",\r\n                    [\r\n\r\n                        { text: \"OK\", onPress: () => console.log(\"OK Pressed\") }\r\n                    ]\r\n                )\r\n                setIsLoading(false);\r\n            }\r\n        }\r\n        )\r\n\r\n}\r\n\r\nexport default function LoginScreen() {\r\n\r\n    return (\r\n        <>\r\n            <KeyboardAvoidingView\r\n                behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\r\n                style={{ flex: 1 }}\r\n\r\n            >\r\n                <NativeBaseProvider>\r\n                    <ScrollView backgroundColor=\"#fff\" >\r\n                        <Center flex={1} px=\"3\">\r\n                            <Login />\r\n                        </Center>\r\n                    </ScrollView>\r\n                </NativeBaseProvider>\r\n            </KeyboardAvoidingView>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n\r\n    title: {\r\n        width: 350,\r\n        resizeMode: 'contain',\r\n        marginLeft: -40,\r\n\r\n\r\n    },\r\n    image: {\r\n        flex: 1,\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        width: '100%',\r\n    },\r\n});"],"mappings":";;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SACIC,GAAG,EACHC,IAAI,EACJC,OAAO,EACPC,MAAM,EACNC,WAAW,EACXC,KAAK,EACLC,IAAI,EACJC,MAAM,EACNC,MAAM,EACNC,MAAM,EACNC,IAAI,EACJC,kBAAkB,QACf,aAAa;AACpB,SAASC,aAAa,QAAQ,0BAA0B;AACxD,OAAO,KAAKC,WAAW,MAAM,mBAAmB;AAAC;AAAA;AAAA;AAAA;AAAA;AAEjD,SAASC,SAAS,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AACxD,SAASC,WAAW;AACpB,SAASC,uBAAuB,QAAQ,oBAAoB;AAAC;AAAA;AAAA;AAO7D,OAAO,SAASC,KAAK,GAAG;EACpB,IAAMC,UAAU,GAAGR,aAAa,EAAE;EAClC,kBAA4BG,UAAU,CAACE,WAAW,CAAC;IAA3CI,KAAK,eAALA,KAAK;IAAEC,QAAQ,eAARA,QAAQ;EACvB,sBAA4BvB,KAAK,CAACwB,QAAQ,iCAAMC,QAAQ;MAAEC,QAAQ,EAAEA;IAAQ,GAAG;IAAA;IAAxED,QAAQ;IAAEE,OAAO;EACxB,uBAAgC3B,KAAK,CAACwB,QAAQ,CAAC,EAAE,CAAC;IAAA;IAA3CE,QAAQ;IAAEE,WAAW;EAC5B,uBAAwB5B,KAAK,CAACwB,QAAQ,CAAC,CAAC,CAAC,CAAC;IAAA;IAAnCK,IAAI;IAAEC,OAAO;EACpB,uBAAkC9B,KAAK,CAACwB,QAAQ,CAAC,KAAK,CAAC;IAAA;IAAhDO,SAAS;IAAEC,YAAY;EAA0B,SAEzCC,WAAW;IAAA;EAAA;EAAA;IAAA,iCAA1B,WAA2BC,GAAG,EAAE;MAC5B,IAAIC,MAAM,SAASrB,WAAW,CAACsB,YAAY,CAACF,GAAG,CAAC;MAChD,IAAIC,MAAM,EAAE;QACRP,WAAW,CAACO,MAAM,CAAC;MACvB,CAAC,MAAM;QACHP,WAAW,CAAC,EAAE,CAAC;MACnB;IACJ,CAAC;IAAA;EAAA;EACDK,WAAW,CAAC,UAAU,CAAC;EAGvBhB,SAAS,CAAC,YAAM;IACZ,IAAIS,QAAQ,CAACW,MAAM,GAAG,CAAC,EAAE;MACrBV,OAAO,iCAAMF,QAAQ;QAAEC,QAAQ,EAAEA;MAAQ,GAAG;IAChD;EACJ,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;EAKd,SAASY,OAAO,GAAG;IACf,IAAIP,SAAS,EAAE;MACX,OACI,KAAC,KAAK;QAAC,MAAM,EAAEQ,OAAO,uCAAwC;QAC1D,KAAK,EAAE;UAAEC,SAAS,EAAE,MAAM;UAAEC,KAAK,EAAE,KAAK;UAAEC,MAAM,EAAE,KAAK;UAAEC,MAAM,EAAE,CAAC;UAAEC,cAAc,EAAE,QAAQ;UAAEC,UAAU,EAAE,QAAQ;UAAEC,GAAG,EAAE,KAAK;UAAEC,KAAK,EAAE,MAAM;UAAEC,UAAU,EAAE;QAAU;MAAE,EAAG;IAEtL;EACJ;EAEA,OACI,MAAC,IAAI;IAAC,KAAK,EAAC,KAAK;IAAC,eAAe,EAAC,MAAM;IAAA,WACnCV,OAAO,EAAE,EACV,MAAC,GAAG;MAAC,EAAE,EAAC,MAAM;MAAC,QAAQ;MAAC,CAAC,EAAC,GAAG;MAAC,EAAE,EAAC,GAAG;MAAC,CAAC,EAAC,MAAM;MAAC,IAAI,EAAC,KAAK;MAAA,WACpD,KAAC,KAAK;QAAC,KAAK,EAAEW,MAAM,CAACC,KAAM;QAAC,MAAM,EAAEX,OAAO;MAAsC,EAAG,EACpF,KAAC,OAAO;QAEJ,KAAK,EAAE;UACHY,KAAK,EAAE;QACX,CAAE;QACF,KAAK,EAAC,cAAc;QACpB,UAAU,EAAC,QAAQ;QACnB,IAAI,EAAC,IAAI;QAAA;MAAA,EAGH,EAEV,MAAC,MAAM;QAAC,KAAK,EAAE,CAAE;QAAC,EAAE,EAAC,GAAG;QAAA,WACpB,MAAC,WAAW;UAAA,WACR,KAAC,WAAW,CAAC,KAAK;YAAA;UAAA,EAA6B,EAC/C,KAAC,KAAK;YAAC,YAAY,EAAEzB,QAAS;YAAC,IAAI,EAAC,OAAO;YAAC,YAAY,EAAE,sBAACJ,KAAK;cAAA,OAAKK,OAAO,iCAAMF,QAAQ;gBAAEC,QAAQ,EAAEJ,KAAK,CAAC8B,WAAW;cAAE,GAAG;YAAA;UAAC,EAAG;QAAA,EACtH,EACd,MAAC,WAAW;UAAA,WACR,KAAC,WAAW,CAAC,KAAK;YAAA;UAAA,EAA6B,EAC/C,KAAC,KAAK;YAAC,IAAI,EAAC,UAAU;YAAC,YAAY,EAAE,sBAAC9B,KAAK;cAAA,OAAKK,OAAO,iCAAMF,QAAQ;gBAAE4B,QAAQ,EAAE/B;cAAK,GAAG;YAAA;UAAC,EAAG,EAC7F,KAAC,IAAI;YACD,KAAK,EAAE;cACH6B,KAAK,EAAE,YAAY;cACnBG,UAAU,EAAE,QAAQ;cACpBC,QAAQ,EAAE;YACd,CAAE;YACF,IAAI,EAAC,4CAA4C;YAAA;UAAA,EAG9C;QAAA,EACG,EACd,KAAC,MAAM;UAAC,EAAE,EAAC,GAAG;UAAC,WAAW,EAAC,QAAQ;UAC/B,OAAO,EAAE,mBAAM;YAEVC,YAAY,CAAC/B,QAAQ,EAAEJ,UAAU,EAAES,OAAO,EAAEP,QAAQ,EAAEI,OAAO,EAAEI,SAAS,EAAEC,YAAY,CAAC;UAG5F,CAAE;UAAA;QAAA,EAGG,EACT,MAAC,MAAM;UAAC,EAAE,EAAC,GAAG;UAAC,cAAc,EAAC,QAAQ;UAAA,WAClC,MAAC,IAAI;YACD,QAAQ,EAAC,IAAI;YACb,KAAK,EAAC,cAAc;YACpB,KAAK,EAAE;cACHmB,KAAK,EAAE;YACX,CAAE;YAAA,8BAGc,GAAG;UAAA,EAChB,EACP,KAAC,IAAI;YACD,KAAK,EAAE;cACHA,KAAK,EAAE,YAAY;cACnBG,UAAU,EAAE,QAAQ;cACpBC,QAAQ,EAAE;YACd,CAAE;YACF,OAAO,EAAE;cAAA,OAAMlC,UAAU,CAACoC,QAAQ,CAAC,QAAQ,CAAC;YAAA,CAAC;YAAA;UAAA,EAG1C;QAAA,EACF,EACT,MAAC,MAAM;UAAC,EAAE,EAAC,GAAG;UAAC,cAAc,EAAC,QAAQ;UAAA,WAClC,MAAC,IAAI;YACD,QAAQ,EAAC,IAAI;YACb,KAAK,EAAC,cAAc;YACpB,KAAK,EAAE;cACHN,KAAK,EAAE;YACX,CAAE;YAAA,oCAEoB,GAAG;UAAA,EACtB,EACP,KAAC,IAAI;YACD,KAAK,EAAE;cACHA,KAAK,EAAE,YAAY;cACnBG,UAAU,EAAE,QAAQ;cACpBC,QAAQ,EAAE;YACd,CAAE;YACF,IAAI,EAAC,oCAAoC;YAAA;UAAA,EAGtC;QAAA,EACF;MAAA,EACJ;IAAA,EACP;EAAA,EACH;AAEf;AAAC,SAEcG,IAAI;EAAA;AAAA;AAAA;EAAA,0BAAnB,WAAoBxB,GAAG,EAAEZ,KAAK,EAAE;IAC5B,MAAMR,WAAW,CAAC6C,YAAY,CAACzB,GAAG,EAAEZ,KAAK,CAAC;EAC9C,CAAC;EAAA;AAAA;AAGD,SAASkC,YAAY,CAAC/B,QAAQ,EAAEJ,UAAU,EAAES,OAAO,EAAEP,QAAQ,EAAEI,OAAO,EAAEI,SAAS,EAAEC,YAAY,EAAE;EAC7FA,YAAY,CAAC,IAAI,CAAC;EAClB4B,KAAK,CAAC,kDAAkD,EAAE;IACtDC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACLC,aAAa,EAAE,KAAK;MACpBC,WAAW,EAAE,aAAa;MAC1BC,MAAM,EAAE,kCAAkC;MAC1C,cAAc,EAAE,kBAAkB;MAClCC,IAAI,EAAE;IACV,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACjB,UAAU,EAAE5C,QAAQ,CAACC,QAAQ;MAC7B,UAAU,EAAED,QAAQ,CAAC4B;IACzB,CAAC;EACL,CAAC,CAAC,CAEGiB,IAAI,CAAC,UAAAC,GAAG;IAAA,OAAIA,GAAG,CAACC,IAAI,EAAE;EAAA,EAAC,CACvBF,IAAI,CAAC,UAAAC,GAAG,EAAI;IACT,IAAIA,GAAG,EAAE;MACLE,OAAO,CAACC,GAAG,CAACH,GAAG,CAACI,OAAO,EAAE,SAAS,CAAC;MACnC,IAAIJ,GAAG,CAACK,OAAO,KAAK,IAAI,EAAE;QACtB5C,YAAY,CAAC,KAAK,CAAC;QACnBF,OAAO,CAACyC,GAAG,CAAC1C,IAAI,CAAC;QACjBN,QAAQ,CAACgD,GAAG,CAAC1C,IAAI,CAAC;QAElB6B,IAAI,CAAC,OAAO,EAAEa,GAAG,CAACM,KAAK,CAAC;QACxBnB,IAAI,CAAC,UAAU,EAAEa,GAAG,CAAC1C,IAAI,CAACH,QAAQ,CAAC;QACnCM,YAAY,CAAC,KAAK,CAAC;QACnBX,UAAU,CAACoC,QAAQ,CAAC,MAAM,CAAC;MAC/B;IACJ;EACJ,CAAC,CACA,CACAqB,KAAK,CAAC,UAAAC,GAAG,EAAI;IACVN,OAAO,CAACC,GAAG,CAACK,GAAG,CAACC,QAAQ,EAAE,CAAC;IAC3B,IAAID,GAAG,CAACC,QAAQ,EAAE,2EAAyE,EAAE;MACzFC,KAAK,CAACC,KAAK,CACP,8BAA8B,EAC9B,EAAE,EACF,CAEI;QAAEC,IAAI,EAAE,IAAI;QAAEC,OAAO,EAAE;UAAA,OAAMX,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;QAAA;MAAC,CAAC,CAC3D,CACJ;MACD1C,YAAY,CAAC,KAAK,CAAC;IACvB,CAAC,MACI;MACDiD,KAAK,CAACC,KAAK,CACP,OAAO,EACP,iDAAiD,EACjD,CAEI;QAAEC,IAAI,EAAE,IAAI;QAAEC,OAAO,EAAE;UAAA,OAAMX,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;QAAA;MAAC,CAAC,CAC3D,CACJ;MACD1C,YAAY,CAAC,KAAK,CAAC;IACvB;EACJ,CAAC,CACA;AAET;AAEA,eAAe,SAASqD,WAAW,GAAG;EAElC,OACI;IAAA,UACI,KAAC,oBAAoB;MACjB,QAAQ,EAAEC,QAAQ,CAACC,EAAE,KAAK,KAAK,GAAG,SAAS,GAAG,QAAS;MACvD,KAAK,EAAE;QAAEC,IAAI,EAAE;MAAE,CAAE;MAAA,UAGnB,KAAC,kBAAkB;QAAA,UACf,KAAC,UAAU;UAAC,eAAe,EAAC,MAAM;UAAA,UAC9B,KAAC,MAAM;YAAC,IAAI,EAAE,CAAE;YAAC,EAAE,EAAC,GAAG;YAAA,UACnB,KAAC,KAAK;UAAG;QACJ;MACA;IACI;EACF,EACxB;AAEX;AAKA,IAAMvC,MAAM,GAAGwC,UAAU,CAACC,MAAM,CAAC;EAE7BxC,KAAK,EAAE;IACHT,KAAK,EAAE,GAAG;IACVO,UAAU,EAAE,SAAS;IACrB2C,UAAU,EAAE,CAAC;EAGjB,CAAC;EACDC,KAAK,EAAE;IACHJ,IAAI,EAAE,CAAC;IACP5C,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,QAAQ;IACpBJ,KAAK,EAAE;EACX;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module"}