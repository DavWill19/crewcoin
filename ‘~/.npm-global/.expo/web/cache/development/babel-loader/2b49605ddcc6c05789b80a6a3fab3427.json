{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from \"react\";\nimport { Box, Text, Heading, VStack, FormControl, Input, Link, Button, HStack, Center, View, NativeBaseProvider } from \"native-base\";\nimport { useNavigation } from '@react-navigation/native';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport { Component, useContext } from \"react\";\nimport { UserContext } from \"./UserContext\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport function Login() {\n  var navigation = useNavigation();\n\n  var _useContext = useContext(UserContext),\n      value = _useContext.value,\n      setValue = _useContext.setValue;\n\n  var _React$useState = React.useState({}),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      formData = _React$useState2[0],\n      setData = _React$useState2[1];\n\n  var _React$useState3 = React.useState({}),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      user = _React$useState4[0],\n      setUser = _React$useState4[1];\n\n  var _React$useState5 = React.useState(false),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      isLoading = _React$useState6[0],\n      setIsLoading = _React$useState6[1];\n\n  function Spinner() {\n    if (!isLoading) {\n      return _jsx(Image, {\n        source: require(\"../assets/images/coinIcon2.gif\"),\n        style: {\n          marginTop: \"-50%\",\n          width: '15%',\n          height: '40%',\n          zIndex: 2,\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          top: \"55%\",\n          right: \"-38%\",\n          resizeMode: \"contain\"\n        }\n      });\n    }\n  }\n\n  return _jsxs(View, {\n    width: \"110%\",\n    backgroundColor: \"#fff\",\n    children: [Spinner(), _jsxs(Box, {\n      mx: \"auto\",\n      safeArea: true,\n      p: \"2\",\n      py: \"4\",\n      w: \"100%\",\n      maxW: \"340\",\n      children: [_jsx(Image, {\n        style: styles.title,\n        source: require(\"../assets/images/crewcoinlogo.png\")\n      }), _jsx(Heading, {\n        _dark: {\n          color: \"warmGray.200\"\n        },\n        color: \"coolGray.600\",\n        fontWeight: \"medium\",\n        size: \"xs\",\n        children: \"Sign in to continue!\"\n      }), _jsxs(VStack, {\n        space: 3,\n        mt: \"5\",\n        children: [_jsxs(FormControl, {\n          children: [_jsx(FormControl.Label, {\n            children: \"Email ID\"\n          }), _jsx(Input, {\n            onChangeText: function onChangeText(value) {\n              return setData(_objectSpread(_objectSpread({}, formData), {}, {\n                username: value.toLowerCase()\n              }));\n            }\n          })]\n        }), _jsxs(FormControl, {\n          children: [_jsx(FormControl.Label, {\n            children: \"Password\"\n          }), _jsx(Input, {\n            type: \"password\",\n            onChangeText: function onChangeText(value) {\n              return setData(_objectSpread(_objectSpread({}, formData), {}, {\n                password: value\n              }));\n            }\n          }), _jsx(Link, {\n            _text: {\n              fontSize: \"xs\",\n              fontWeight: \"500\",\n              color: \"indigo.500\"\n            },\n            alignSelf: \"flex-end\",\n            mt: \"1\",\n            children: \"Forget Password?\"\n          })]\n        }), _jsx(Button, {\n          mt: \"2\",\n          colorScheme: \"yellow\",\n          onPress: function onPress() {\n            handleSubmit(formData, navigation, setUser, setValue, setData, isLoading, setIsLoading);\n          },\n          children: \"Sign in\"\n        }), _jsxs(HStack, {\n          mt: \"6\",\n          justifyContent: \"center\",\n          children: [_jsxs(Text, {\n            fontSize: \"sm\",\n            color: \"coolGray.600\",\n            _dark: {\n              color: \"warmGray.200\"\n            },\n            children: [\"I'm a new user.\", \" \"]\n          }), _jsx(Link, {\n            _text: {\n              color: \"indigo.500\",\n              fontWeight: \"medium\",\n              fontSize: \"sm\"\n            },\n            onPress: function onPress() {\n              return navigation.navigate(\"Signup\");\n            },\n            children: \"Sign Up\"\n          })]\n        }), _jsxs(HStack, {\n          mb: \"6\",\n          justifyContent: \"center\",\n          children: [_jsxs(Text, {\n            fontSize: \"sm\",\n            color: \"coolGray.600\",\n            _dark: {\n              color: \"warmGray.200\"\n            },\n            children: [\"I'm an administrator.\", \" \"]\n          }), _jsx(Link, {\n            _text: {\n              color: \"indigo.500\",\n              fontWeight: \"medium\",\n              fontSize: \"sm\"\n            },\n            href: \"www.crew-coin.com\",\n            children: \"Setup New Organization\"\n          })]\n        })]\n      })]\n    })]\n  });\n}\n\nfunction handleSubmit(formData, navigation, setUser, setValue, setData, isLoading, setIsLoading) {\n  setIsLoading(true);\n  fetch(\"https://crewcoin.herokuapp.com/crewuser/login\", {\n    method: \"POST\",\n    headers: {\n      authorization: \"jwt\",\n      credentials: \"same-origin\",\n      Accept: \"application/json, text/html, */*\",\n      \"Content-Type\": \"application/json\",\n      mode: \"cors\"\n    },\n    body: JSON.stringify({\n      \"username\": formData.username,\n      \"password\": formData.password\n    })\n  }).then(function (res) {\n    return res.json();\n  }).then(function (res) {\n    if (res.success) {\n      setIsLoading(false);\n      setUser(res.user);\n      setValue(res.user);\n      navigation.navigate(\"Root\");\n    } else {\n      Alert.alert(\"Alert Title\", \"My Alert Msg\", [{\n        text: \"Cancel\",\n        onPress: function onPress() {\n          return console.log(\"Cancel Pressed\");\n        },\n        style: \"cancel\"\n      }, {\n        text: \"OK\",\n        onPress: function onPress() {\n          return console.log(\"OK Pressed\");\n        }\n      }]);\n    }\n  }).catch(function (err) {\n    console.log(err);\n    Alert.alert(\"Invalid Username or Password\", \"Please enter valid credentials\", [{\n      text: \"OK\",\n      onPress: function onPress() {\n        return console.log(\"OK Pressed\");\n      }\n    }]);\n    setIsLoading(false);\n  });\n  console.log(isLoading);\n}\n\nexport default function LoginScreen() {\n  return _jsx(_Fragment, {\n    children: _jsx(KeyboardAvoidingView, {\n      behavior: Platform.OS === \"ios\" ? \"padding\" : \"height\",\n      style: {\n        flex: 1\n      },\n      children: _jsx(NativeBaseProvider, {\n        children: _jsx(ScrollView, {\n          backgroundColor: \"#fff\",\n          children: _jsx(Center, {\n            flex: 1,\n            px: \"3\",\n            children: _jsx(Login, {})\n          })\n        })\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  title: {\n    width: 350,\n    resizeMode: 'contain',\n    marginLeft: -20\n  },\n  image: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: '100%'\n  }\n});","map":{"version":3,"sources":["C:/Users/DavidWIlliams/Desktop/crewCoin/screens/LoginScreen.js"],"names":["React","Box","Text","Heading","VStack","FormControl","Input","Link","Button","HStack","Center","View","NativeBaseProvider","useNavigation","Component","useContext","UserContext","Login","navigation","value","setValue","useState","formData","setData","user","setUser","isLoading","setIsLoading","Spinner","require","marginTop","width","height","zIndex","justifyContent","alignItems","top","right","resizeMode","styles","title","color","username","toLowerCase","password","fontSize","fontWeight","handleSubmit","navigate","fetch","method","headers","authorization","credentials","Accept","mode","body","JSON","stringify","then","res","json","success","Alert","alert","text","onPress","console","log","style","catch","err","LoginScreen","Platform","OS","flex","StyleSheet","create","marginLeft","image"],"mappings":"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","sourcesContent":["import * as React from \"react\"\r\nimport {\r\n    Box,\r\n    Text,\r\n    Heading,\r\n    VStack,\r\n    FormControl,\r\n    Input,\r\n    Link,\r\n    Button,\r\n    HStack,\r\n    Center,\r\n    View,\r\n    NativeBaseProvider,\r\n} from \"native-base\"\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\nimport { StyleSheet, Image, Alert, ScrollView, KeyboardAvoidingView, } from \"react-native\";\r\nimport { Component, useContext } from \"react\";\r\nimport { UserContext } from \"./UserContext\";\r\n\r\n\r\nexport function Login() {\r\n    const navigation = useNavigation();\r\n    const { value, setValue } = useContext(UserContext);\r\n    const [formData, setData] = React.useState({});\r\n    const [user, setUser] = React.useState({});\r\n    const [isLoading, setIsLoading] = React.useState(false);\r\n    function Spinner() {\r\n        if (!isLoading) {\r\n            return (\r\n                <Image source={require('../assets/images/coinIcon2.gif')}\r\n                    style={{ marginTop: \"-50%\", width: '15%', height: '40%', zIndex:2, justifyContent: \"center\", alignItems: \"center\", top: \"55%\", right: \"-38%\", resizeMode: \"contain\" }} />\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <View width=\"110%\" backgroundColor=\"#fff\">\r\n        {Spinner()}\r\n            <Box mx=\"auto\" safeArea p=\"2\" py=\"4\" w=\"100%\" maxW=\"340\" >\r\n                <Image style={styles.title} source={require('../assets/images/crewcoinlogo.png')} />\r\n                <Heading\r\n\r\n                    _dark={{\r\n                        color: \"warmGray.200\",\r\n                    }}\r\n                    color=\"coolGray.600\"\r\n                    fontWeight=\"medium\"\r\n                    size=\"xs\"\r\n                >\r\n                    Sign in to continue!\r\n                </Heading>\r\n\r\n                <VStack space={3} mt=\"5\">\r\n                    <FormControl>\r\n                        <FormControl.Label>Email ID</FormControl.Label>\r\n                        <Input onChangeText={(value) => setData({ ...formData, username: value.toLowerCase() })} />\r\n                    </FormControl>\r\n                    <FormControl>\r\n                        <FormControl.Label>Password</FormControl.Label>\r\n                        <Input type=\"password\" onChangeText={(value) => setData({ ...formData, password: value })} />\r\n                        <Link\r\n                            _text={{\r\n                                fontSize: \"xs\",\r\n                                fontWeight: \"500\",\r\n                                color: \"indigo.500\",\r\n                            }}\r\n                            alignSelf=\"flex-end\"\r\n                            mt=\"1\"\r\n                        >\r\n                            Forget Password?\r\n                        </Link>\r\n                    </FormControl>\r\n                    <Button mt=\"2\" colorScheme=\"yellow\"\r\n                        onPress={() => {\r\n\r\n                            (handleSubmit(formData, navigation, setUser, setValue, setData, isLoading, setIsLoading));\r\n\r\n\r\n                        }}\r\n                    >\r\n                        Sign in\r\n                    </Button>\r\n                    <HStack mt=\"6\" justifyContent=\"center\">\r\n                        <Text\r\n                            fontSize=\"sm\"\r\n                            color=\"coolGray.600\"\r\n                            _dark={{\r\n                                color: \"warmGray.200\",\r\n                            }}\r\n\r\n                        >\r\n                            I'm a new user.{\" \"}\r\n                        </Text>\r\n                        <Link\r\n                            _text={{\r\n                                color: \"indigo.500\",\r\n                                fontWeight: \"medium\",\r\n                                fontSize: \"sm\",\r\n                            }}\r\n                            onPress={() => navigation.navigate(\"Signup\")}\r\n                        >\r\n                            Sign Up\r\n                        </Link>\r\n                    </HStack>\r\n                    <HStack mb=\"6\" justifyContent=\"center\">\r\n                        <Text\r\n                            fontSize=\"sm\"\r\n                            color=\"coolGray.600\"\r\n                            _dark={{\r\n                                color: \"warmGray.200\",\r\n                            }}\r\n                        >\r\n                            I'm an administrator.{\" \"}\r\n                        </Text>\r\n                        <Link\r\n                            _text={{\r\n                                color: \"indigo.500\",\r\n                                fontWeight: \"medium\",\r\n                                fontSize: \"sm\",\r\n                            }}\r\n                            href=\"www.crew-coin.com\"\r\n                        >\r\n                            Setup New Organization\r\n                        </Link>\r\n                    </HStack>\r\n                </VStack>\r\n            </Box>\r\n        </View>\r\n    )\r\n}\r\n\r\n\r\n\r\nfunction handleSubmit(formData, navigation, setUser, setValue, setData, isLoading, setIsLoading) {\r\n    setIsLoading(true);\r\n    fetch(\"https://crewcoin.herokuapp.com/crewuser/login\", {\r\n        method: \"POST\",\r\n        headers: {\r\n            authorization: \"jwt\",\r\n            credentials: \"same-origin\",\r\n            Accept: \"application/json, text/html, */*\",\r\n            \"Content-Type\": \"application/json\",\r\n            mode: \"cors\"\r\n        },\r\n        body: JSON.stringify({\r\n            \"username\": formData.username,\r\n            \"password\": formData.password\r\n        }),\r\n    })\r\n\r\n        .then(res => res.json())\r\n        .then(res => {\r\n            if (res.success) {\r\n                setIsLoading(false);\r\n                setUser(res.user);\r\n                setValue(res.user);\r\n                navigation.navigate(\"Root\");\r\n            } else {\r\n                Alert.alert(\r\n                    \"Alert Title\",\r\n                    \"My Alert Msg\",\r\n                    [\r\n                        {\r\n                            text: \"Cancel\",\r\n                            onPress: () => console.log(\"Cancel Pressed\"),\r\n                            style: \"cancel\"\r\n                        },\r\n                        { text: \"OK\", onPress: () => console.log(\"OK Pressed\") }\r\n                    ]\r\n                );\r\n\r\n            }\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n            Alert.alert(\r\n                \"Invalid Username or Password\",\r\n                \"Please enter valid credentials\",\r\n                [\r\n\r\n                    { text: \"OK\", onPress: () => console.log(\"OK Pressed\") }\r\n                ]\r\n            )\r\n            setIsLoading(false);\r\n        }\r\n        );\r\n    console.log(isLoading);\r\n}\r\n\r\nexport default function LoginScreen() {\r\n    \r\n    return (\r\n        <>\r\n            <KeyboardAvoidingView\r\n                behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\r\n                style={{ flex: 1 }}\r\n                \r\n            >\r\n                <NativeBaseProvider>\r\n                    <ScrollView backgroundColor=\"#fff\" >\r\n                        <Center flex={1} px=\"3\">\r\n                            <Login />\r\n                        </Center>\r\n                    </ScrollView>\r\n                </NativeBaseProvider>\r\n            </KeyboardAvoidingView>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n\r\n    title: {\r\n        width: 350,\r\n        resizeMode: 'contain',\r\n        marginLeft: -20,\r\n\r\n\r\n    },\r\n    image: {\r\n        flex: 1,\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        width: '100%',\r\n    },\r\n});"]},"metadata":{},"sourceType":"module"}