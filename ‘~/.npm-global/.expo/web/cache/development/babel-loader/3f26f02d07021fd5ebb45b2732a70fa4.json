{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport { NativeBaseProvider, PresenceTransition, Image, Button, Input, Center, Text, Box, Heading, Header, Divider, Stack, HStack, VStack, AspectRatio } from 'native-base';\nimport { Ionicons } from '@expo/vector-icons';\nimport posts from \"./sample2\";\nimport { Component, useContext, useEffect, useState, useMemo, useCallback } from \"react\";\nimport { useIsFocused } from '@react-navigation/native';\nimport { UserContext } from \"./UserContext\";\nimport moment from \"moment\";\nimport * as ImagePicker from 'expo-image-picker';\nimport * as Permissions from 'expo-permissions';\nimport * as ImageManipulator from 'expo-image-manipulator';\nimport * as MediaLibrary from 'expo-media-library';\nimport { getStorage, ref, uploadBytes, getDownloadURL, deleteObject } from \"firebase/storage\";\nimport * as SecureStore from 'expo-secure-store';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport default function TabTwoScreen() {\n  var _useContext = useContext(UserContext),\n    value = _useContext.value,\n    setValue = _useContext.setValue;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    postData = _useState2[0],\n    setPost = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    postsData = _useState4[0],\n    setPosts = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isLoading = _useState6[0],\n    setIsLoading = _useState6[1];\n  var _useState7 = useState([]),\n    _useState8 = _slicedToArray(_useState7, 2),\n    userData = _useState8[0],\n    setUser = _useState8[1];\n  var _useState9 = useState(''),\n    _useState10 = _slicedToArray(_useState9, 2),\n    token2 = _useState10[0],\n    setToken = _useState10[1];\n  var _useState11 = useState(false),\n    _useState12 = _slicedToArray(_useState11, 2),\n    refreshing = _useState12[0],\n    setRefreshing = _useState12[1];\n  var wait = function wait(timeout) {\n    return new Promise(function (resolve) {\n      return setTimeout(resolve, timeout);\n    });\n  };\n  var onRefresh = useCallback(function () {\n    setRefreshing(true);\n    wait(100).then(function () {\n      return setRefreshing(false);\n    }, fetch(\"https://crewcoinserver.vercel.app/announcements/\" + value.portalId, {\n      method: \"GET\",\n      headers: {\n        authorization: \"jwt\",\n        credentials: \"same-origin\",\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        mode: \"cors\"\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (res) {\n      if (res.success) {\n        if (res.announcements === postsData) {\n          return null;\n        } else {\n          setPosts(res.announcements);\n        }\n      } else {\n        Alert.alert(\"Error\", \"Please check your internet connection\", [{\n          text: \"OK\",\n          onPress: function onPress() {\n            return console.log(\"OK Pressed\");\n          }\n        }]);\n      }\n    }).catch(function (err) {\n      console.log(err);\n    }));\n    if (value.newAnnouncement) {\n      fetch(\"https://crewcoinserver.vercel.app/crewuser/alert/\" + value._id, {\n        method: \"PUT\",\n        headers: {\n          authorization: \"bearer \" + token,\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          mode: \"cors\"\n        },\n        body: JSON.stringify({\n          \"newStoreItem\": value.newStoreItem,\n          \"newTransaction\": value.newTransaction,\n          \"newAnnouncement\": false\n        })\n      }).then(function (res) {\n        return res.json();\n      }).then(function (res) {\n        if (res.success) {\n          setValue(res.crewuser);\n        } else {\n          Alert.alert(\"\" + err, \"Please check internet connection!\", [{\n            text: \"OK\",\n            onPress: function onPress() {\n              return console.log(\"OK Pressed\");\n            }\n          }]);\n        }\n      }).catch(function (err) {\n        Alert.alert(\"Error\", \"Please login again\", [{\n          text: \"OK\",\n          onPress: function onPress() {\n            return console.log(\"OK Pressed\");\n          }\n        }]);\n        navigation.navigate(\"Login\");\n      });\n    }\n  });\n  function getValueFor(_x) {\n    return _getValueFor.apply(this, arguments);\n  }\n  function _getValueFor() {\n    _getValueFor = _asyncToGenerator(function* (key) {\n      var result = yield SecureStore.getItemAsync(key);\n      if (result) {\n        setToken(result);\n      } else {\n        console.log('No values stored under that key.');\n      }\n    });\n    return _getValueFor.apply(this, arguments);\n  }\n  getValueFor('token');\n  var triggerPushNotificationHandler = function triggerPushNotificationHandler(token, title, body) {\n    fetch(\"https://exp.host/--/api/v2/push/send\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Accept-Encoding\": \"gzip,deflate\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        to: token,\n        title: title,\n        body: body\n      })\n    });\n  };\n  useEffect(function () {\n    Permissions.getAsync(Permissions.NOTIFICATIONS).then(function (statusObj) {\n      if (statusObj.status !== \"granted\") {\n        return Permissions.askAsync(Permissions.NOTIFICATIONS);\n      }\n      return statusObj;\n    }).then(function (statusObj) {\n      if (statusObj.status !== \"granted\") {\n        throw new Error(\"Permission not granted\");\n      }\n    }).catch(function (err) {\n      return null;\n    });\n    fetch(\"https://crewcoinserver.vercel.app/crewuser/\" + value.portalId, {\n      method: \"GET\",\n      headers: {\n        authorization: \"jwt\",\n        credentials: \"same-origin\",\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        mode: \"cors\"\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (res) {\n      console.log('it ran');\n      if (res) {\n        if (res.length === userData.length) {\n          console.log(res.length);\n        } else {\n          setUser(res);\n          var self = res.filter(function (user) {\n            return user.username === value.username;\n          });\n          if (self[0] === !value) {\n            setValue(self[0]);\n          }\n        }\n      } else {\n        Alert.alert(\"Error\", \"Please check your internet connection\", [{\n          text: \"OK\",\n          onPress: function onPress() {\n            return console.log(\"OK Pressed\");\n          }\n        }]);\n      }\n    }).catch(function (err) {\n      console.log(err);\n    });\n    if (value.newAnnouncement) {\n      fetch(\"https://crewcoinserver.vercel.app/crewuser/alert/\" + value._id, {\n        method: \"PUT\",\n        headers: {\n          authorization: \"bearer \" + token2,\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          mode: \"cors\"\n        },\n        body: JSON.stringify({\n          \"newStoreItem\": value.newStoreItem,\n          \"newTransaction\": value.newTransaction,\n          \"newAnnouncement\": false\n        })\n      }).then(function (res) {\n        return res.json();\n      }).then(function (res) {\n        if (res.success) {\n          setValue(res.crewuser);\n        } else {\n          Alert.alert(\"\" + err, \"Please check internet connection!\", [{\n            text: \"OK\",\n            onPress: function onPress() {\n              return console.log(\"OK Pressed\");\n            }\n          }]);\n        }\n      }).catch(function (err) {\n        Alert.alert(\"Error\", \"Please login again\", [{\n          text: \"OK\",\n          onPress: function onPress() {\n            return console.log(\"OK Pressed\");\n          }\n        }]);\n        navigation.navigate(\"Login\");\n      });\n    }\n  }, []);\n  function Post() {\n    var _useState13 = useState([]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      postData = _useState14[0],\n      setPost = _useState14[1];\n    var imageUrl = postData.imageUrl;\n    var _useState15 = useState([]),\n      _useState16 = _slicedToArray(_useState15, 2),\n      textData = _useState16[0],\n      setText = _useState16[1];\n    var _useState17 = useState(false),\n      _useState18 = _slicedToArray(_useState17, 2),\n      isLoading = _useState18[0],\n      setIsLoading = _useState18[1];\n    console.log(\"post rendered\");\n    function Spinner() {\n      if (isLoading) {\n        return _jsx(Image, {\n          alt: \"spinner\",\n          source: require(\"../assets/images/genericspinner.gif\"),\n          style: {\n            width: \"30%\",\n            position: \"absolute\",\n            right: \"35%\",\n            zIndex: 9000000000,\n            top: \"10%\",\n            resizeMode: \"contain\"\n          }\n        });\n      } else {\n        return null;\n      }\n    }\n    function handlePost() {\n      var user = userData.filter(function (el) {\n        return el.username !== value.username && el.pushToken.length > 0;\n      });\n      var usersPushtoken = user.map(function (el) {\n        return el.pushToken;\n      });\n\n      if (!textData.title || !textData.announcement) {\n        Alert.alert(\"Please fill in all fields!\");\n      } else {\n        setIsLoading(true);\n        if (postData.imageUrl) {\n          var imageName = value.portalId + \"_post_\" + moment(new Date()).format(\"MMDDYYYYhmmssa\");\n          var storage = getStorage();\n          var uploadImage = function () {\n            var _ref = _asyncToGenerator(function* () {\n              var img = postData.imageUrl;\n              var response = yield fetch(postData.imageUrl);\n              var blob = yield response.blob();\n              uploadBytes(ref(storage, \"\" + imageName), blob);\n            });\n            return function uploadImage() {\n              return _ref.apply(this, arguments);\n            };\n          }();\n          uploadImage();\n          setTimeout(function () {\n            getDownloadURL(ref(storage, \"\" + imageName)).then(function (url) {\n              fetch(\"https://crewcoinserver.vercel.app/announcements\", {\n                method: \"POST\",\n                headers: {\n                  authorization: \"jwt\",\n                  credentials: \"same-origin\",\n                  Accept: \"application/json\",\n                  \"Content-Type\": \"application/json\",\n                  mode: \"cors\"\n                },\n                body: JSON.stringify({\n                  \"title\": textData.title,\n                  \"description\": textData.announcement,\n                  \"image\": url,\n                  \"portalId\": value.portalId\n                })\n              }).then(function (res) {\n                return res.json();\n              }).then(function (res) {\n                if (res.success) {\n                  triggerPushNotificationHandler(usersPushtoken, \"New Announcement: \" + textData.title, textData.announcement);\n                  setPosts(function (postsData) {\n                    return [].concat(_toConsumableArray(postsData), [res.announcements]);\n                  });\n                  setPost({\n                    imageUrl: \"\"\n                  });\n                  setText({\n                    title: \"\",\n                    announcement: \"\"\n                  });\n                } else {\n                  Alert.alert(\"Something went wrong\", \"Error\", [{\n                    text: \"OK\",\n                    onPress: function onPress() {\n                      return console.log(\"OK Pressed\");\n                    }\n                  }]);\n                }\n              }).catch(function (err) {\n                Alert.alert(\"Error\", \"Please check internet connection!\", [{\n                  text: \"OK\",\n                  onPress: function onPress() {\n                    return console.log(\"OK Pressed\");\n                  }\n                }]);\n              });\n            }).catch(function (error) {\n              console.log(error);\n              Alert.alert(\"Error\", \"Please check internet connection!\", [{\n                text: \"OK\",\n                onPress: function onPress() {\n                  return console.log(\"OK Pressed\");\n                }\n              }]);\n            });\n\n            setIsLoading(false);\n          }, 3000);\n        } else {\n          setTimeout(function () {\n            setIsLoading(true);\n            fetch(\"https://crewcoinserver.vercel.app/announcements\", {\n              method: \"POST\",\n              headers: {\n                authorization: \"jwt\",\n                credentials: \"same-origin\",\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\",\n                mode: \"cors\"\n              },\n              body: JSON.stringify({\n                \"title\": textData.title,\n                \"description\": textData.announcement,\n                \"portalId\": value.portalId\n              })\n            }).then(function (res) {\n              return res.json();\n            }).then(function (res) {\n              if (res.success) {\n                triggerPushNotificationHandler(usersPushtoken, \"New Announcement: \" + textData.title, textData.announcement);\n                setPosts(function (postsData) {\n                  return [].concat(_toConsumableArray(postsData), [res.announcements]);\n                });\n                setPost({\n                  imageUrl: \"\"\n                });\n                setText({\n                  title: \"\",\n                  announcement: \"\"\n                });\n              } else {\n                Alert.alert(\"Something went wrong\", \"Error\", [{\n                  text: \"OK\",\n                  onPress: function onPress() {\n                    return console.log(\"OK Pressed\");\n                  }\n                }]);\n              }\n            }).catch(function (err) {\n              Alert.alert(\"Error\", \"Please check internet connection!\", [{\n                text: \"OK\",\n                onPress: function onPress() {\n                  return console.log(\"OK Pressed\");\n                }\n              }]);\n            });\n            setIsLoading(false);\n          }, 1000);\n        }\n      }\n    }\n    var getImageFromCamera = function () {\n      var _ref2 = _asyncToGenerator(function* () {\n        var cameraPermission = yield Permissions.askAsync(Permissions.CAMERA);\n        var cameraRollPermission = yield Permissions.askAsync(Permissions.CAMERA_ROLL);\n        if (cameraPermission.status === 'granted' && cameraRollPermission.status === 'granted') {\n          var capturedImage = yield ImagePicker.launchCameraAsync({\n            allowsEditing: true,\n            aspect: [1, 1]\n          });\n          if (!capturedImage.cancelled) {\n            processImage(capturedImage.uri);\n            MediaLibrary.createAssetAsync(capturedImage.uri);\n          }\n        }\n      });\n      return function getImageFromCamera() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    var getImageFromGallery = function () {\n      var _ref3 = _asyncToGenerator(function* () {\n        var cameraPermission = yield Permissions.askAsync(Permissions.CAMERA);\n        var cameraRollPermission = yield Permissions.askAsync(Permissions.CAMERA_ROLL);\n        if (cameraPermission.status === 'granted' && cameraRollPermission.status === 'granted') {\n          var capturedImage = yield ImagePicker.launchImageLibraryAsync({\n            allowsEditing: true,\n            aspect: [1, 1]\n          });\n          if (!capturedImage.cancelled) {\n            processImage(capturedImage.uri);\n          }\n        }\n      });\n      return function getImageFromGallery() {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n    var processImage = function () {\n      var _ref4 = _asyncToGenerator(function* (imgUri) {\n        var processedImage = yield ImageManipulator.manipulateAsync(imgUri, [{\n          resize: {\n            width: 400\n          }\n        }], {\n          format: ImageManipulator.SaveFormat.PNG\n        });\n        setPost(_objectSpread(_objectSpread({}, postData), {}, {\n          imageUrl: processedImage.uri\n        }));\n      });\n      return function processImage(_x2) {\n        return _ref4.apply(this, arguments);\n      };\n    }();\n    function TempImage() {\n      if (imageUrl) {\n        return _jsxs(View, {\n          children: [_jsx(TouchableOpacity, {\n            style: {\n              zIndex: 999,\n              marginTop: 6,\n              marginBottom: -31\n            },\n            onPress: function onPress() {\n              setPost(_objectSpread(_objectSpread({}, postData), {}, {\n                imageUrl: \"\",\n                image: \"\"\n              }));\n            },\n            children: _jsx(Text, {\n              shadow: 9,\n              style: {\n                color: \"white\",\n                fontSize: 24,\n                marginLeft: 270,\n                zIndex: 999,\n                border: 1,\n                borderRadius: \"10%\"\n              },\n              children: _jsx(Ionicons, {\n                name: \"md-close-circle\",\n                size: 20,\n                color: \"white\"\n              })\n            })\n          }), _jsx(Image, {\n            alt: \"temp\",\n            shadow: 9,\n            style: {\n              width: 300,\n              height: 300,\n              borderRadius: 5\n            },\n            source: {\n              uri: imageUrl\n            },\n            resizeMode: \"contain\"\n          })]\n        })\n        ;\n      } else {\n        return null;\n      }\n    }\n    var memoizedTempImage = useMemo(TempImage);\n    if (value.admin) {\n      return _jsxs(_Fragment, {\n        children: [Spinner(), _jsx(PresenceTransition, {\n          visible: true,\n          initial: {\n            opacity: 0\n          },\n          animate: {\n            opacity: 1,\n            transition: {\n              duration: 2500\n            }\n          },\n          children: _jsx(Box, {\n            shadow: 2,\n            mt: \"2\",\n            mb: \"2\",\n            pt: \"2\",\n            style: styles.image2,\n            maxW: \"360\",\n            rounded: \"lg\",\n            overflow: \"hidden\",\n            borderColor: \"gray.300\",\n            borderWidth: \"1\",\n            _dark: {\n              borderColor: \"gray.900\",\n              backgroundColor: \"gray.900\"\n            },\n            _web: {\n              shadow: 2,\n              borderWidth: 0\n            },\n            _light: {\n              backgroundColor: \"gray.50\"\n            },\n            children: _jsxs(Stack, {\n              w: \"100%\",\n              px: \"5\",\n              py: \"3\",\n              space: 3,\n              children: [_jsxs(HStack, {\n                alignItems: \"center\",\n                children: [_jsx(Heading, {\n                  size: \"md\",\n                  ml: \"-1\",\n                  children: \"New Announcement\"\n                }), _jsx(TouchableOpacity, {\n                  onPress: function onPress() {\n                    getImageFromCamera();\n                  },\n                  children: _jsx(Image, {\n                    mt: \"4\",\n                    alt: \"camera1\",\n                    style: styles.image3,\n                    source: require(\"../assets/images/camera1.png\"),\n                    resizeMode: \"contain\"\n                  })\n                }), _jsx(TouchableOpacity, {\n                  onPress: function onPress() {\n                    getImageFromGallery();\n                  },\n                  children: _jsx(Image, {\n                    mt: \"4\",\n                    alt: \"camera2\",\n                    style: styles.image4,\n                    source: require(\"../assets/images/camera.png\"),\n                    resizeMode: \"contain\"\n                  })\n                })]\n              }), _jsx(Center, {\n                children: memoizedTempImage\n              }), _jsx(Input, {\n                value: textData.title,\n                onChangeText: function onChangeText(value) {\n                  return setText(_objectSpread(_objectSpread({}, textData), {}, {\n                    title: value\n                  }));\n                },\n                placeholder: \"Title\"\n              }), _jsx(Input, {\n                multiline: true,\n                value: textData.announcement,\n                onChangeText: function onChangeText(value) {\n                  return setText(_objectSpread(_objectSpread({}, textData), {}, {\n                    announcement: value\n                  }));\n                },\n                placeholder: \"Announcement\"\n              }), _jsx(Button, {\n                shadow: 3,\n                onPress: function onPress() {\n                  handlePost();\n                },\n                children: \" Post \"\n              })]\n            })\n          })\n        })]\n      });\n    } else {\n      return null;\n    }\n  }\n  var Posts = function Posts() {\n    var _useState19 = useState([]),\n      _useState20 = _slicedToArray(_useState19, 2),\n      postsData = _useState20[0],\n      setPosts = _useState20[1];\n    var _useState21 = useState([]),\n      _useState22 = _slicedToArray(_useState21, 2),\n      postData = _useState22[0],\n      setPost = _useState22[1];\n    var _useState23 = useState(false),\n      _useState24 = _slicedToArray(_useState23, 2),\n      refreshing = _useState24[0],\n      setRefreshing = _useState24[1];\n    console.log(\"posts rendered\");\n    useEffect(function () {\n      setIsLoading(true);\n      fetch(\"https://crewcoinserver.vercel.app/announcements/\" + value.portalId, {\n        method: \"GET\",\n        headers: {\n          authorization: \"jwt\",\n          credentials: \"same-origin\",\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          mode: \"cors\"\n        }\n      }).then(function (res) {\n        return res.json();\n      }).then(function (res) {\n        console.log('it ran');\n        if (res.success) {\n          if (res.announcements === postsData) {\n            return null;\n          } else {\n            setPosts(res.announcements);\n          }\n        } else {\n          Alert.alert(\"Something went wrong\", \"Error\", [{\n            text: \"OK\",\n            onPress: function onPress() {\n              return console.log(\"OK Pressed\");\n            }\n          }]);\n        }\n      }).catch(function (err) {\n        Alert.alert(\"Error\", \"Please check internet connection!\", [{\n          text: \"OK\",\n          onPress: function onPress() {\n            return console.log(\"OK Pressed\");\n          }\n        }]);\n      });\n      setIsLoading(false);\n    }, []);\n    var posts = postsData.sort(function (a, b) {\n      return new Date(b.createdAt) - new Date(a.createdAt);\n    });\n    function deleteButton(posts) {\n      if (value.admin) {\n        return _jsx(Button, {\n          shadow: 2,\n          colorScheme: \"rose\",\n          mb: \"1\",\n          onPress: function onPress() {\n            Alert.alert(\"Remove Post\", \"Are you sure you want to remove this post?\", [{\n              text: \"No\",\n              onPress: function onPress() {\n                return console.log(\"Cancel Pressed\");\n              },\n              style: \"cancel\"\n            }, {\n              text: \"Yes\",\n              onPress: function onPress() {\n                deletePost(posts);\n              }\n            }], {\n              cancelable: false\n            });\n          },\n          children: \"Delete Post\"\n        });\n      } else {\n        return null;\n      }\n    }\n    function deletePost(posts) {\n      var storage = getStorage();\n      var postRef = ref(storage, posts.image);\n      if (posts.image) {\n        deleteObject(postRef).then(function () {\n        }).catch(function (error) {\n        });\n\n        fetch(\"https://crewcoinserver.vercel.app/announcements/delete/\" + posts._id, {\n          method: \"DELETE\",\n          headers: {\n            authorization: \"jwt\",\n            credentials: \"same-origin\",\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            mode: \"cors\"\n          },\n          body: JSON.stringify({\n            \"post\": posts._id\n          })\n        }).then(function (res) {\n          return res.json();\n        }).then(function (res) {\n          if (res.success) {\n            setPosts(function (postsData) {\n              return postsData.filter(function (post) {\n                return post._id !== res.postId;\n              });\n            });\n            setValue(_objectSpread(_objectSpread({}, value), {}, {\n              posts: res.posts\n            }));\n            Alert.alert(\"Post\", \"Removed\", [{\n              text: \"OK\",\n              onPress: function onPress() {\n                return console.log(\"OK Pressed\");\n              }\n            }]);\n          } else {\n            Alert.alert(\"Something went wrong\", \"Error\", [{\n              text: \"OK\",\n              onPress: function onPress() {\n                return console.log(\"OK Pressed\");\n              }\n            }]);\n          }\n        }).catch(function (err) {\n          Alert.alert(\"Error\", \"Please check internet connection!\", [{\n            text: \"OK\",\n            onPress: function onPress() {\n              return console.log(\"OK Pressed\");\n            }\n          }]);\n        });\n      } else {\n        fetch(\"https://crewcoinserver.vercel.app/announcements/delete/\" + posts._id, {\n          method: \"DELETE\",\n          headers: {\n            authorization: \"jwt\",\n            credentials: \"same-origin\",\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            mode: \"cors\"\n          },\n          body: JSON.stringify({\n            \"post\": posts._id\n          })\n        }).then(function (res) {\n          return res.json();\n        }).then(function (res) {\n          if (res.success) {\n            setPosts(function (postsData) {\n              return postsData.filter(function (post) {\n                return post._id !== res.postId;\n              });\n            });\n            setValue(_objectSpread(_objectSpread({}, value), {}, {\n              posts: res.posts\n            }));\n            Alert.alert(\"Post\", \"Removed\", [{\n              text: \"OK\",\n              onPress: function onPress() {\n                return console.log(\"OK Pressed\");\n              }\n            }]);\n          } else {\n            Alert.alert(\"Something went wrong\", \"Error\", [{\n              text: \"OK\",\n              onPress: function onPress() {\n                return console.log(\"OK Pressed\");\n              }\n            }]);\n          }\n        }).catch(function (err) {\n          Alert.alert(\"Error\", \"Please check internet connection!\", [{\n            text: \"OK\",\n            onPress: function onPress() {\n              return console.log(\"OK Pressed\");\n            }\n          }]);\n        });\n      }\n    }\n    function showImage(item) {\n      if (item.image) {\n        return _jsx(Image, {\n          shadow: 9,\n          style: {\n            width: 300,\n            height: 300,\n            borderRadius: 5,\n            resizeMode: 'contain'\n          },\n          alt: \"image\",\n          source: {\n            uri: item.image\n          }\n        });\n      } else {\n        return null;\n      }\n    }\n    return _jsx(_Fragment, {\n      children: _jsx(FlatList, {\n        refreshing: refreshing,\n        onRefresh: onRefresh,\n        data: postsData,\n        renderItem: function renderItem(_ref5) {\n          var item = _ref5.item,\n            index = _ref5.index;\n          return _jsx(PresenceTransition, {\n            visible: true,\n            initial: {\n              opacity: 0\n            },\n            animate: {\n              opacity: 1,\n              transition: {\n                duration: 2050\n              }\n            },\n            children: _jsxs(Box, {\n              pt: \"5\",\n              shadow: 2,\n              style: styles.image2,\n              mb: \"2\",\n              maxW: \"360\",\n              rounded: \"lg\",\n              overflow: \"hidden\",\n              borderColor: \"gray.300\",\n              borderWidth: \"1\",\n              _dark: {\n                borderColor: \"gray.900\",\n                backgroundColor: \"gray.900\"\n              },\n              _web: {\n                shadow: 2,\n                borderWidth: 0\n              },\n              _light: {\n                backgroundColor: \"gray.50\"\n              },\n              children: [_jsx(Box, {\n                pt: \"0\",\n                children: showImage(item)\n              }), _jsxs(Stack, {\n                w: \"330\",\n                p: \"1\",\n                space: 3,\n                children: [_jsx(Stack, {\n                  children: _jsx(Center, {\n                    children: _jsx(Heading, {\n                      size: \"lg\",\n                      children: item.title\n                    })\n                  })\n                }), _jsx(Divider, {}), _jsx(Text, {\n                  fontWeight: \"400\",\n                  fontSize: 17,\n                  children: item.description\n                }), _jsx(Divider, {}), _jsxs(HStack, {\n                  alignItems: \"center\",\n                  space: 2,\n                  justifyContent: \"space-between\",\n                  children: [_jsxs(HStack, {\n                    alignItems: \"center\",\n                    children: [_jsx(Image, {\n                      style: styles.coin2,\n                      alt: \"icon\",\n                      source: require(\"../assets/images/icon3.gif\")\n                    }), _jsx(Text, {\n                      color: \"yellow.600\",\n                      _dark: {\n                        color: \"warmGray.200\"\n                      },\n                      fontWeight: \"400\",\n                      bold: \"true\",\n                      children: moment(item.updatedAt).format(\"MM/DD/YYYY h:mma\")\n                    })]\n                  }), deleteButton(item)]\n                })]\n              })]\n            })\n          });\n        },\n        ListHeaderComponent: function ListHeaderComponent() {\n          return Post();\n        },\n        keyExtractor: function keyExtractor(item) {\n          return item._id;\n        }\n      })\n    });\n  };\n  return _jsx(KeyboardAvoidingView, {\n    style: {\n      flex: 1\n    },\n    behavior: \"height\",\n    enabled: true,\n    children: _jsxs(NativeBaseProvider, {\n      children: [_jsx(AppBar, {}), _jsx(ImageBackground, {\n        imageStyle: {\n          opacity: 0.7\n        },\n        style: styles.image,\n        source: require(\"../assets/images/splashbg2.png\"),\n        resizeMode: \"cover\",\n        children: _jsx(View, {\n          children: _jsx(PresenceTransition, {\n            visible: true,\n            initial: {\n              opacity: 0\n            },\n            animate: {\n              opacity: 1,\n              transition: {\n                duration: 1050\n              }\n            },\n            children: _jsx(Posts, {})\n          })\n        })\n      })]\n    })\n  });\n}\nfunction AppBar() {\n  var _useContext2 = useContext(UserContext),\n    value = _useContext2.value,\n    setValue = _useContext2.setValue;\n  return _jsxs(_Fragment, {\n    children: [_jsx(Box, {\n      safeAreaTop: true,\n      backgroundColor: \"#f2f2f2\"\n    }), _jsxs(HStack, {\n      bg: \"amber.300\",\n      px: \"5\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      borderColor: \"gray.300\",\n      borderWidth: \"1\",\n      children: [_jsx(HStack, {\n        space: \"4\",\n        alignItems: \"center\",\n        children: _jsx(Image, {\n          alt: \"logo\",\n          style: styles.coin,\n          source: require(\"../assets/images/crewcoinlogo.png\")\n        })\n      }), _jsx(HStack, {\n        space: \"4\",\n        children: _jsx(Text, {\n          px: \"1\",\n          style: styles.icon,\n          children: value.firstname + \" \" + value.lastname\n        })\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  icon: {\n    color: 'black',\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  balance: {\n    fontSize: 25,\n    width: '100%'\n  },\n  coin: {\n    width: 200,\n    resizeMode: 'contain',\n    height: 50,\n    marginLeft: -21\n  },\n  coin2: {\n    width: 300,\n    resizeMode: 'contain',\n    height: 50,\n    marginLeft: \"-45%\",\n    marginRight: \"-36%\",\n    marginTop: \"-1%\"\n  },\n  coingif: {\n    size: '100%'\n  },\n  coingif: {\n    width: 10\n  },\n  image: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: '100%',\n    resizeMode: 'contain'\n  },\n  image2: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: 450,\n    resizeMode: 'cover'\n  },\n  image3: {\n    width: 45,\n    resizeMode: 'contain',\n    marginBottom: -85,\n    marginTop: -90,\n    marginLeft: 35\n  },\n  image4: {\n    width: 51,\n    resizeMode: 'contain',\n    marginBottom: -85,\n    marginTop: -90,\n    marginLeft: 10\n  },\n  title: {\n    width: 400,\n    resizeMode: 'cover',\n    marginTop: -100,\n    marginBottom: -100,\n    margin: -100\n  },\n  header: {\n    marginTop: '15%',\n    marginLeft: '18%',\n    justifyContent: 'flex-start',\n    alignItems: 'flex-start',\n    backgroundColor: '#fff'\n  },\n  center: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  }\n});","map":{"version":3,"names":["NativeBaseProvider","PresenceTransition","Image","Button","Input","Center","Text","Box","Heading","Header","Divider","Stack","HStack","VStack","AspectRatio","Ionicons","posts","Component","useContext","useEffect","useState","useMemo","useCallback","useIsFocused","UserContext","moment","ImagePicker","Permissions","ImageManipulator","MediaLibrary","getStorage","ref","uploadBytes","getDownloadURL","deleteObject","SecureStore","TabTwoScreen","value","setValue","postData","setPost","postsData","setPosts","isLoading","setIsLoading","userData","setUser","token2","setToken","refreshing","setRefreshing","wait","timeout","Promise","resolve","setTimeout","onRefresh","then","fetch","portalId","method","headers","authorization","credentials","Accept","mode","res","json","success","announcements","Alert","alert","text","onPress","console","log","catch","err","newAnnouncement","_id","token","body","JSON","stringify","newStoreItem","newTransaction","crewuser","navigation","navigate","getValueFor","key","result","getItemAsync","triggerPushNotificationHandler","title","to","getAsync","NOTIFICATIONS","statusObj","status","askAsync","Error","length","self","filter","user","username","Post","imageUrl","textData","setText","Spinner","require","width","position","right","zIndex","top","resizeMode","handlePost","el","pushToken","usersPushtoken","map","announcement","imageName","Date","format","storage","uploadImage","img","response","blob","url","error","getImageFromCamera","cameraPermission","CAMERA","cameraRollPermission","CAMERA_ROLL","capturedImage","launchCameraAsync","allowsEditing","aspect","cancelled","processImage","uri","createAssetAsync","getImageFromGallery","launchImageLibraryAsync","imgUri","processedImage","manipulateAsync","resize","SaveFormat","PNG","TempImage","marginTop","marginBottom","image","color","fontSize","marginLeft","border","borderRadius","height","memoizedTempImage","admin","opacity","transition","duration","styles","image2","borderColor","backgroundColor","shadow","borderWidth","image3","image4","Posts","sort","a","b","createdAt","deleteButton","style","deletePost","cancelable","postRef","post","postId","showImage","item","index","description","coin2","updatedAt","flex","AppBar","coin","icon","firstname","lastname","StyleSheet","create","container","alignItems","justifyContent","fontWeight","balance","marginRight","coingif","size","margin","header","center"],"sources":["C:/Users/DavidWIlliams/Desktop/crewCoin/screens/TabTwoScreen.js"],"sourcesContent":["import { StyleSheet, View, ImageBackground, TouchableOpacity, Alert, KeyboardAvoidingView, FlatList, RefreshControl } from \"react-native\";\nimport { NativeBaseProvider, PresenceTransition, Image, Button, Input, Center, Text, Box, Heading, Header, Divider, Stack, HStack, VStack, AspectRatio } from 'native-base';\nimport { Ionicons } from '@expo/vector-icons';\nimport posts from './sample2';\nimport { Component, useContext, useEffect, useState, useMemo, useCallback } from \"react\";\nimport { useIsFocused } from '@react-navigation/native';\nimport { UserContext } from \"./UserContext\";\nimport moment from \"moment\";\nimport * as ImagePicker from 'expo-image-picker';\nimport * as Permissions from 'expo-permissions';\nimport * as ImageManipulator from 'expo-image-manipulator';\nimport * as MediaLibrary from 'expo-media-library';\nimport { getStorage, ref, uploadBytes, getDownloadURL, deleteObject } from \"firebase/storage\";\nimport * as SecureStore from 'expo-secure-store';\n\n\n\n\nexport default function TabTwoScreen() {\n  const { value, setValue } = useContext(UserContext);\n  const [postData, setPost] = useState([]);\n  const [postsData, setPosts] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [userData, setUser] = useState([]);\n  const [token2, setToken] = useState('');\n  const [refreshing, setRefreshing] = useState(false);\n\n  const wait = (timeout) => {\n    return new Promise(resolve => setTimeout(resolve, timeout));\n  }\n\n\n  const onRefresh = useCallback(() => {\n    setRefreshing(true);\n    wait(100).then(() => setRefreshing(false),\n\n      fetch(`https://crewcoinserver.vercel.app/announcements/${value.portalId}`, {\n        method: \"GET\",\n        headers: {\n          authorization: \"jwt\",\n          credentials: \"same-origin\",\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          mode: \"cors\"\n        },\n      })\n\n        .then(res => res.json())\n        .then(res => {\n          if (res.success) {\n            if (res.announcements === postsData) {\n              return null;\n            } else {\n              setPosts(res.announcements);\n            }\n          } else {\n            Alert.alert(\n              \"Error\",\n              \"Please check your internet connection\",\n              [\n\n                { text: \"OK\", onPress: () => console.log(\"OK Pressed\") }\n              ]\n            )\n          }\n        })\n        .catch(err => {\n          console.log(err);\n        }\n        )\n\n    )\n    if (value.newAnnouncement) {\n      fetch(`https://crewcoinserver.vercel.app/crewuser/alert/${value._id}`, {\n        method: \"PUT\",\n        headers: {\n          //bearer token\n          authorization: `bearer ${token}`,\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          mode: \"cors\"\n        },\n        body: JSON.stringify({\n          \"newStoreItem\": value.newStoreItem,\n          \"newTransaction\": value.newTransaction,\n          \"newAnnouncement\": false,\n        }),\n      })\n\n        .then(res => res.json())\n        .then(res => {\n          if (res.success) {\n            setValue(res.crewuser);\n          } else {\n            Alert.alert(\n              `${err}`,\n              \"Please check internet connection!\",\n              [\n\n                { text: \"OK\", onPress: () => console.log(\"OK Pressed\") }\n              ]\n            )\n          }\n        })\n        .catch(err => {\n          Alert.alert(\n            \"Error\",\n            \"Please login again\",\n            [\n              { text: \"OK\", onPress: () => console.log(\"OK Pressed\") }\n            ]\n          )\n          navigation.navigate(\"Login\");\n        });\n    }\n  })\n\n  async function getValueFor(key) {\n    let result = await SecureStore.getItemAsync(key);\n    if (result) {\n      setToken(result);\n    } else {\n      console.log('No values stored under that key.');\n    }\n  }\n  getValueFor('token');\n\n\n  const triggerPushNotificationHandler = (token, title, body) => {\n    fetch(\"https://exp.host/--/api/v2/push/send\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Accept-Encoding\": \"gzip,deflate\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        to: token,\n        title,\n        body,\n      }),\n    })\n  }\n\n  useEffect(() => {\n\n    // Permission for iOS\n    Permissions.getAsync(Permissions.NOTIFICATIONS)\n      .then(statusObj => {\n        // Check if we already have permission\n        if (statusObj.status !== \"granted\") {\n          // If permission is not there, ask for the same\n          return Permissions.askAsync(Permissions.NOTIFICATIONS)\n        }\n        return statusObj\n      })\n      .then(statusObj => {\n        // If permission is still not given throw error\n        if (statusObj.status !== \"granted\") {\n          throw new Error(\"Permission not granted\")\n        }\n      })\n      .catch(err => {\n        return null\n      })\n\n    fetch(`https://crewcoinserver.vercel.app/crewuser/${value.portalId}`, {\n      method: \"GET\",\n      headers: {\n        authorization: \"jwt\",\n        credentials: \"same-origin\",\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        mode: \"cors\"\n      },\n    })\n      .then(res => res.json())\n      .then(res => {\n        console.log('it ran')\n        if (res) {\n          if (res.length === userData.length) {\n            console.log(res.length);\n          }\n          else {\n            setUser(res);\n            let self = res.filter(user => user.username === value.username);\n            if (self[0] === !value) {\n              setValue(self[0]);\n            }\n          }\n        } else {\n          Alert.alert(\n            \"Error\",\n            \"Please check your internet connection\",\n            [\n\n              { text: \"OK\", onPress: () => console.log(\"OK Pressed\") }\n            ]\n          )\n        }\n      })\n      .catch(err => {\n        console.log(err);\n      }\n      );\n    if (value.newAnnouncement) {\n      fetch(`https://crewcoinserver.vercel.app/crewuser/alert/${value._id}`, {\n        method: \"PUT\",\n        headers: {\n          //bearer token\n          authorization: `bearer ${token2}`,\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          mode: \"cors\"\n        },\n        body: JSON.stringify({\n          \"newStoreItem\": value.newStoreItem,\n          \"newTransaction\": value.newTransaction,\n          \"newAnnouncement\": false,\n        }),\n      })\n\n        .then(res => res.json())\n        .then(res => {\n          if (res.success) {\n            setValue(res.crewuser);\n          } else {\n            Alert.alert(\n              `${err}`,\n              \"Please check internet connection!\",\n              [\n\n                { text: \"OK\", onPress: () => console.log(\"OK Pressed\") }\n              ]\n            )\n          }\n        })\n        .catch(err => {\n          Alert.alert(\n            \"Error\",\n            \"Please login again\",\n            [\n              { text: \"OK\", onPress: () => console.log(\"OK Pressed\") }\n            ]\n          )\n          navigation.navigate(\"Login\");\n        });\n    }\n  }, []);\n\n  function Post() {\n    const [postData, setPost] = useState([]);\n    const imageUrl = postData.imageUrl;\n    const [textData, setText] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n    console.log(\"post rendered\")\n\n    function Spinner() {\n      if (isLoading) {\n        return (\n          <Image alt=\"spinner\" source={require('../assets/images/genericspinner.gif')}\n            style={{ width: \"30%\", position: \"absolute\", right: \"35%\", zIndex: 9000000000, top: \"10%\", resizeMode: \"contain\" }} />\n        )\n      } else {\n        return null;\n      }\n    }\n\n    function handlePost() {\n      let user = userData.filter(el => el.username !== value.username && el.pushToken.length > 0);\n      let usersPushtoken = user.map(el => el.pushToken);  // get all pushtoken  of users  \n\n      if (!textData.title || !textData.announcement) {\n        Alert.alert(\"Please fill in all fields!\");\n      } else {\n        setIsLoading(true);\n        if (postData.imageUrl) {\n          const imageName = `${value.portalId}_post_${moment(new Date).format(\"MMDDYYYYhmmssa\")}`\n          const storage = getStorage();\n          const uploadImage = async () => {\n            const img = postData.imageUrl;\n            const response = await fetch(postData.imageUrl);\n            const blob = await response.blob();\n            uploadBytes(ref(storage, `${imageName}`), blob);\n          }\n          uploadImage();\n          setTimeout(() => {\n            getDownloadURL(ref(storage, `${imageName}`))\n              .then((url) => {\n                fetch(`https://crewcoinserver.vercel.app/announcements`, {\n                  method: \"POST\",\n                  headers: {\n                    authorization: \"jwt\",\n                    credentials: \"same-origin\",\n                    Accept: \"application/json\",\n                    \"Content-Type\": \"application/json\",\n                    mode: \"cors\"\n                  },\n                  body: JSON.stringify({\n                    \"title\": textData.title,\n                    \"description\": textData.announcement,\n                    \"image\": url,\n                    \"portalId\": value.portalId,\n                  }),\n                })\n\n                  .then(res => res.json())\n                  .then(res => {\n                    if (res.success) {\n                      triggerPushNotificationHandler(usersPushtoken, `New Announcement: ${textData.title}`, textData.announcement);\n                      setPosts(postsData => [...postsData, res.announcements])\n                      setPost({ imageUrl: \"\" });\n                      setText({ title: \"\", announcement: \"\" });\n                    } else {\n                      Alert.alert(\n                        \"Something went wrong\",\n                        `Error`,\n                        [\n                          { text: \"OK\", onPress: () => console.log(\"OK Pressed\") }\n                        ]\n                      );\n                    }\n                  })\n                  .catch(err => {\n                    Alert.alert(\n                      `Error`,\n                      \"Please check internet connection!\",\n                      [\n\n                        { text: \"OK\", onPress: () => console.log(\"OK Pressed\") }\n                      ]\n                    )\n                  }\n                  );\n              })\n              .catch((error) => {\n                console.log(error);\n                Alert.alert(\n                  `Error`,\n                  \"Please check internet connection!\",\n                  [\n\n                    { text: \"OK\", onPress: () => console.log(\"OK Pressed\") }\n                  ]\n                )\n                // Handle any errors\n              })\n            setIsLoading(false);\n          }, 3000);\n        } else {\n          setTimeout(() => {\n            setIsLoading(true);\n            fetch(`https://crewcoinserver.vercel.app/announcements`, {\n              method: \"POST\",\n              headers: {\n                authorization: \"jwt\",\n                credentials: \"same-origin\",\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\",\n                mode: \"cors\"\n              },\n              body: JSON.stringify({\n                \"title\": textData.title,\n                \"description\": textData.announcement,\n                \"portalId\": value.portalId,\n              }),\n            })\n              .then(res => res.json())\n              .then(res => {\n                if (res.success) {\n                  triggerPushNotificationHandler(usersPushtoken, `New Announcement: ${textData.title}`, textData.announcement);\n                  setPosts(postsData => [...postsData, res.announcements])\n                  setPost({ imageUrl: \"\" });\n                  setText({ title: \"\", announcement: \"\" });\n                } else {\n                  Alert.alert(\n                    \"Something went wrong\",\n                    `Error`,\n                    [\n                      { text: \"OK\", onPress: () => console.log(\"OK Pressed\") }\n                    ]\n                  );\n                }\n              })\n              .catch(err => {\n                Alert.alert(\n                  `Error`,\n                  \"Please check internet connection!\",\n                  [\n\n                    { text: \"OK\", onPress: () => console.log(\"OK Pressed\") }\n                  ]\n                )\n              });\n            setIsLoading(false);\n          }, 1000);\n        }\n      }\n\n    }\n\n    let getImageFromCamera = async () => {\n      const cameraPermission = await Permissions.askAsync(Permissions.CAMERA);\n      const cameraRollPermission = await Permissions.askAsync(Permissions.CAMERA_ROLL);\n\n      if (cameraPermission.status === 'granted' && cameraRollPermission.status === 'granted') {\n        const capturedImage = await ImagePicker.launchCameraAsync({\n          allowsEditing: true,\n          aspect: [1, 1]\n        });\n        if (!capturedImage.cancelled) {\n          processImage(capturedImage.uri);\n          MediaLibrary.createAssetAsync(capturedImage.uri);\n        }\n      }\n    }\n    let getImageFromGallery = async () => {\n      const cameraPermission = await Permissions.askAsync(Permissions.CAMERA);\n      const cameraRollPermission = await Permissions.askAsync(Permissions.CAMERA_ROLL);\n\n      if (cameraPermission.status === 'granted' && cameraRollPermission.status === 'granted') {\n        const capturedImage = await ImagePicker.launchImageLibraryAsync({\n          allowsEditing: true,\n          aspect: [1, 1]\n        });\n        if (!capturedImage.cancelled) {\n          processImage(capturedImage.uri);\n        }\n      }\n    }\n    let processImage = async (imgUri) => {\n      const processedImage = await ImageManipulator.manipulateAsync(imgUri,\n        [{ resize: { width: 400 } }],\n        { format: ImageManipulator.SaveFormat.PNG }\n      );\n      setPost({ ...postData, imageUrl: processedImage.uri })\n    }\n    function TempImage() {\n      if (imageUrl) {\n        return (\n          <View>\n            <TouchableOpacity style={{ zIndex: 999, marginTop: 6, marginBottom: -31, }}\n              onPress={() => { setPost({ ...postData, imageUrl: \"\", image: \"\" }) }}\n            >\n              <Text shadow={9} style={{ color: \"white\", fontSize: 24, marginLeft: 270, zIndex: 999, border: 1, borderRadius: \"10%\" }}>\n                <Ionicons name=\"md-close-circle\" size={20} color=\"white\" />\n              </Text>\n            </TouchableOpacity>\n            <Image alt=\"temp\" shadow={9} style={{ width: 300, height: 300, borderRadius: 5 }}\n              source={{ uri: imageUrl }} resizeMode=\"contain\" />\n          </View>\n          // <Image alt=\"temp\" shadow={9} style={{ width: 300, height: 300, borderRadius: 5, }}\n          //   source={{ uri: imageUrl }} resizeMode=\"contain\" />\n        )\n      } else {\n        return null;\n      }\n    }\n    const memoizedTempImage = useMemo(TempImage);\n\n    if (value.admin) {\n      return (\n        <>\n                          {Spinner()}\n          <PresenceTransition visible initial={{\n            opacity: 0\n          }} animate={{\n            opacity: 1,\n            transition: {\n              duration: 2500\n            }\n          }}>\n            <Box\n              shadow={2}\n              mt=\"2\"\n              mb=\"2\"\n              pt=\"2\"\n              style={styles.image2}\n              maxW=\"360\"\n              rounded=\"lg\"\n              overflow=\"hidden\"\n              borderColor=\"gray.300\"\n              borderWidth=\"1\"\n              _dark={{\n                borderColor: \"gray.900\",\n                backgroundColor: \"gray.900\",\n              }}\n              _web={{\n                shadow: 2,\n                borderWidth: 0,\n              }}\n              _light={{\n                backgroundColor: \"gray.50\",\n              }}\n            >\n              <Stack w=\"100%\" px=\"5\" py=\"3\" space={3}>\n                <HStack alignItems=\"center\">\n                  <Heading size=\"md\" ml=\"-1\" >\n                    New Announcement\n                  </Heading>\n                  <TouchableOpacity onPress={() => { getImageFromCamera() }}>\n                    <Image mt=\"4\" alt=\"camera1\" style={styles.image3} source={require('../assets/images/camera1.png')} resizeMode=\"contain\" />\n                  </TouchableOpacity>\n                  <TouchableOpacity onPress={() => { getImageFromGallery() }}>\n                    <Image mt=\"4\" alt=\"camera2\" style={styles.image4} source={require('../assets/images/camera.png')} resizeMode=\"contain\" />\n                  </TouchableOpacity>\n                </HStack>\n                <Center>\n                  {memoizedTempImage}\n                </Center>\n                <Input value={textData.title} onChangeText={(value) => setText({ ...textData, title: value })} placeholder=\"Title\" />\n                <Input multiline={true} value={textData.announcement} onChangeText={(value) => setText({ ...textData, announcement: value })} placeholder=\"Announcement\" />\n                <Button shadow={3} onPress={() => { handlePost() }}> Post </Button>\n              </Stack>\n            </Box>\n          </PresenceTransition>\n        </>\n\n      )\n    } else {\n      return null\n    }\n  }\n\n  const Posts = () => {\n    const [postsData, setPosts] = useState([]);\n    const [postData, setPost] = useState([]);\n    const [refreshing, setRefreshing] = useState(false);\n    console.log(\"posts rendered\")\n\n    useEffect(() => {\n      setIsLoading(true);\n      fetch(`https://crewcoinserver.vercel.app/announcements/${value.portalId}`, {\n        method: \"GET\",\n        headers: {\n          authorization: \"jwt\",\n          credentials: \"same-origin\",\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          mode: \"cors\"\n        },\n      })\n\n        .then(res => res.json())\n        .then(res => {\n          console.log('it ran')\n          if (res.success) {\n            if (res.announcements === postsData) {\n              return null;\n            } else {\n              setPosts(res.announcements);\n            }\n          } else {\n            Alert.alert(\n              \"Something went wrong\",\n              `Error`,\n              [\n                { text: \"OK\", onPress: () => console.log(\"OK Pressed\") }\n              ]\n            );\n          }\n        })\n        .catch(err => {\n          Alert.alert(\n            `Error`,\n            \"Please check internet connection!\",\n            [\n              { text: \"OK\", onPress: () => console.log(\"OK Pressed\") }\n            ]\n          )\n        }\n        );\n      setIsLoading(false);\n\n    }, []);\n    let posts = postsData.sort(function (a, b) {\n      // Turn your strings into dates, and then subtract them\n      // to get a value that is either negative, positive, or zero.\n      return new Date(b.createdAt) - new Date(a.createdAt);\n    });\n\n    function deleteButton(posts) {\n      if (value.admin) {\n        return (\n          <Button shadow={2} colorScheme=\"rose\" mb=\"1\" onPress={() => {\n            Alert.alert(\n              \"Remove Post\",\n              \"Are you sure you want to remove this post?\",\n              [\n                {\n                  text: \"No\",\n                  onPress: () => console.log(\"Cancel Pressed\"),\n                  style: \"cancel\"\n                },\n                {\n                  text: \"Yes\", onPress: () => {\n                    deletePost(posts)\n                  }\n                }\n              ],\n              { cancelable: false }\n            );\n          }}>Delete Post</Button>\n        )\n      } else {\n        return null;\n      }\n    }\n\n    function deletePost(posts) {\n\n      const storage = getStorage();\n      var postRef = ref(storage, posts.image);\n      // Delete the file\n      if (posts.image) {\n        deleteObject(postRef).then(() => {\n          // File deleted successfully\n        }).catch((error) => {\n          // Uh-oh, an error occurred!\n        });\n\n        fetch(`https://crewcoinserver.vercel.app/announcements/delete/${posts._id}`, {\n          method: \"DELETE\",\n          headers: {\n            authorization: \"jwt\",\n            credentials: \"same-origin\",\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            mode: \"cors\"\n          },\n          body: JSON.stringify({\n            \"post\": posts._id\n          }),\n        })\n\n          .then(res => res.json())\n          .then(res => {\n            if (res.success) {\n              setPosts(postsData => postsData.filter(post => post._id !== res.postId))\n              setValue({ ...value, posts: res.posts })\n              Alert.alert(\n                \"Post\",\n                `Removed`,\n                [\n                  { text: \"OK\", onPress: () => console.log(\"OK Pressed\") }\n                ]\n              );\n            } else {\n              Alert.alert(\n                \"Something went wrong\",\n                `Error`,\n                [\n                  { text: \"OK\", onPress: () => console.log(\"OK Pressed\") }\n                ]\n              );\n            }\n          })\n          .catch(err => {\n            Alert.alert(\n              `Error`,\n              \"Please check internet connection!\",\n              [\n                { text: \"OK\", onPress: () => console.log(\"OK Pressed\") }\n              ]\n            )\n          }\n          );\n      } else {\n        fetch(`https://crewcoinserver.vercel.app/announcements/delete/${posts._id}`, {\n          method: \"DELETE\",\n          headers: {\n            authorization: \"jwt\",\n            credentials: \"same-origin\",\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            mode: \"cors\"\n          },\n          body: JSON.stringify({\n            \"post\": posts._id\n          }),\n        })\n\n          .then(res => res.json())\n          .then(res => {\n            if (res.success) {\n              setPosts(postsData => postsData.filter(post => post._id !== res.postId))\n              setValue({ ...value, posts: res.posts })\n              Alert.alert(\n                \"Post\",\n                `Removed`,\n                [\n                  { text: \"OK\", onPress: () => console.log(\"OK Pressed\") }\n                ]\n              );\n            } else {\n              Alert.alert(\n                \"Something went wrong\",\n                `Error`,\n                [\n                  { text: \"OK\", onPress: () => console.log(\"OK Pressed\") }\n                ]\n              );\n            }\n          })\n          .catch(err => {\n            Alert.alert(\n              `Error`,\n              \"Please check internet connection!\",\n              [\n                { text: \"OK\", onPress: () => console.log(\"OK Pressed\") }\n              ]\n            )\n          }\n          );\n      }\n    }\n    function showImage(item) {\n      if (item.image) {\n        return (\n          <Image\n            shadow={9}\n            style={{ width: 300, height: 300, borderRadius: 5, resizeMode: 'contain' }}\n            alt=\"image\"\n            source={{ uri: item.image }}\n          />\n        )\n      } else {\n        return null;\n      }\n    }\n    return (\n      <>\n        <FlatList\n\n          refreshing={refreshing}\n          onRefresh={onRefresh}\n\n          data={postsData}\n          renderItem={({ item, index }) =>\n            <PresenceTransition visible initial={{\n              opacity: 0\n            }} animate={{\n              opacity: 1,\n              transition: {\n                duration: 2050\n              }\n            }}>\n              <Box\n                pt=\"5\"\n                shadow={2}\n                style={styles.image2}\n                mb=\"2\"\n                maxW=\"360\"\n                rounded=\"lg\"\n                overflow=\"hidden\"\n                borderColor=\"gray.300\"\n                borderWidth=\"1\"\n                _dark={{\n                  borderColor: \"gray.900\",\n                  backgroundColor: \"gray.900\",\n                }}\n                _web={{\n                  shadow: 2,\n                  borderWidth: 0,\n                }}\n                _light={{\n                  backgroundColor: \"gray.50\",\n                }}\n              >\n                <Box pt=\"0\">\n                  {showImage(item)}\n                </Box>\n                <Stack w=\"330\" p=\"1\" space={3}>\n                  <Stack>\n                    <Center>\n                      <Heading size=\"lg\">\n                        {item.title}\n                      </Heading>\n                    </Center>\n                  </Stack>\n                  <Divider />\n                  <Text fontWeight=\"400\" fontSize={17}>\n                    {item.description}\n                  </Text>\n                  <Divider />\n                  <HStack alignItems=\"center\" space={2} justifyContent=\"space-between\">\n                    <HStack alignItems=\"center\">\n\n                      <Image style={styles.coin2} alt=\"icon\" source={require('../assets/images/icon3.gif')} />\n                      <Text\n                        color=\"yellow.600\"\n                        _dark={{\n                          color: \"warmGray.200\",\n                        }}\n                        fontWeight=\"400\"\n                        bold=\"true\"\n                      >\n                        {moment(item.updatedAt).format(\"MM/DD/YYYY h:mma\")}\n                      </Text>\n                    </HStack>\n                    {deleteButton(item)}\n                  </HStack>\n                </Stack>\n              </Box>\n            </PresenceTransition>\n          }\n          ListHeaderComponent={() => Post()}\n          keyExtractor={item => item._id}\n        />\n      </>\n    )\n\n  }\n\n\n  return (\n    <KeyboardAvoidingView style={{ flex: 1 }} behavior=\"height\" enabled>\n      <NativeBaseProvider>\n        <AppBar />\n        <ImageBackground imageStyle=\n          {{ opacity: 0.7 }} style={styles.image} source={require('../assets/images/splashbg2.png')} resizeMode=\"cover\" >\n          <View>\n            <PresenceTransition visible initial={{\n              opacity: 0\n            }} animate={{\n              opacity: 1,\n              transition: {\n                duration: 1050\n              }\n            }}>\n              <Posts />\n            </PresenceTransition>\n          </View>\n        </ImageBackground>\n      </NativeBaseProvider>\n    </KeyboardAvoidingView>\n  );\n\n}\n\nfunction AppBar() {\n  const { value, setValue } = useContext(UserContext);\n  return (\n    <>\n      <Box safeAreaTop backgroundColor=\"#f2f2f2\" />\n\n      <HStack bg='amber.300' px=\"5\" justifyContent='space-between' alignItems='center' borderColor=\"gray.300\"\n        borderWidth=\"1\">\n        <HStack space=\"4\" alignItems='center'>\n          <Image alt=\"logo\" style={styles.coin} source={require('../assets/images/crewcoinlogo.png')} />\n        </HStack>\n        <HStack space=\"4\">\n          <Text px=\"1\" style={styles.icon}>\n            {value.firstname + \" \" + value.lastname}\n          </Text>\n        </HStack>\n      </HStack>\n\n    </>\n  )\n}\n\n\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  icon: {\n    color: 'black',\n    fontSize: 16,\n    fontWeight: 'bold',\n\n\n  },\n  balance: {\n    fontSize: 25,\n    width: '100%',\n  },\n  coin: {\n    width: 200,\n    resizeMode: 'contain',\n    height: 50,\n    marginLeft: -21,\n  },\n  coin2: {\n    width: 300,\n    resizeMode: 'contain',\n    height: 50,\n    marginLeft: \"-45%\",\n    marginRight: \"-36%\",\n    marginTop: \"-1%\",\n  },\n  coingif: {\n    size: '100%',\n  },\n  coingif: {\n    width: 10,\n  },\n  image: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: '100%',\n    resizeMode: 'contain',\n  },\n  image2: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: 450,\n    resizeMode: 'cover',\n  },\n  image3: {\n    width: 45,\n    resizeMode: 'contain',\n    marginBottom: -85,\n    marginTop: -90,\n    marginLeft: 35,\n  },\n  image4: {\n    width: 51,\n    resizeMode: 'contain',\n    marginBottom: -85,\n    marginTop: -90,\n    marginLeft: 10,\n  },\n  title: {\n    width: 400,\n    resizeMode: 'cover',\n    marginTop: -100,\n    marginBottom: -100,\n    margin: -100,\n  },\n  header: {\n    marginTop: '15%',\n    marginLeft: '18%',\n    justifyContent: 'flex-start',\n    alignItems: 'flex-start',\n    backgroundColor: '#fff',\n  },\n  center: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}