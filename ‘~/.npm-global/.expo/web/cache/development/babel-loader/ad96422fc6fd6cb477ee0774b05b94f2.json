{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport { NativeBaseProvider, Image, Button, Input, Center, Text, Box, Heading, Header, Divider, Stack, HStack, VStack, AspectRatio } from 'native-base';\nimport { Ionicons } from '@expo/vector-icons';\nimport { ScrollView } from \"react-native-gesture-handler\";\nimport posts from \"./sample2\";\nimport { Component, useContext, useEffect, useMemo } from \"react\";\nimport { useState } from \"react\";\nimport { useIsFocused } from '@react-navigation/native';\nimport { UserContext } from \"./UserContext\";\nimport moment from \"moment\";\nimport * as ImagePicker from 'expo-image-picker';\nimport * as Permissions from 'expo-permissions';\nimport * as ImageManipulator from 'expo-image-manipulator';\nimport * as MediaLibrary from 'expo-media-library';\nimport firebaseConfig from \"../firebaseConfig.tsx\";\nimport { initializeApp } from \"firebase/app\";\nimport { getStorage, ref, uploadBytes, getDownloadURL, deleteObject } from \"firebase/storage\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport default function TabTwoScreen() {\n  var _useContext = useContext(UserContext),\n      value = _useContext.value,\n      setValue = _useContext.setValue;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      postsData = _useState2[0],\n      setPosts = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoading = _useState4[0],\n      setIsLoading = _useState4[1];\n\n  var isFocused = useIsFocused();\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      userData = _useState6[0],\n      setUser = _useState6[1];\n\n  var triggerPushNotificationHandler = function triggerPushNotificationHandler(token, title, body) {\n    fetch(\"https://exp.host/--/api/v2/push/send\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Accept-Encoding\": \"gzip,deflate\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        to: token,\n        title: title,\n        body: body\n      })\n    });\n  };\n\n  useEffect(function () {\n    Permissions.getAsync(Permissions.NOTIFICATIONS).then(function (statusObj) {\n      if (statusObj.status !== \"granted\") {\n        return Permissions.askAsync(Permissions.NOTIFICATIONS);\n      }\n\n      return statusObj;\n    }).then(function (statusObj) {\n      if (statusObj.status !== \"granted\") {\n        throw new Error(\"Permission not granted\");\n      }\n    }).catch(function (err) {\n      return null;\n    });\n\n    if (isFocused) {\n      fetch(\"https://crewcoin.herokuapp.com/crewuser/\" + value.portalId, {\n        method: \"GET\",\n        headers: {\n          authorization: \"jwt\",\n          credentials: \"same-origin\",\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          mode: \"cors\"\n        }\n      }).then(function (res) {\n        return res.json();\n      }).then(function (res) {\n        if (res) {\n          setUser(res);\n          console.log(userData);\n          var self = res.filter(function (user) {\n            return user.username === value.username;\n          });\n          setValue(self[0]);\n        } else {\n          Alert.alert(\"Error\", \"Please check your internet connection\", [{\n            text: \"OK\",\n            onPress: function onPress() {\n              return console.log(\"OK Pressed\");\n            }\n          }]);\n        }\n      }).catch(function (err) {\n        console.log(err);\n      });\n    }\n  }, []);\n\n  function Spinner() {\n    if (isLoading) {\n      return _jsx(Image, {\n        alt: \"spinner\",\n        source: require(\"../assets/images/ballspinner.gif\"),\n        style: {\n          marginTop: \"-34%\",\n          width: '20%',\n          height: '20%',\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          zIndex: 20000000,\n          top: \"70%\",\n          resizeMode: \"contain\"\n        }\n      });\n    } else {\n      return null;\n    }\n  }\n\n  function Post() {\n    var _useState7 = useState({}),\n        _useState8 = _slicedToArray(_useState7, 2),\n        postData = _useState8[0],\n        setPost = _useState8[1];\n\n    var imageUrl = postData.imageUrl;\n\n    var _useContext2 = useContext(UserContext),\n        value = _useContext2.value,\n        setValue = _useContext2.setValue;\n\n    function handlePost() {\n      var removeAdmin = userData.filter(function (el) {\n        return el.admin === false;\n      });\n      var user = removeAdmin.filter(function (el) {\n        return el.username !== value.username && el.pushToken.length > 0;\n      });\n      var usersPushtoken = user.map(function (el) {\n        return el.pushToken;\n      });\n      console.log(usersPushtoken);\n\n      if (!postData.title || !postData.announcement) {\n        Alert.alert(\"Please fill in all fields!\");\n      } else {\n        setIsLoading(true);\n        var imageName = value.portalId + \"_post_\" + moment(new Date()).format(\"MMDDYYYYhmma\");\n        var storage = getStorage();\n\n        var uploadImage = function uploadImage() {\n          var img, response, blob;\n          return _regeneratorRuntime.async(function uploadImage$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  img = postData.imageUrl;\n                  _context.next = 3;\n                  return _regeneratorRuntime.awrap(fetch(postData.imageUrl));\n\n                case 3:\n                  response = _context.sent;\n                  _context.next = 6;\n                  return _regeneratorRuntime.awrap(response.blob());\n\n                case 6:\n                  blob = _context.sent;\n                  uploadBytes(ref(storage, \"\" + imageName), blob);\n\n                case 8:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, null, null, null, Promise);\n        };\n\n        if (postData.imageUrl) {\n          uploadImage();\n          setTimeout(function () {\n            getDownloadURL(ref(storage, \"\" + imageName)).then(function (url) {\n              console.log(url);\n              fetch(\"https://crewcoin.herokuapp.com/announcements\", {\n                method: \"POST\",\n                headers: {\n                  authorization: \"jwt\",\n                  credentials: \"same-origin\",\n                  Accept: \"application/json\",\n                  \"Content-Type\": \"application/json\",\n                  mode: \"cors\"\n                },\n                body: JSON.stringify({\n                  \"title\": postData.title,\n                  \"description\": postData.announcement,\n                  \"image\": url,\n                  \"portalId\": value.portalId\n                })\n              }).then(function (res) {\n                return res.json();\n              }).then(function (res) {\n                if (res.success) {\n                  triggerPushNotificationHandler(usersPushtoken, \"New Announcement: \" + postData.title, postData.announcement);\n                  setPosts(function (postsData) {\n                    return [].concat(_toConsumableArray(postsData), [res.announcements]);\n                  });\n                  setPost({\n                    title: \"\",\n                    announcement: \"\",\n                    imageUrl: \"\"\n                  });\n                } else {\n                  Alert.alert(\"Something went wrong\", \"Error\", [{\n                    text: \"OK\",\n                    onPress: function onPress() {\n                      return console.log(\"OK Pressed\");\n                    }\n                  }]);\n                }\n              }).catch(function (err) {\n                Alert.alert(\"Error\", \"Please check internet connection!\", [{\n                  text: \"OK\",\n                  onPress: function onPress() {\n                    return console.log(\"OK Pressed\");\n                  }\n                }]);\n              });\n            }).catch(function (error) {\n              console.log(error);\n              Alert.alert(\"Error\", \"Please check internet connection!\", [{\n                text: \"OK\",\n                onPress: function onPress() {\n                  return console.log(\"OK Pressed\");\n                }\n              }]);\n            });\n            setIsLoading(false);\n          }, 3000);\n        } else {\n          fetch(\"https://crewcoin.herokuapp.com/announcements\", {\n            method: \"POST\",\n            headers: {\n              authorization: \"jwt\",\n              credentials: \"same-origin\",\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\",\n              mode: \"cors\"\n            },\n            body: JSON.stringify({\n              \"title\": postData.title,\n              \"description\": postData.announcement,\n              \"portalId\": value.portalId\n            })\n          }).then(function (res) {\n            return res.json();\n          }).then(function (res) {\n            if (res.success) {\n              setPosts(function (postsData) {\n                return [].concat(_toConsumableArray(postsData), [res.announcements]);\n              });\n              setPost({\n                title: \"\",\n                announcement: \"\",\n                imageUrl: \"\"\n              });\n            } else {\n              Alert.alert(\"Something went wrong\", \"Error\", [{\n                text: \"OK\",\n                onPress: function onPress() {\n                  return console.log(\"OK Pressed\");\n                }\n              }]);\n            }\n          }).catch(function (err) {\n            Alert.alert(\"Error\", \"Please check internet connection!\", [{\n              text: \"OK\",\n              onPress: function onPress() {\n                return console.log(\"OK Pressed\");\n              }\n            }]);\n          });\n          setIsLoading(false);\n        }\n      }\n    }\n\n    var getImageFromCamera = function getImageFromCamera() {\n      var cameraPermission, cameraRollPermission, capturedImage;\n      return _regeneratorRuntime.async(function getImageFromCamera$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA));\n\n            case 2:\n              cameraPermission = _context2.sent;\n              _context2.next = 5;\n              return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA_ROLL));\n\n            case 5:\n              cameraRollPermission = _context2.sent;\n\n              if (!(cameraPermission.status === 'granted' && cameraRollPermission.status === 'granted')) {\n                _context2.next = 11;\n                break;\n              }\n\n              _context2.next = 9;\n              return _regeneratorRuntime.awrap(ImagePicker.launchCameraAsync({\n                allowsEditing: true,\n                aspect: [1, 1]\n              }));\n\n            case 9:\n              capturedImage = _context2.sent;\n\n              if (!capturedImage.cancelled) {\n                console.log(capturedImage);\n                processImage(capturedImage.uri);\n                MediaLibrary.createAssetAsync(capturedImage.uri);\n              }\n\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    var getImageFromGallery = function getImageFromGallery() {\n      var cameraPermission, cameraRollPermission, capturedImage;\n      return _regeneratorRuntime.async(function getImageFromGallery$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA));\n\n            case 2:\n              cameraPermission = _context3.sent;\n              _context3.next = 5;\n              return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA_ROLL));\n\n            case 5:\n              cameraRollPermission = _context3.sent;\n\n              if (!(cameraPermission.status === 'granted' && cameraRollPermission.status === 'granted')) {\n                _context3.next = 11;\n                break;\n              }\n\n              _context3.next = 9;\n              return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n                allowsEditing: true,\n                aspect: [1, 1]\n              }));\n\n            case 9:\n              capturedImage = _context3.sent;\n\n              if (!capturedImage.cancelled) {\n                processImage(capturedImage.uri);\n              }\n\n            case 11:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    var processImage = function processImage(imgUri) {\n      var processedImage;\n      return _regeneratorRuntime.async(function processImage$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return _regeneratorRuntime.awrap(ImageManipulator.manipulateAsync(imgUri, [{\n                resize: {\n                  width: 400\n                }\n              }], {\n                format: ImageManipulator.SaveFormat.PNG\n              }));\n\n            case 2:\n              processedImage = _context4.sent;\n              setPost(_objectSpread(_objectSpread({}, postData), {}, {\n                imageUrl: processedImage.uri\n              }));\n              console.log(\"processedImage\", processedImage);\n\n            case 5:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    if (value.admin) {\n      function TempImage() {\n        if (imageUrl) {\n          return _jsx(Image, {\n            alt: \"temp\",\n            shadow: 9,\n            style: {\n              width: 300,\n              height: 300,\n              borderRadius: 5\n            },\n            source: {\n              uri: imageUrl\n            },\n            resizeMode: \"contain\"\n          });\n        } else {\n          return null;\n        }\n      }\n\n      return _jsx(_Fragment, {\n        children: _jsx(Box, {\n          shadow: 2,\n          mt: \"2\",\n          mb: \"2\",\n          pt: \"2\",\n          style: styles.image2,\n          maxW: \"360\",\n          rounded: \"lg\",\n          overflow: \"hidden\",\n          borderColor: \"gray.100\",\n          borderWidth: \"1\",\n          _dark: {\n            borderColor: \"gray.900\",\n            backgroundColor: \"gray.900\"\n          },\n          _web: {\n            shadow: 2,\n            borderWidth: 0\n          },\n          _light: {\n            backgroundColor: \"gray.50\"\n          },\n          children: _jsxs(Stack, {\n            w: \"100%\",\n            p: \"4\",\n            space: 3,\n            children: [_jsxs(HStack, {\n              alignItems: \"center\",\n              children: [_jsx(Heading, {\n                size: \"md\",\n                ml: \"-1\",\n                children: \"New Announcement\"\n              }), _jsx(TouchableOpacity, {\n                onPress: function onPress() {\n                  getImageFromCamera();\n                },\n                children: _jsx(Image, {\n                  mt: \"4\",\n                  alt: \"camera1\",\n                  style: styles.image3,\n                  source: require(\"../assets/images/camera1.png\"),\n                  resizeMode: \"contain\"\n                })\n              }), _jsx(TouchableOpacity, {\n                onPress: function onPress() {\n                  getImageFromGallery();\n                },\n                children: _jsx(Image, {\n                  mt: \"4\",\n                  alt: \"camera2\",\n                  style: styles.image4,\n                  source: require(\"../assets/images/camera.png\"),\n                  resizeMode: \"contain\"\n                })\n              })]\n            }), _jsx(Center, {\n              children: _jsx(TempImage, {})\n            }), _jsx(Input, {\n              value: postData.title,\n              onChangeText: function onChangeText(value) {\n                return setPost(_objectSpread(_objectSpread({}, postData), {}, {\n                  title: value\n                }));\n              },\n              placeholder: \"Title\"\n            }), _jsx(Input, {\n              value: postData.announcement,\n              onChangeText: function onChangeText(value) {\n                return setPost(_objectSpread(_objectSpread({}, postData), {}, {\n                  announcement: value\n                }));\n              },\n              placeholder: \"Announcement\"\n            }), _jsx(Button, {\n              onPress: function onPress() {\n                handlePost(setPosts);\n              },\n              children: \" Post \"\n            })]\n          })\n        })\n      });\n    } else {\n      return null;\n    }\n  }\n\n  var Posts = function Posts() {\n    var _useState9 = useState([]),\n        _useState10 = _slicedToArray(_useState9, 2),\n        postsData = _useState10[0],\n        setPosts = _useState10[1];\n\n    useEffect(function () {\n      fetch(\"https://crewcoin.herokuapp.com/announcements\", {\n        method: \"GET\",\n        headers: {\n          authorization: \"jwt\",\n          credentials: \"same-origin\",\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          mode: \"cors\"\n        }\n      }).then(function (res) {\n        return res.json();\n      }).then(function (res) {\n        if (res.success) {\n          setPosts(res.announcements);\n          console.log(\"another fetch\");\n        } else {\n          Alert.alert(\"Something went wrong\", \"Error\", [{\n            text: \"OK\",\n            onPress: function onPress() {\n              return console.log(\"OK Pressed\");\n            }\n          }]);\n        }\n      }).catch(function (err) {\n        Alert.alert(\"Error\", \"Please check internet connection!\", [{\n          text: \"OK\",\n          onPress: function onPress() {\n            return console.log(\"OK Pressed\");\n          }\n        }]);\n      });\n    }, []);\n    var posts = postsData.sort(function (a, b) {\n      return new Date(b.createdAt) - new Date(a.createdAt);\n    });\n\n    function deleteButton(posts) {\n      if (value.admin) {\n        return _jsx(Button, {\n          colorScheme: \"rose\",\n          mb: \"1\",\n          onPress: function onPress() {\n            Alert.alert(\"Remove Post\", \"Are you sure you want to remove this post?\", [{\n              text: \"No\",\n              onPress: function onPress() {\n                return console.log(\"Cancel Pressed\");\n              },\n              style: \"cancel\"\n            }, {\n              text: \"Yes\",\n              onPress: function onPress() {\n                deletePost(posts);\n              }\n            }], {\n              cancelable: false\n            });\n          },\n          children: \"Delete Post\"\n        });\n      } else {\n        return null;\n      }\n    }\n\n    function deletePost(posts) {\n      var storage = getStorage();\n      var postRef = ref(storage, posts.image);\n      console.log(posts.image);\n\n      if (posts.image) {\n        deleteObject(postRef).then(function () {}).catch(function (error) {});\n        fetch(\"https://crewcoin.herokuapp.com/announcements/delete/\" + posts._id, {\n          method: \"DELETE\",\n          headers: {\n            authorization: \"jwt\",\n            credentials: \"same-origin\",\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            mode: \"cors\"\n          },\n          body: JSON.stringify({\n            \"post\": posts._id\n          })\n        }).then(function (res) {\n          return res.json();\n        }).then(function (res) {\n          if (res.success) {\n            setPosts(function (postsData) {\n              return postsData.filter(function (post) {\n                return post._id !== res.postId;\n              });\n            });\n            setValue(_objectSpread(_objectSpread({}, value), {}, {\n              posts: res.posts\n            }));\n            Alert.alert(\"Post\", \"Removed\", [{\n              text: \"OK\",\n              onPress: function onPress() {\n                return console.log(\"OK Pressed\");\n              }\n            }]);\n            console.log(res.prizes);\n          } else {\n            Alert.alert(\"Something went wrong\", \"Error\", [{\n              text: \"OK\",\n              onPress: function onPress() {\n                return console.log(\"OK Pressed\");\n              }\n            }]);\n          }\n        }).catch(function (err) {\n          Alert.alert(\"Error\", \"Please check internet connection!\", [{\n            text: \"OK\",\n            onPress: function onPress() {\n              return console.log(\"OK Pressed\");\n            }\n          }]);\n        });\n      } else {\n        fetch(\"https://crewcoin.herokuapp.com/announcements/delete/\" + posts._id, {\n          method: \"DELETE\",\n          headers: {\n            authorization: \"jwt\",\n            credentials: \"same-origin\",\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            mode: \"cors\"\n          },\n          body: JSON.stringify({\n            \"post\": posts._id\n          })\n        }).then(function (res) {\n          return res.json();\n        }).then(function (res) {\n          if (res.success) {\n            setPosts(function (postsData) {\n              return postsData.filter(function (post) {\n                return post._id !== res.postId;\n              });\n            });\n            setValue(_objectSpread(_objectSpread({}, value), {}, {\n              posts: res.posts\n            }));\n            Alert.alert(\"Post\", \"Removed\", [{\n              text: \"OK\",\n              onPress: function onPress() {\n                return console.log(\"OK Pressed\");\n              }\n            }]);\n            console.log(res.prizes);\n          } else {\n            Alert.alert(\"Something went wrong\", \"Error\", [{\n              text: \"OK\",\n              onPress: function onPress() {\n                return console.log(\"OK Pressed\");\n              }\n            }]);\n          }\n        }).catch(function (err) {\n          Alert.alert(\"Error\", \"Please check internet connection!\", [{\n            text: \"OK\",\n            onPress: function onPress() {\n              return console.log(\"OK Pressed\");\n            }\n          }]);\n        });\n      }\n    }\n\n    return posts.map(function (posts) {\n      function postImage(posts) {\n        if (posts.image) {\n          return _jsx(Image, {\n            shadow: 9,\n            style: {\n              width: 300,\n              height: 220,\n              borderRadius: 5,\n              resizeMode: 'contain'\n            },\n            alt: posts.createdAt,\n            source: {\n              uri: posts.image\n            }\n          });\n        } else {\n          return null;\n        }\n      }\n\n      return _jsxs(Box, {\n        shadow: 2,\n        mt: \"2\",\n        mb: \"2\",\n        style: styles.image2,\n        maxW: \"360\",\n        rounded: \"lg\",\n        overflow: \"hidden\",\n        borderColor: \"gray.300\",\n        borderWidth: \"1\",\n        _dark: {\n          borderColor: \"gray.900\",\n          backgroundColor: \"gray.900\"\n        },\n        _web: {\n          shadow: 2,\n          borderWidth: 0\n        },\n        _light: {\n          backgroundColor: \"gray.50\"\n        },\n        children: [_jsx(Box, {\n          pt: \"4\",\n          children: postImage(posts)\n        }), _jsxs(Stack, {\n          w: \"330\",\n          p: \"4\",\n          space: 3,\n          children: [_jsx(Stack, {\n            children: _jsx(Center, {\n              children: _jsx(Heading, {\n                size: \"md\",\n                ml: \"-1\",\n                children: posts.title\n              })\n            })\n          }), _jsx(Divider, {}), _jsx(Text, {\n            fontWeight: \"400\",\n            fontSize: 18,\n            children: posts.description\n          }), _jsx(Divider, {}), _jsxs(HStack, {\n            alignItems: \"center\",\n            space: 2,\n            justifyContent: \"space-between\",\n            children: [_jsxs(HStack, {\n              alignItems: \"center\",\n              children: [_jsx(Image, {\n                style: styles.coin2,\n                alt: \"icon\",\n                source: require(\"../assets/images/icon3.gif\")\n              }), _jsx(Text, {\n                color: \"yellow.600\",\n                _dark: {\n                  color: \"warmGray.200\"\n                },\n                fontWeight: \"400\",\n                bold: \"true\",\n                children: moment(posts.createdAt).format(\"MM/DD/YYYY h:mma\")\n              })]\n            }), deleteButton(posts)]\n          })]\n        })]\n      });\n    });\n  };\n\n  return _jsx(KeyboardAvoidingView, {\n    style: {\n      flex: 1\n    },\n    behavior: \"height\",\n    enabled: true,\n    children: _jsxs(NativeBaseProvider, {\n      children: [_jsx(AppBar, {}), _jsxs(ImageBackground, {\n        imageStyle: {\n          opacity: 0.5\n        },\n        alt: \"bg\",\n        style: styles.image,\n        source: require(\"../assets/images/splashbg2.png\"),\n        resizeMode: \"cover\",\n        children: [Spinner(), _jsxs(ScrollView, {\n          children: [_jsx(Divider, {}), _jsx(Post, {}), _jsx(Posts, {})]\n        })]\n      })]\n    })\n  });\n}\n\nfunction AppBar() {\n  var _useContext3 = useContext(UserContext),\n      value = _useContext3.value,\n      setValue = _useContext3.setValue;\n\n  return _jsxs(_Fragment, {\n    children: [_jsx(Box, {\n      safeAreaTop: true,\n      backgroundColor: \"#f2f2f2\"\n    }), _jsxs(HStack, {\n      borderColor: \"gray.300\",\n      borderWidth: \"1\",\n      bg: \"amber.300\",\n      px: \"1\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      children: [_jsx(HStack, {\n        space: \"4\",\n        alignItems: \"center\",\n        children: _jsx(Image, {\n          alt: \"crewIco\",\n          style: styles.coin,\n          source: require(\"../assets/images/crewcoinlogo.png\")\n        })\n      }), _jsx(HStack, {\n        space: \"4\",\n        children: _jsx(Text, {\n          px: \"1\",\n          style: styles.icon,\n          children: value.firstname + \" \" + value.lastname\n        })\n      })]\n    })]\n  });\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  icon: {\n    color: 'black',\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  balance: {\n    fontSize: 25,\n    width: '100%'\n  },\n  coin: {\n    width: 200,\n    resizeMode: 'contain',\n    height: 50\n  },\n  coin2: {\n    width: 300,\n    resizeMode: 'contain',\n    height: 50,\n    marginLeft: \"-45%\",\n    marginRight: \"-36%\",\n    marginTop: \"-1%\"\n  },\n  coingif: {\n    size: '100%'\n  },\n  coingif: {\n    width: 10\n  },\n  image: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: '100%',\n    height: '100%',\n    resizeMode: 'cover'\n  },\n  image2: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: 450,\n    resizeMode: 'cover'\n  },\n  image3: {\n    width: 45,\n    resizeMode: 'contain',\n    marginBottom: -85,\n    marginTop: -90,\n    marginLeft: 35\n  },\n  image4: {\n    width: 51,\n    resizeMode: 'contain',\n    marginBottom: -85,\n    marginTop: -90,\n    marginLeft: 10\n  },\n  title: {\n    width: 400,\n    resizeMode: 'cover',\n    marginTop: -100,\n    marginBottom: -100,\n    margin: -100\n  },\n  header: {\n    marginTop: '15%',\n    marginLeft: '18%',\n    justifyContent: 'flex-start',\n    alignItems: 'flex-start',\n    backgroundColor: '#fff'\n  },\n  center: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  }\n});","map":{"version":3,"sources":["C:/Users/DavidWIlliams/Desktop/crewCoin/screens/TabTwoScreen.js"],"names":["NativeBaseProvider","Image","Button","Input","Center","Text","Box","Heading","Header","Divider","Stack","HStack","VStack","AspectRatio","Ionicons","ScrollView","posts","Component","useContext","useEffect","useMemo","useState","useIsFocused","UserContext","moment","ImagePicker","Permissions","ImageManipulator","MediaLibrary","firebaseConfig","initializeApp","getStorage","ref","uploadBytes","getDownloadURL","deleteObject","TabTwoScreen","value","setValue","postsData","setPosts","isLoading","setIsLoading","isFocused","userData","setUser","triggerPushNotificationHandler","token","title","body","fetch","method","headers","Accept","JSON","stringify","to","getAsync","NOTIFICATIONS","then","statusObj","status","askAsync","Error","catch","err","portalId","authorization","credentials","mode","res","json","console","log","self","filter","user","username","Alert","alert","text","onPress","Spinner","require","marginTop","width","height","justifyContent","alignItems","zIndex","top","resizeMode","Post","postData","setPost","imageUrl","handlePost","removeAdmin","el","admin","pushToken","length","usersPushtoken","map","announcement","imageName","Date","format","storage","uploadImage","img","response","blob","setTimeout","url","success","announcements","error","getImageFromCamera","CAMERA","cameraPermission","CAMERA_ROLL","cameraRollPermission","launchCameraAsync","allowsEditing","aspect","capturedImage","cancelled","processImage","uri","createAssetAsync","getImageFromGallery","launchImageLibraryAsync","imgUri","manipulateAsync","resize","SaveFormat","PNG","processedImage","TempImage","borderRadius","styles","image2","borderColor","backgroundColor","shadow","borderWidth","image3","image4","Posts","sort","a","b","createdAt","deleteButton","style","deletePost","cancelable","postRef","image","_id","post","postId","prizes","postImage","description","coin2","color","flex","opacity","AppBar","coin","icon","firstname","lastname","StyleSheet","create","container","fontSize","fontWeight","balance","marginLeft","marginRight","coingif","size","marginBottom","margin","header","center"],"mappings":"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","sourcesContent":["import { StyleSheet, ImageBackground, TouchableOpacity, Alert, KeyboardAvoidingView } from \"react-native\";\nimport { NativeBaseProvider, Image, Button, Input, Center, Text, Box, Heading, Header, Divider, Stack, HStack, VStack, AspectRatio } from 'native-base';\nimport { Ionicons } from '@expo/vector-icons';\nimport { ScrollView } from \"react-native-gesture-handler\";\nimport posts from './sample2';\nimport { Component, useContext, useEffect, useMemo } from \"react\";\nimport { useState } from \"react\";\nimport { useIsFocused } from '@react-navigation/native';\nimport { UserContext } from \"./UserContext\";\nimport moment from \"moment\";\nimport * as ImagePicker from 'expo-image-picker';\nimport * as Permissions from 'expo-permissions';\nimport * as ImageManipulator from 'expo-image-manipulator';\nimport * as MediaLibrary from 'expo-media-library';\nimport firebaseConfig from \"../firebaseConfig.tsx\";\nimport { initializeApp } from \"firebase/app\";\nimport { getStorage, ref, uploadBytes, getDownloadURL, deleteObject } from \"firebase/storage\";\n\n\n\n\nexport default function TabTwoScreen() {\n  const { value, setValue } = useContext(UserContext);\n  const [postsData, setPosts] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const isFocused = useIsFocused();\n  const [userData, setUser] = useState([]);\n\n  const triggerPushNotificationHandler = (token, title, body) => {\n    fetch(\"https://exp.host/--/api/v2/push/send\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Accept-Encoding\": \"gzip,deflate\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        to: token,\n        title,\n        body,\n      }),\n    })\n  }\n\n  useEffect(() => {\n\n    // Permission for iOS\n    Permissions.getAsync(Permissions.NOTIFICATIONS)\n      .then(statusObj => {\n        // Check if we already have permission\n        if (statusObj.status !== \"granted\") {\n          // If permission is not there, ask for the same\n          return Permissions.askAsync(Permissions.NOTIFICATIONS)\n        }\n        return statusObj\n      })\n      .then(statusObj => {\n        // If permission is still not given throw error\n        if (statusObj.status !== \"granted\") {\n          throw new Error(\"Permission not granted\")\n        }\n      })\n      .catch(err => {\n        return null\n      })\n\n    if (isFocused) {\n\n      fetch(`https://crewcoin.herokuapp.com/crewuser/${value.portalId}`, {\n        method: \"GET\",\n        headers: {\n          authorization: \"jwt\",\n          credentials: \"same-origin\",\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          mode: \"cors\"\n        },\n      })\n        .then(res => res.json())\n        .then(res => {\n          if (res) {\n            setUser(res);\n            console.log(userData)\n            let self = res.filter(user => user.username === value.username);\n            setValue(self[0]);\n          } else {\n            Alert.alert(\n              \"Error\",\n              \"Please check your internet connection\",\n              [\n\n                { text: \"OK\", onPress: () => console.log(\"OK Pressed\") }\n              ]\n            )\n          }\n        })\n        .catch(err => {\n          console.log(err);\n        }\n        );\n    }\n  }, []);\n\n\n  function Spinner() {\n    if (isLoading) {\n      return (\n        <Image alt=\"spinner\" source={require('../assets/images/ballspinner.gif')}\n          style={{ marginTop: \"-34%\", width: '20%', height: '20%', justifyContent: \"center\", alignItems: \"center\", zIndex: 20000000, top: \"70%\", resizeMode: \"contain\" }} />\n      )\n    } else {\n      return null;\n    }\n  }\n\n\n  function Post() {\n    const [postData, setPost] = useState({});\n    const imageUrl = postData.imageUrl;\n    const { value, setValue } = useContext(UserContext);\n\n\n\n\n    function handlePost() {\n      let removeAdmin = userData.filter(el => el.admin === false);\n      let user = removeAdmin.filter(el => el.username !== value.username && el.pushToken.length > 0);\n      let usersPushtoken = user.map(el => el.pushToken);\n      console.log(usersPushtoken);\n\n      if (!postData.title || !postData.announcement) {\n        Alert.alert(\"Please fill in all fields!\");\n      } else {\n        setIsLoading(true);\n        const imageName = `${value.portalId}_post_${moment(new Date).format(\"MMDDYYYYhmma\")}`\n        const storage = getStorage();\n        const uploadImage = async () => {\n          const img = postData.imageUrl;\n          const response = await fetch(postData.imageUrl);\n          const blob = await response.blob();\n          uploadBytes(ref(storage, `${imageName}`), blob);\n          // const url = await ref(`${imageName}`).getDownloadURL();\n          // console.log(url);\n        }\n        if (postData.imageUrl) {\n          uploadImage();\n          setTimeout(() => {\n            getDownloadURL(ref(storage, `${imageName}`))\n              .then((url) => {\n                console.log(url);\n                fetch(`https://crewcoin.herokuapp.com/announcements`, {\n                  method: \"POST\",\n                  headers: {\n                    authorization: \"jwt\",\n                    credentials: \"same-origin\",\n                    Accept: \"application/json\",\n                    \"Content-Type\": \"application/json\",\n                    mode: \"cors\"\n                  },\n                  body: JSON.stringify({\n                    \"title\": postData.title,\n                    \"description\": postData.announcement,\n                    \"image\": url,\n                    \"portalId\": value.portalId,\n                  }),\n                })\n\n                  .then(res => res.json())\n                  .then(res => {\n                    if (res.success) {\n                      triggerPushNotificationHandler(usersPushtoken, `New Announcement: ${postData.title}`, postData.announcement);\n                      setPosts(postsData => [...postsData, res.announcements])\n                      setPost({ title: \"\", announcement: \"\", imageUrl: \"\" });\n                    } else {\n                      Alert.alert(\n                        \"Something went wrong\",\n                        `Error`,\n                        [\n                          { text: \"OK\", onPress: () => console.log(\"OK Pressed\") }\n                        ]\n                      );\n                    }\n                  })\n                  .catch(err => {\n                    Alert.alert(\n                      `Error`,\n                      \"Please check internet connection!\",\n                      [\n\n                        { text: \"OK\", onPress: () => console.log(\"OK Pressed\") }\n                      ]\n                    )\n                  }\n                  );\n              })\n              .catch((error) => {\n                console.log(error);\n                Alert.alert(\n                  `Error`,\n                  \"Please check internet connection!\",\n                  [\n\n                    { text: \"OK\", onPress: () => console.log(\"OK Pressed\") }\n                  ]\n                )\n                // Handle any errors\n              })\n            setIsLoading(false);\n          }, 3000);\n        } else {\n          fetch(`https://crewcoin.herokuapp.com/announcements`, {\n            method: \"POST\",\n            headers: {\n              authorization: \"jwt\",\n              credentials: \"same-origin\",\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\",\n              mode: \"cors\"\n            },\n            body: JSON.stringify({\n              \"title\": postData.title,\n              \"description\": postData.announcement,\n              \"portalId\": value.portalId,\n            }),\n          })\n            .then(res => res.json())\n            .then(res => {\n              if (res.success) {\n                setPosts(postsData => [...postsData, res.announcements])\n                setPost({ title: \"\", announcement: \"\", imageUrl: \"\" });\n              } else {\n                Alert.alert(\n                  \"Something went wrong\",\n                  `Error`,\n                  [\n                    { text: \"OK\", onPress: () => console.log(\"OK Pressed\") }\n                  ]\n                );\n              }\n            })\n            .catch(err => {\n              Alert.alert(\n                `Error`,\n                \"Please check internet connection!\",\n                [\n\n                  { text: \"OK\", onPress: () => console.log(\"OK Pressed\") }\n                ]\n              )\n            }\n            );\n          setIsLoading(false);\n        }\n      }\n\n    }\n\n    let getImageFromCamera = async () => {\n      const cameraPermission = await Permissions.askAsync(Permissions.CAMERA);\n      const cameraRollPermission = await Permissions.askAsync(Permissions.CAMERA_ROLL);\n\n      if (cameraPermission.status === 'granted' && cameraRollPermission.status === 'granted') {\n        const capturedImage = await ImagePicker.launchCameraAsync({\n          allowsEditing: true,\n          aspect: [1, 1]\n        });\n        if (!capturedImage.cancelled) {\n          console.log(capturedImage);\n          processImage(capturedImage.uri);\n          MediaLibrary.createAssetAsync(capturedImage.uri);\n        }\n      }\n    }\n    let getImageFromGallery = async () => {\n      const cameraPermission = await Permissions.askAsync(Permissions.CAMERA);\n      const cameraRollPermission = await Permissions.askAsync(Permissions.CAMERA_ROLL);\n\n      if (cameraPermission.status === 'granted' && cameraRollPermission.status === 'granted') {\n        const capturedImage = await ImagePicker.launchImageLibraryAsync({\n          allowsEditing: true,\n          aspect: [1, 1]\n        });\n        if (!capturedImage.cancelled) {\n          processImage(capturedImage.uri);\n        }\n      }\n    }\n    let processImage = async (imgUri) => {\n      const processedImage = await ImageManipulator.manipulateAsync(imgUri,\n        [{ resize: { width: 400 } }],\n        { format: ImageManipulator.SaveFormat.PNG }\n      );\n      setPost({ ...postData, imageUrl: processedImage.uri })\n      console.log(\"processedImage\", processedImage)\n    }\n\n    if (value.admin) {\n      function TempImage() {\n        if (imageUrl) {\n          return (\n            <Image alt=\"temp\" shadow={9} style={{ width: 300, height: 300, borderRadius: 5, }}\n              source={{ uri: imageUrl }} resizeMode=\"contain\" />\n          )\n        } else {\n          return null;\n        }\n      }\n      return (\n        <>\n          <Box\n            shadow={2}\n            mt=\"2\"\n            mb=\"2\"\n            pt=\"2\"\n            style={styles.image2}\n            maxW=\"360\"\n            rounded=\"lg\"\n            overflow=\"hidden\"\n            borderColor=\"gray.100\"\n            borderWidth=\"1\"\n            _dark={{\n              borderColor: \"gray.900\",\n              backgroundColor: \"gray.900\",\n            }}\n            _web={{\n              shadow: 2,\n              borderWidth: 0,\n            }}\n            _light={{\n              backgroundColor: \"gray.50\",\n            }}\n          >\n            <Stack w=\"100%\" p=\"4\" space={3}>\n              <HStack alignItems=\"center\">\n                <Heading size=\"md\" ml=\"-1\" >\n                  New Announcement\n                </Heading>\n                <TouchableOpacity onPress={() => { getImageFromCamera() }}>\n                  <Image mt=\"4\" alt=\"camera1\" style={styles.image3} source={require('../assets/images/camera1.png')} resizeMode=\"contain\" />\n                </TouchableOpacity>\n                <TouchableOpacity onPress={() => { getImageFromGallery() }}>\n                  <Image mt=\"4\" alt=\"camera2\" style={styles.image4} source={require('../assets/images/camera.png')} resizeMode=\"contain\" />\n                </TouchableOpacity>\n              </HStack>\n              <Center>\n                <TempImage />\n              </Center>\n              <Input value={postData.title} onChangeText={(value) => setPost({ ...postData, title: value })} placeholder=\"Title\" />\n              <Input value={postData.announcement} onChangeText={(value) => setPost({ ...postData, announcement: value })} placeholder=\"Announcement\" />\n              {/* <Divider />\n            <Image style={styles.image3} source={require('../assets/images/camera.png')} resizeMode=\"contain\" />\n            <Divider /> */}\n              <Button onPress={() => { handlePost(setPosts) }}> Post </Button>\n            </Stack>\n          </Box>\n        </>\n      )\n    } else {\n      return null\n    }\n  }\n\n\n  const Posts = () => {\n    const [postsData, setPosts] = useState([]);\n    useEffect(() => {\n      fetch(`https://crewcoin.herokuapp.com/announcements`, {\n        method: \"GET\",\n        headers: {\n          authorization: \"jwt\",\n          credentials: \"same-origin\",\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          mode: \"cors\"\n        },\n      })\n\n        .then(res => res.json())\n        .then(res => {\n          if (res.success) {\n            setPosts(res.announcements);\n            console.log(\"another fetch\")\n          } else {\n            Alert.alert(\n              \"Something went wrong\",\n              `Error`,\n              [\n                { text: \"OK\", onPress: () => console.log(\"OK Pressed\") }\n              ]\n            );\n          }\n        })\n        .catch(err => {\n          Alert.alert(\n            `Error`,\n            \"Please check internet connection!\",\n            [\n              { text: \"OK\", onPress: () => console.log(\"OK Pressed\") }\n            ]\n          )\n        }\n        );\n\n    }, []);\n\n    let posts = postsData.sort(function (a, b) {\n      // Turn your strings into dates, and then subtract them\n      // to get a value that is either negative, positive, or zero.\n      return new Date(b.createdAt) - new Date(a.createdAt);\n    });\n    function deleteButton(posts) {\n      if (value.admin) {\n        return (\n          <Button colorScheme=\"rose\" mb=\"1\" onPress={() => {\n            Alert.alert(\n              \"Remove Post\",\n              \"Are you sure you want to remove this post?\",\n              [\n                {\n                  text: \"No\",\n                  onPress: () => console.log(\"Cancel Pressed\"),\n                  style: \"cancel\"\n                },\n                {\n                  text: \"Yes\", onPress: () => {\n                    deletePost(posts)\n                  }\n                }\n              ],\n              { cancelable: false }\n            );\n          }}>Delete Post</Button>\n        )\n      } else {\n        return null;\n      }\n    }\n\n    function deletePost(posts) {\n\n      const storage = getStorage();\n      var postRef = ref(storage, posts.image);\n      console.log(posts.image)\n\n      // Delete the file\n      if (posts.image) {\n        deleteObject(postRef).then(() => {\n          // File deleted successfully\n        }).catch((error) => {\n          // Uh-oh, an error occurred!\n        });\n\n        fetch(`https://crewcoin.herokuapp.com/announcements/delete/${posts._id}`, {\n          method: \"DELETE\",\n          headers: {\n            authorization: \"jwt\",\n            credentials: \"same-origin\",\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            mode: \"cors\"\n          },\n          body: JSON.stringify({\n            \"post\": posts._id\n          }),\n        })\n\n          .then(res => res.json())\n          .then(res => {\n            if (res.success) {\n              setPosts(postsData => postsData.filter(post => post._id !== res.postId))\n              setValue({ ...value, posts: res.posts })\n              Alert.alert(\n                \"Post\",\n                `Removed`,\n                [\n                  { text: \"OK\", onPress: () => console.log(\"OK Pressed\") }\n                ]\n              );\n              console.log(res.prizes)\n            } else {\n              Alert.alert(\n                \"Something went wrong\",\n                `Error`,\n                [\n                  { text: \"OK\", onPress: () => console.log(\"OK Pressed\") }\n                ]\n              );\n            }\n          })\n          .catch(err => {\n            Alert.alert(\n              `Error`,\n              \"Please check internet connection!\",\n              [\n                { text: \"OK\", onPress: () => console.log(\"OK Pressed\") }\n              ]\n            )\n          }\n          );\n      } else {\n        fetch(`https://crewcoin.herokuapp.com/announcements/delete/${posts._id}`, {\n          method: \"DELETE\",\n          headers: {\n            authorization: \"jwt\",\n            credentials: \"same-origin\",\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            mode: \"cors\"\n          },\n          body: JSON.stringify({\n            \"post\": posts._id\n          }),\n        })\n\n          .then(res => res.json())\n          .then(res => {\n            if (res.success) {\n              setPosts(postsData => postsData.filter(post => post._id !== res.postId))\n              setValue({ ...value, posts: res.posts })\n              Alert.alert(\n                \"Post\",\n                `Removed`,\n                [\n                  { text: \"OK\", onPress: () => console.log(\"OK Pressed\") }\n                ]\n              );\n              console.log(res.prizes)\n            } else {\n              Alert.alert(\n                \"Something went wrong\",\n                `Error`,\n                [\n                  { text: \"OK\", onPress: () => console.log(\"OK Pressed\") }\n                ]\n              );\n            }\n          })\n          .catch(err => {\n            Alert.alert(\n              `Error`,\n              \"Please check internet connection!\",\n              [\n                { text: \"OK\", onPress: () => console.log(\"OK Pressed\") }\n              ]\n            )\n          }\n          );\n      }\n    }\n\n\n    return (\n      posts.map(posts => {\n        function postImage(posts) {\n          if (posts.image) {\n            return (\n              <Image\n\n                // borderColor=\"gray.200\"\n                // shadow={9}\n                // width={300}\n                // alt={prizes.createdAt}\n                // source={{ uri: prizes.image }}\n                // style={{ width: 300, height: 300, borderRadius: 5, resizeMode: 'contain' }}\n\n                shadow={9}\n                style={{ width: 300, height: 220, borderRadius: 5, resizeMode: 'contain' }}\n                alt={posts.createdAt}\n                source={{ uri: posts.image }}\n              />\n            )\n          } else {\n            return null;\n          }\n        }\n        return (\n          <Box\n            shadow={2}\n            mt=\"2\"\n            mb=\"2\"\n            style={styles.image2}\n            maxW=\"360\"\n            rounded=\"lg\"\n            overflow=\"hidden\"\n            borderColor=\"gray.300\"\n            borderWidth=\"1\"\n            _dark={{\n              borderColor: \"gray.900\",\n              backgroundColor: \"gray.900\",\n            }}\n            _web={{\n              shadow: 2,\n              borderWidth: 0,\n            }}\n            _light={{\n              backgroundColor: \"gray.50\",\n            }}\n          >\n            <Box pt=\"4\">\n              {postImage(posts)}\n            </Box>\n            <Stack w=\"330\" p=\"4\" space={3}>\n              <Stack>\n                <Center>\n                  <Heading size=\"md\" ml=\"-1\">\n                    {posts.title}\n                  </Heading>\n                </Center>\n              </Stack>\n              <Divider />\n              <Text fontWeight=\"400\" fontSize={18}>\n                {posts.description}\n              </Text>\n              <Divider />\n              <HStack alignItems=\"center\" space={2} justifyContent=\"space-between\">\n                <HStack alignItems=\"center\">\n\n                  <Image style={styles.coin2} alt=\"icon\" source={require('../assets/images/icon3.gif')} />\n                  <Text\n                    color=\"yellow.600\"\n                    _dark={{\n                      color: \"warmGray.200\",\n                    }}\n                    fontWeight=\"400\"\n                    bold=\"true\"\n                  >\n                    {moment(posts.createdAt).format(\"MM/DD/YYYY h:mma\")}\n                  </Text>\n                </HStack>\n                {deleteButton(posts)}\n              </HStack>\n            </Stack>\n          </Box>\n        )\n      })\n    )\n  }\n\n\n  return (\n    <KeyboardAvoidingView style={{ flex: 1 }} behavior=\"height\" enabled>\n      <NativeBaseProvider>\n        <AppBar />\n        <ImageBackground imageStyle=\n          {{ opacity: 0.5 }} alt=\"bg\" style={styles.image} source={require('../assets/images/splashbg2.png')} resizeMode=\"cover\" >\n          {Spinner()}\n          <ScrollView>\n            <Divider />\n              <Post />\n              <Posts />\n          </ScrollView>\n        </ImageBackground>\n      </NativeBaseProvider>\n    </KeyboardAvoidingView>\n  );\n}\n\nfunction AppBar() {\n  const { value, setValue } = useContext(UserContext);\n  return (\n    <>\n      <Box safeAreaTop backgroundColor=\"#f2f2f2\" />\n      <HStack borderColor=\"gray.300\"\n        borderWidth=\"1\" bg='amber.300' px=\"1\" justifyContent='space-between' alignItems='center'>\n        <HStack space=\"4\" alignItems='center'>\n          <Image alt=\"crewIco\" style={styles.coin} source={require('../assets/images/crewcoinlogo.png')} />\n        </HStack>\n        <HStack space=\"4\">\n          <Text px=\"1\" style={styles.icon}>\n            {value.firstname + \" \" + value.lastname}\n          </Text>\n        </HStack>\n      </HStack>\n\n    </>\n  )\n}\n\n\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  icon: {\n    color: 'black',\n    fontSize: 16,\n    fontWeight: 'bold',\n\n\n  },\n  balance: {\n    fontSize: 25,\n    width: '100%',\n  },\n  coin: {\n    width: 200,\n    resizeMode: 'contain',\n    height: 50,\n  },\n  coin2: {\n    width: 300,\n    resizeMode: 'contain',\n    height: 50,\n    marginLeft: \"-45%\",\n    marginRight: \"-36%\",\n    marginTop: \"-1%\",\n  },\n  coingif: {\n    size: '100%',\n  },\n  coingif: {\n    width: 10,\n  },\n  image: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: '100%',\n    height: '100%',\n    resizeMode: 'cover',\n  },\n  image2: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: 450,\n    resizeMode: 'cover',\n  },\n  image3: {\n    width: 45,\n    resizeMode: 'contain',\n    marginBottom: -85,\n    marginTop: -90,\n    marginLeft: 35,\n  },\n  image4: {\n    width: 51,\n    resizeMode: 'contain',\n    marginBottom: -85,\n    marginTop: -90,\n    marginLeft: 10,\n  },\n  title: {\n    width: 400,\n    resizeMode: 'cover',\n    marginTop: -100,\n    marginBottom: -100,\n    margin: -100,\n  },\n  header: {\n    marginTop: '15%',\n    marginLeft: '18%',\n    justifyContent: 'flex-start',\n    alignItems: 'flex-start',\n    backgroundColor: '#fff',\n  },\n  center: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n});"]},"metadata":{},"sourceType":"module"}