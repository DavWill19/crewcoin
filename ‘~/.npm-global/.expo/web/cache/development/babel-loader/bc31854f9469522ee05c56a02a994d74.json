{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport * as Font from \"expo-font\";\nimport * as SplashScreen from \"expo-splash-screen\";\nimport React from \"react\";\nexport function useLoadedAssets() {\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      isLoadingComplete = _React$useState2[0],\n      setLoadingComplete = _React$useState2[1];\n\n  React.useEffect(function () {\n    function loadResourcesAndDataAsync() {\n      return _regeneratorRuntime.async(function loadResourcesAndDataAsync$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              SplashScreen.preventAutoHideAsync();\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(Font.loadAsync(Ionicons.font));\n\n            case 4:\n              _context.next = 9;\n              break;\n\n            case 6:\n              _context.prev = 6;\n              _context.t0 = _context[\"catch\"](0);\n              console.warn(_context.t0);\n\n            case 9:\n              _context.prev = 9;\n              setLoadingComplete(true);\n              SplashScreen.hideAsync();\n              return _context.finish(9);\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 6, 9, 13]], Promise);\n    }\n\n    loadResourcesAndDataAsync();\n  }, []);\n  return isLoadingComplete;\n}","map":{"version":3,"sources":["C:/Users/DavidWIlliams/Desktop/crewCoin/crewCoin/crewCoin/hooks/useLoadedAssets.js"],"names":["Ionicons","Font","SplashScreen","React","useLoadedAssets","useState","isLoadingComplete","setLoadingComplete","useEffect","loadResourcesAndDataAsync","preventAutoHideAsync","loadAsync","font","console","warn","hideAsync"],"mappings":";;AAAA,OAAOA,QAAP,MAAqB,6BAArB;AACA,OAAO,KAAKC,IAAZ,MAAsB,WAAtB;AACA,OAAO,KAAKC,YAAZ,MAA8B,oBAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,SAASC,eAAT,GAA2B;AAChC,wBAAgDD,KAAK,CAACE,QAAN,CAAe,KAAf,CAAhD;AAAA;AAAA,MAAOC,iBAAP;AAAA,MAA0BC,kBAA1B;;AAGAJ,EAAAA,KAAK,CAACK,SAAN,CAAgB,YAAM;AACpB,aAAeC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAEIP,cAAAA,YAAY,CAACQ,oBAAb;AAFJ;AAAA,+CAKUT,IAAI,CAACU,SAAL,CAAeX,QAAQ,CAACY,IAAxB,CALV;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAQIC,cAAAA,OAAO,CAACC,IAAR;;AARJ;AAAA;AAUIP,cAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACAL,cAAAA,YAAY,CAACa,SAAb;AAXJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAeAN,IAAAA,yBAAyB;AAC1B,GAjBD,EAiBG,EAjBH;AAmBA,SAAOH,iBAAP;AACD","sourcesContent":["import Ionicons from \"@expo/vector-icons/Ionicons\";\nimport * as Font from \"expo-font\";\nimport * as SplashScreen from \"expo-splash-screen\";\nimport React from \"react\";\n\nexport function useLoadedAssets() {\n  const [isLoadingComplete, setLoadingComplete] = React.useState(false);\n\n  // Load any resources or data that we need prior to rendering the app\n  React.useEffect(() => {\n    async function loadResourcesAndDataAsync() {\n      try {\n        SplashScreen.preventAutoHideAsync();\n\n        // Load fonts\n        await Font.loadAsync(Ionicons.font);\n      } catch (e) {\n        // We might want to provide this error information to an error reporting service\n        console.warn(e);\n      } finally {\n        setLoadingComplete(true);\n        SplashScreen.hideAsync();\n      }\n    }\n\n    loadResourcesAndDataAsync();\n  }, []);\n\n  return isLoadingComplete;\n}\n"]},"metadata":{},"sourceType":"module"}