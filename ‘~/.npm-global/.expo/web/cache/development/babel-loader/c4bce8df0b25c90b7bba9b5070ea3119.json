{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { NativeBaseProvider, Box, Input, Heading, Divider, AspectRatio, Stack, HStack, Text, Icon, VStack, Center, StatusBar, Button } from 'native-base';\nimport { Ionicons } from '@expo/vector-icons';\nimport { FlatList, ScrollView } from \"react-native-gesture-handler\";\nimport prizes from \"./sample\";\nimport { Component, useContext, useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { UserContext } from \"./UserContext\";\nimport * as ImagePicker from 'expo-image-picker';\nimport * as Permissions from 'expo-permissions';\nimport * as ImageManipulator from 'expo-image-manipulator';\nimport * as MediaLibrary from 'expo-media-library';\nimport firebaseConfig from \"../firebaseConfig.tsx\";\nimport { initializeApp } from \"firebase/app\";\nimport { getStorage, ref, uploadBytes, getDownloadURL } from \"firebase/storage\";\nimport moment from \"moment\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\ninitializeApp(firebaseConfig);\nexport default function TabThreeScreen() {\n  var _useContext = useContext(UserContext),\n      value = _useContext.value,\n      setValue = _useContext.setValue;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      prizesData = _useState2[0],\n      setPrizes = _useState2[1];\n\n  function Example() {\n    var _useState3 = useState({}),\n        _useState4 = _slicedToArray(_useState3, 2),\n        postData = _useState4[0],\n        setPost = _useState4[1];\n\n    var imageUrl = postData.imageUrl;\n\n    var uploadImage = function uploadImage() {\n      var img, response, blob;\n      return _regeneratorRuntime.async(function uploadImage$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              img = postData.imageUrl;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(fetch(postData.imageUrl));\n\n            case 3:\n              response = _context.sent;\n              _context.next = 6;\n              return _regeneratorRuntime.awrap(response.blob());\n\n            case 6:\n              blob = _context.sent;\n              uploadBytes(ref(storage, \"\" + imageName), blob);\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    var postFetch = function postFetch() {\n      fetch(\"https://crewcoin.herokuapp.com/store\", {\n        method: \"POST\",\n        headers: {\n          authorization: \"jwt\",\n          credentials: \"same-origin\",\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          mode: \"cors\"\n        },\n        body: JSON.stringify({\n          \"title\": postData.title,\n          \"description\": postData.description,\n          \"image\": postData.firebaseImage,\n          \"portalId\": value.portalId,\n          \"cost\": postData.cost\n        })\n      }).then(function (res) {\n        return res.json();\n      }).then(function (res) {\n        if (res.success) {\n          setPrizes(function (prizesData) {\n            return [].concat(_toConsumableArray(prizesData), [res.store]);\n          });\n          setPost({\n            title: \"\",\n            description: \"\",\n            imageUrl: \"\",\n            cost: \"\"\n          });\n        } else {\n          Alert.alert(\"Something went wrong\", \"Error\", [{\n            text: \"OK\",\n            onPress: function onPress() {\n              return console.log(\"OK Pressed\");\n            }\n          }]);\n        }\n      }).catch(function (err) {\n        Alert.alert(\"Error\", \"Please check internet connection!\", [{\n          text: \"OK\",\n          onPress: function onPress() {\n            return console.log(\"OK Pressed\");\n          }\n        }]);\n      });\n    };\n\n    function handlePost(setPrizes) {\n      var imageName = value.portalId + \"_\" + moment(new Date()).format(\"MMDDYYYYhmma\");\n      var storage = getStorage();\n      uploadImage();\n      setTimeout(function () {\n        if (!postData.title || !postData.description || !postData.imageUrl || !postData.cost) {\n          Alert.alert(\"Please fill in all fields and add photo!\");\n        } else {\n          getDownloadURL(ref(storage, \"\" + imageName)).then(function (url) {\n            setPost(_objectSpread(_objectSpread({}, postData), {}, {\n              firebaseImage: url\n            }));\n            console.log(\" Damn Url: \" + postData.firebaseImage);\n          }).catch(function (error) {\n            console.log(error);\n          });\n        }\n      }, 5000);\n      postFetch();\n    }\n\n    var getImageFromCamera = function getImageFromCamera() {\n      var cameraPermission, cameraRollPermission, capturedImage;\n      return _regeneratorRuntime.async(function getImageFromCamera$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA));\n\n            case 2:\n              cameraPermission = _context2.sent;\n              _context2.next = 5;\n              return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA_ROLL));\n\n            case 5:\n              cameraRollPermission = _context2.sent;\n\n              if (!(cameraPermission.status === 'granted' && cameraRollPermission.status === 'granted')) {\n                _context2.next = 11;\n                break;\n              }\n\n              _context2.next = 9;\n              return _regeneratorRuntime.awrap(ImagePicker.launchCameraAsync({\n                allowsEditing: true,\n                aspect: [1, 1]\n              }));\n\n            case 9:\n              capturedImage = _context2.sent;\n\n              if (!capturedImage.cancelled) {\n                processImage(capturedImage.uri);\n                MediaLibrary.createAssetAsync(capturedImage.uri);\n              }\n\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    var getImageFromGallery = function getImageFromGallery() {\n      var cameraPermission, cameraRollPermission, capturedImage;\n      return _regeneratorRuntime.async(function getImageFromGallery$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA));\n\n            case 2:\n              cameraPermission = _context3.sent;\n              _context3.next = 5;\n              return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA_ROLL));\n\n            case 5:\n              cameraRollPermission = _context3.sent;\n\n              if (!(cameraPermission.status === 'granted' && cameraRollPermission.status === 'granted')) {\n                _context3.next = 11;\n                break;\n              }\n\n              _context3.next = 9;\n              return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n                allowsEditing: true,\n                aspect: [1, 1]\n              }));\n\n            case 9:\n              capturedImage = _context3.sent;\n\n              if (!capturedImage.cancelled) {\n                processImage(capturedImage.uri);\n              }\n\n            case 11:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    var processImage = function processImage(imgUri) {\n      var processedImage;\n      return _regeneratorRuntime.async(function processImage$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return _regeneratorRuntime.awrap(ImageManipulator.manipulateAsync(imgUri, [{\n                resize: {\n                  width: 400\n                }\n              }], {\n                format: ImageManipulator.SaveFormat.PNG\n              }));\n\n            case 2:\n              processedImage = _context4.sent;\n              setPost(_objectSpread(_objectSpread({}, postData), {}, {\n                imageUrl: processedImage.uri,\n                image: processedImage\n              }));\n\n            case 4:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    if (value.admin) {\n      function TempImage() {\n        if (imageUrl) {\n          return _jsx(Image, {\n            alt: \"temp\",\n            shadow: 9,\n            style: {\n              width: 300,\n              height: 300,\n              borderRadius: 5\n            },\n            source: {\n              uri: imageUrl\n            },\n            resizeMode: \"contain\"\n          });\n        } else {\n          return null;\n        }\n      }\n\n      return _jsx(_Fragment, {\n        children: _jsx(Box, {\n          shadow: 2,\n          mt: \"2\",\n          mb: \"2\",\n          pt: \"2\",\n          style: styles.image2,\n          maxW: \"360\",\n          rounded: \"lg\",\n          overflow: \"hidden\",\n          borderColor: \"gray.100\",\n          borderWidth: \"1\",\n          _dark: {\n            borderColor: \"gray.900\",\n            backgroundColor: \"gray.900\"\n          },\n          _web: {\n            shadow: 2,\n            borderWidth: 0\n          },\n          _light: {\n            backgroundColor: \"gray.50\"\n          },\n          children: _jsxs(Stack, {\n            w: \"100%\",\n            p: \"4\",\n            space: 3,\n            children: [_jsxs(HStack, {\n              alignItems: \"center\",\n              children: [_jsx(Heading, {\n                size: \"md\",\n                ml: \"-1\",\n                children: \"Add New Store Item\"\n              }), _jsx(TouchableOpacity, {\n                onPress: function onPress() {\n                  getImageFromCamera();\n                },\n                children: _jsx(Image, {\n                  mt: \"4\",\n                  style: styles.image3,\n                  source: require(\"../assets/images/camera1.png\"),\n                  resizeMode: \"contain\"\n                })\n              }), _jsx(TouchableOpacity, {\n                onPress: function onPress() {\n                  getImageFromGallery();\n                },\n                children: _jsx(Image, {\n                  mt: \"4\",\n                  style: styles.image4,\n                  source: require(\"../assets/images/camera.png\"),\n                  resizeMode: \"contain\"\n                })\n              })]\n            }), _jsx(Center, {\n              children: _jsx(TempImage, {})\n            }), _jsx(Input, {\n              value: postData.title,\n              onChangeText: function onChangeText(value) {\n                return setPost(_objectSpread(_objectSpread({}, postData), {}, {\n                  title: value\n                }));\n              },\n              placeholder: \"Title\"\n            }), _jsx(Input, {\n              value: postData.description,\n              onChangeText: function onChangeText(value) {\n                return setPost(_objectSpread(_objectSpread({}, postData), {}, {\n                  description: value\n                }));\n              },\n              placeholder: \"Description\"\n            }), _jsx(Input, {\n              value: postData.cost,\n              onChangeText: function onChangeText(value) {\n                return setPost(_objectSpread(_objectSpread({}, postData), {}, {\n                  cost: value\n                }));\n              },\n              placeholder: \"Price\"\n            }), _jsx(Button, {\n              onPress: function onPress() {\n                handlePost(setPrizes);\n              },\n              children: \" Post New Item\"\n            })]\n          })\n        })\n      });\n    } else {\n      return null;\n    }\n  }\n\n  var Prizes = function Prizes() {\n    var _useContext2 = useContext(UserContext),\n        value = _useContext2.value,\n        setValue = _useContext2.setValue;\n\n    var _useState5 = useState([]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        prizesData = _useState6[0],\n        setPrizes = _useState6[1];\n\n    useEffect(function () {\n      fetch(\"https://crewcoin.herokuapp.com/store/\" + value.portalId, {\n        method: \"GET\",\n        headers: {\n          authorization: \"jwt\",\n          credentials: \"same-origin\",\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          mode: \"cors\"\n        }\n      }).then(function (res) {\n        return res.json();\n      }).then(function (res) {\n        if (res.success) {\n          setPrizes(res.prizes);\n        } else {\n          Alert.alert(\"Something went wrong\", \"Error\", [{\n            text: \"OK\",\n            onPress: function onPress() {\n              return console.log(\"OK Pressed\");\n            }\n          }]);\n        }\n      }).catch(function (err) {\n        Alert.alert(\"Error\", \"Please check internet connection!\", [{\n          text: \"OK\",\n          onPress: function onPress() {\n            return console.log(\"OK Pressed\");\n          }\n        }]);\n      });\n    }, []);\n    var prizes = prizesData.sort(function (a, b) {\n      return new Date(b.createdAt) - new Date(a.createdAt);\n    });\n\n    function postImage(prizes) {\n      if (prizes.image) {\n        return _jsx(Image, {\n          borderColor: \"gray.200\",\n          shadow: 9,\n          width: 300,\n          alt: prizes.createdAt,\n          source: {\n            uri: prizes.image\n          },\n          style: {\n            width: 300,\n            height: 300,\n            borderRadius: 5,\n            resizeMode: 'contain'\n          }\n        });\n      } else {\n        return null;\n      }\n    }\n\n    function deleteButton(prize) {\n      if (value.admin) {\n        return _jsx(Button, {\n          colorScheme: \"rose\",\n          mb: \"2\",\n          onPress: function onPress() {\n            Alert.alert(\"Remove Prize\", \"Are you sure you want to remove this prize?\", [{\n              text: \"Cancel\",\n              onPress: function onPress() {\n                return console.log(\"Cancel Pressed\");\n              },\n              style: \"cancel\"\n            }, {\n              text: \"OK\",\n              onPress: function onPress() {\n                deletePrize(prize._id);\n              }\n            }], {\n              cancelable: false\n            });\n          },\n          children: \"Remove Item\"\n        });\n      } else {\n        return null;\n      }\n    }\n\n    function buyButton(prize) {\n      if (!value.admin) {\n        return _jsx(Button, {\n          mb: \"2\",\n          onPress: function onPress() {\n            Alert.alert(\"Purchase\", \"Are you sure you want to purchase this \" + prize.title + \"?\", [{\n              text: \"Cancel\",\n              onPress: function onPress() {\n                return console.log(\"Cancel Pressed\");\n              },\n              style: \"cancel\"\n            }, {\n              text: \"OK\",\n              onPress: function onPress() {\n                console.log(\"purchased!\");\n              }\n            }], {\n              cancelable: false\n            });\n          },\n          children: \"Buy Now\"\n        });\n      } else {\n        return null;\n      }\n    }\n\n    function deletePrize(prize) {\n      fetch(\"https://crewcoin.herokuapp.com/store/\" + prize, {\n        method: \"DELETE\",\n        headers: {\n          authorization: \"jwt\",\n          credentials: \"same-origin\",\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          mode: \"cors\"\n        },\n        body: JSON.stringify({\n          \"prizeId\": prize\n        })\n      }).then(function (res) {\n        return res.json();\n      }).then(function (res) {\n        if (res.success) {\n          setPrizes(function (prizes) {\n            return prizes.filter(function (prize) {\n              return prize._id !== res.prizeId;\n            });\n          });\n          setValue(_objectSpread(_objectSpread({}, value), {}, {\n            store: res.store\n          }));\n          Alert.alert(\"Prize\", \"Deleted\", [{\n            text: \"OK\",\n            onPress: function onPress() {\n              return console.log(\"OK Pressed\");\n            }\n          }]);\n        } else {\n          Alert.alert(\"Something went wrong\", \"Error\", [{\n            text: \"OK\",\n            onPress: function onPress() {\n              return console.log(\"OK Pressed\");\n            }\n          }]);\n        }\n      }).catch(function (err) {\n        Alert.alert(\"Error\", \"Please check internet connection!\", [{\n          text: \"OK\",\n          onPress: function onPress() {\n            return console.log(\"OK Pressed\");\n          }\n        }]);\n      });\n    }\n\n    return prizes.map(function (prize) {\n      return _jsxs(Box, {\n        shadow: 2,\n        style: styles.image5,\n        mb: \"2\",\n        maxW: \"360\",\n        rounded: \"lg\",\n        overflow: \"hidden\",\n        borderColor: \"gray.300\",\n        borderWidth: \"1\",\n        pt: \"4\",\n        _dark: {\n          borderColor: \"gray.900\",\n          backgroundColor: \"gray.900\"\n        },\n        _web: {\n          shadow: 2,\n          borderWidth: 0\n        },\n        _light: {\n          backgroundColor: \"gray.50\"\n        },\n        children: [_jsx(Box, {\n          children: postImage(prize)\n        }), _jsxs(Stack, {\n          w: \"330\",\n          p: \"2\",\n          space: 3,\n          children: [_jsx(Stack, {\n            children: _jsx(Heading, {\n              fontSize: 16,\n              children: prize.title\n            })\n          }), _jsx(Divider, {}), _jsx(Text, {\n            fontWeight: \"400\",\n            fontSize: 14,\n            children: prize.description\n          }), _jsx(Divider, {}), _jsxs(HStack, {\n            alignItems: \"center\",\n            space: 2,\n            justifyContent: \"space-between\",\n            children: [_jsx(HStack, {\n              alignItems: \"center\",\n              children: _jsxs(Text, {\n                fontWeight: \"500\",\n                color: \"amber.600\",\n                _dark: {\n                  color: \"amber.600\"\n                },\n                fontWeight: \"600\",\n                children: [prize.cost, \" Crew Coins\"]\n              })\n            }), buyButton(prize), deleteButton(prize)]\n          })]\n        })]\n      });\n    });\n  };\n\n  return _jsxs(NativeBaseProvider, {\n    children: [_jsx(AppBar, {}), _jsx(ImageBackground, {\n      imageStyle: {\n        opacity: 0.6\n      },\n      style: styles.image2,\n      source: require(\"../assets/images/splashbg2.png\"),\n      resizeMode: \"cover\",\n      children: _jsxs(ScrollView, {\n        children: [_jsx(Example, {\n          prizes: prizes\n        }), _jsx(Prizes, {\n          prizes: prizes\n        })]\n      })\n    }), _jsx(CardBalance, {})]\n  });\n}\n\nfunction AppBar() {\n  var _useContext3 = useContext(UserContext),\n      value = _useContext3.value,\n      setValue = _useContext3.setValue;\n\n  return _jsxs(_Fragment, {\n    children: [_jsx(Box, {\n      safeAreaTop: true,\n      backgroundColor: \"#f2f2f2\"\n    }), _jsxs(HStack, {\n      bg: \"amber.300\",\n      px: \"1\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      borderColor: \"gray.300\",\n      borderWidth: \"1\",\n      children: [_jsx(HStack, {\n        space: \"4\",\n        alignItems: \"center\",\n        children: _jsx(Image, {\n          style: styles.coin,\n          source: require(\"../assets/images/crewcoinlogo.png\")\n        })\n      }), _jsx(HStack, {\n        space: \"4\",\n        children: _jsx(Text, {\n          px: \"1\",\n          style: styles.icon,\n          children: value.firstname + \" \" + value.lastname\n        })\n      })]\n    })]\n  });\n}\n\nfunction CardBalance() {\n  var _useContext4 = useContext(UserContext),\n      value = _useContext4.value,\n      setValue = _useContext4.setValue;\n\n  return _jsx(_Fragment, {\n    children: _jsx(VStack, {\n      borderColor: \"gray.300\",\n      borderWidth: \"1\",\n      space: \"4\",\n      bg: \"amber.300\",\n      px: \"2\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      children: _jsx(Center, {\n        children: _jsxs(HStack, {\n          children: [_jsx(Image, {\n            style: styles.coinbalance,\n            source: require(\"../assets/images/coinbalance.png\")\n          }), _jsx(Text, {\n            style: styles.icon2,\n            children: value.balance\n          })]\n        })\n      })\n    })\n  });\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  icon: {\n    color: 'black',\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  gif: {\n    width: 80,\n    height: 80,\n    marginTop: -30,\n    marginLeft: -30\n  },\n  icon2: {\n    color: 'black',\n    fontSize: 42,\n    fontWeight: '700',\n    paddingTop: 23,\n    marginTop: 6,\n    opacity: 0.9,\n    fontFamily: 'System'\n  },\n  coin: {\n    width: 200,\n    resizeMode: 'contain',\n    height: 50\n  },\n  coingif: {\n    size: '100%'\n  },\n  coingif: {\n    width: 10\n  },\n  coinbalance: {\n    zIndex: 2,\n    resizeMode: 'contain',\n    width: 210,\n    marginTop: -90,\n    marginBottom: -110\n  },\n  image: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: '100%',\n    height: '100%',\n    resizeMode: 'cover'\n  },\n  image2: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: '100%',\n    height: '100%',\n    marginBottom: 20,\n    marginBottom: 5\n  },\n  image3: {\n    width: 45,\n    resizeMode: 'contain',\n    marginBottom: -85,\n    marginTop: -90,\n    marginLeft: 35\n  },\n  image4: {\n    width: 51,\n    resizeMode: 'contain',\n    marginBottom: -85,\n    marginTop: -90,\n    marginLeft: 10\n  },\n  image5: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: 450,\n    resizeMode: 'cover'\n  },\n  title: {\n    width: 400,\n    resizeMode: 'cover',\n    marginTop: -100,\n    marginBottom: -100,\n    margin: -100\n  },\n  header: {\n    marginTop: '15%',\n    marginLeft: '18%',\n    justifyContent: 'flex-start',\n    alignItems: 'flex-start',\n    backgroundColor: '#fff'\n  },\n  BalanceBar: {\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    right: 0,\n    borderTopLeftRadius: 60,\n    borderTopRightRadius: 60\n  },\n  center: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  coin2: {\n    width: 80,\n    height: 50\n  }\n});","map":{"version":3,"sources":["C:/Users/DavidWIlliams/Desktop/crewCoin/screens/TabThreeScreen.js"],"names":["NativeBaseProvider","Box","Input","Heading","Divider","AspectRatio","Stack","HStack","Text","Icon","VStack","Center","StatusBar","Button","Ionicons","FlatList","ScrollView","prizes","Component","useContext","useEffect","useState","UserContext","ImagePicker","Permissions","ImageManipulator","MediaLibrary","firebaseConfig","initializeApp","getStorage","ref","uploadBytes","getDownloadURL","moment","TabThreeScreen","value","setValue","prizesData","setPrizes","Example","postData","setPost","imageUrl","uploadImage","img","fetch","response","blob","storage","imageName","postFetch","method","headers","authorization","credentials","Accept","mode","body","JSON","stringify","title","description","firebaseImage","portalId","cost","then","res","json","success","store","Alert","alert","text","onPress","console","log","catch","err","handlePost","Date","format","setTimeout","url","error","getImageFromCamera","askAsync","CAMERA","cameraPermission","CAMERA_ROLL","cameraRollPermission","status","launchCameraAsync","allowsEditing","aspect","capturedImage","cancelled","processImage","uri","createAssetAsync","getImageFromGallery","launchImageLibraryAsync","imgUri","manipulateAsync","resize","width","SaveFormat","PNG","processedImage","image","admin","TempImage","height","borderRadius","styles","image2","borderColor","backgroundColor","shadow","borderWidth","image3","require","image4","Prizes","sort","a","b","createdAt","postImage","resizeMode","deleteButton","prize","style","deletePrize","_id","cancelable","buyButton","filter","prizeId","map","image5","color","opacity","AppBar","coin","icon","firstname","lastname","CardBalance","coinbalance","icon2","balance","StyleSheet","create","container","flex","alignItems","justifyContent","fontSize","fontWeight","gif","marginTop","marginLeft","paddingTop","fontFamily","coingif","size","zIndex","marginBottom","margin","header","BalanceBar","position","bottom","left","right","borderTopLeftRadius","borderTopRightRadius","center","coin2"],"mappings":"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","sourcesContent":["import { StyleSheet, ImageBackground, Image, TouchableOpacity, Alert } from \"react-native\";\r\nimport { NativeBaseProvider, Box, Input, Heading, Divider, AspectRatio, Stack, HStack, Text, Icon, VStack, Center, StatusBar, Button } from 'native-base';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { FlatList, ScrollView } from \"react-native-gesture-handler\";\r\nimport prizes from './sample';\r\nimport { Component, useContext, useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { UserContext } from \"./UserContext\";\r\nimport * as ImagePicker from 'expo-image-picker';\r\nimport * as Permissions from 'expo-permissions';\r\nimport * as ImageManipulator from 'expo-image-manipulator';\r\nimport * as MediaLibrary from 'expo-media-library';\r\nimport firebaseConfig from \"../firebaseConfig.tsx\";\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getStorage, ref, uploadBytes, getDownloadURL } from \"firebase/storage\";\r\nimport moment from \"moment\";\r\n\r\n\r\ninitializeApp(firebaseConfig);\r\n\r\nexport default function TabThreeScreen() {\r\n  const { value, setValue } = useContext(UserContext);\r\n  const [prizesData, setPrizes] = useState([]);\r\n\r\n  function Example() {\r\n    const [postData, setPost] = useState({});\r\n    const imageUrl = postData.imageUrl;\r\n\r\n    const uploadImage = async () => {\r\n      const img = postData.imageUrl;\r\n      const response = await fetch(postData.imageUrl);\r\n      const blob = await response.blob();\r\n      uploadBytes(ref(storage, `${imageName}`), blob);\r\n    }\r\n\r\n    const postFetch = () => {\r\n      fetch(`https://crewcoin.herokuapp.com/store`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          authorization: \"jwt\",\r\n          credentials: \"same-origin\",\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          mode: \"cors\"\r\n        },\r\n        body: JSON.stringify({\r\n          \"title\": postData.title,\r\n          \"description\": postData.description,\r\n          \"image\": postData.firebaseImage,\r\n          \"portalId\": value.portalId,\r\n          \"cost\": postData.cost,\r\n        }),\r\n      })\r\n\r\n        .then(res => res.json())\r\n        .then(res => {\r\n          if (res.success) {\r\n            setPrizes(prizesData => [...prizesData, res.store])\r\n            setPost({ title: \"\", description: \"\", imageUrl: \"\", cost: \"\" });\r\n          } else {\r\n            Alert.alert(\r\n              \"Something went wrong\",\r\n              `Error`,\r\n              [\r\n                { text: \"OK\", onPress: () => console.log(\"OK Pressed\") }\r\n              ]\r\n            );\r\n          }\r\n        })\r\n        .catch(err => {\r\n          Alert.alert(\r\n            `Error`,\r\n            \"Please check internet connection!\",\r\n            [\r\n\r\n              { text: \"OK\", onPress: () => console.log(\"OK Pressed\") }\r\n            ]\r\n          )\r\n        });\r\n    }\r\n\r\n    function handlePost(setPrizes) {\r\n      const imageName = `${value.portalId}_${moment(new Date).format(\"MMDDYYYYhmma\")}`\r\n      const storage = getStorage();\r\n\r\n      uploadImage();\r\n\r\n      setTimeout(() => {\r\n        if (!postData.title || !postData.description || !postData.imageUrl || !postData.cost) {\r\n          Alert.alert(\"Please fill in all fields and add photo!\");\r\n        } else {\r\n          getDownloadURL(ref(storage, `${imageName}`))\r\n            .then((url) => {\r\n              setPost({ ...postData, firebaseImage: url }); // add firebase image url\r\n              console.log(` Damn Url: ${postData.firebaseImage}`);\r\n            })\r\n            .catch((error) => {\r\n              console.log(error);\r\n              // Handle any errors\r\n            });\r\n        }\r\n\r\n      }, 5000)\r\n      postFetch();\r\n\r\n    }\r\n\r\n\r\n    let getImageFromCamera = async () => {\r\n      const cameraPermission = await Permissions.askAsync(Permissions.CAMERA);\r\n      const cameraRollPermission = await Permissions.askAsync(Permissions.CAMERA_ROLL);\r\n\r\n      if (cameraPermission.status === 'granted' && cameraRollPermission.status === 'granted') {\r\n        const capturedImage = await ImagePicker.launchCameraAsync({\r\n          allowsEditing: true,\r\n          aspect: [1, 1]\r\n        });\r\n        if (!capturedImage.cancelled) {\r\n          processImage(capturedImage.uri);\r\n          MediaLibrary.createAssetAsync(capturedImage.uri);\r\n        }\r\n      }\r\n    }\r\n    let getImageFromGallery = async () => {\r\n      const cameraPermission = await Permissions.askAsync(Permissions.CAMERA);\r\n      const cameraRollPermission = await Permissions.askAsync(Permissions.CAMERA_ROLL);\r\n\r\n      if (cameraPermission.status === 'granted' && cameraRollPermission.status === 'granted') {\r\n        const capturedImage = await ImagePicker.launchImageLibraryAsync({\r\n          allowsEditing: true,\r\n          aspect: [1, 1]\r\n        });\r\n        if (!capturedImage.cancelled) {\r\n          processImage(capturedImage.uri);\r\n        }\r\n      }\r\n    }\r\n    let processImage = async (imgUri) => {\r\n      const processedImage = await ImageManipulator.manipulateAsync(imgUri,\r\n        [{ resize: { width: 400 } }],\r\n        { format: ImageManipulator.SaveFormat.PNG }\r\n      );\r\n      setPost({ ...postData, imageUrl: processedImage.uri, image: processedImage });\r\n    }\r\n\r\n    if (value.admin) {\r\n      function TempImage() {\r\n        if (imageUrl) {\r\n          return (\r\n            <Image alt=\"temp\" shadow={9} style={{ width: 300, height: 300, borderRadius: 5 }}\r\n              source={{ uri: imageUrl }} resizeMode=\"contain\" />\r\n          )\r\n        } else {\r\n          return null;\r\n        }\r\n      }\r\n\r\n      return (\r\n\r\n        <>\r\n          <Box\r\n            shadow={2}\r\n            mt=\"2\"\r\n            mb=\"2\"\r\n            pt=\"2\"\r\n            style={styles.image2}\r\n            maxW=\"360\"\r\n            rounded=\"lg\"\r\n            overflow=\"hidden\"\r\n            borderColor=\"gray.100\"\r\n            borderWidth=\"1\"\r\n            _dark={{\r\n              borderColor: \"gray.900\",\r\n              backgroundColor: \"gray.900\",\r\n            }}\r\n            _web={{\r\n              shadow: 2,\r\n              borderWidth: 0,\r\n            }}\r\n            _light={{\r\n              backgroundColor: \"gray.50\",\r\n            }}\r\n          >\r\n            <Stack w=\"100%\" p=\"4\" space={3}>\r\n              <HStack alignItems=\"center\">\r\n                <Heading size=\"md\" ml=\"-1\" >\r\n                  Add New Store Item\r\n                </Heading>\r\n                <TouchableOpacity onPress={() => { getImageFromCamera() }}>\r\n                  <Image mt=\"4\" style={styles.image3} source={require('../assets/images/camera1.png')} resizeMode=\"contain\" />\r\n                </TouchableOpacity>\r\n                <TouchableOpacity onPress={() => { getImageFromGallery() }}>\r\n                  <Image mt=\"4\" style={styles.image4} source={require('../assets/images/camera.png')} resizeMode=\"contain\" />\r\n                </TouchableOpacity>\r\n              </HStack>\r\n              <Center>\r\n                <TempImage />\r\n              </Center>\r\n              <Input value={postData.title} onChangeText={(value) => setPost({ ...postData, title: value })} placeholder=\"Title\" />\r\n              <Input value={postData.description} onChangeText={(value) => setPost({ ...postData, description: value })} placeholder=\"Description\" />\r\n              <Input value={postData.cost} onChangeText={(value) => setPost({ ...postData, cost: value })} placeholder=\"Price\" />\r\n              {/* <Divider />\r\n            <Image style={styles.image3} source={require('../assets/images/camera.png')} resizeMode=\"contain\" />\r\n            <Divider /> */}\r\n              <Button onPress={() => { handlePost(setPrizes) }}> Post New Item</Button>\r\n            </Stack>\r\n          </Box>\r\n\r\n\r\n        </>\r\n      )\r\n    } else {\r\n      return null\r\n    }\r\n  }\r\n\r\n  const Prizes = () => {\r\n    const { value, setValue } = useContext(UserContext);\r\n    const [prizesData, setPrizes] = useState([]);\r\n    useEffect(() => {\r\n      fetch(`https://crewcoin.herokuapp.com/store/${value.portalId}`, {\r\n        method: \"GET\",\r\n        headers: {\r\n          authorization: \"jwt\",\r\n          credentials: \"same-origin\",\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          mode: \"cors\"\r\n        },\r\n      })\r\n\r\n        .then(res => res.json())\r\n        .then(res => {\r\n          if (res.success) {\r\n            setPrizes(res.prizes);\r\n          } else {\r\n            Alert.alert(\r\n              \"Something went wrong\",\r\n              `Error`,\r\n              [\r\n                { text: \"OK\", onPress: () => console.log(\"OK Pressed\") }\r\n              ]\r\n            );\r\n          }\r\n        })\r\n        .catch(err => {\r\n          Alert.alert(\r\n            `Error`,\r\n            \"Please check internet connection!\",\r\n            [\r\n              { text: \"OK\", onPress: () => console.log(\"OK Pressed\") }\r\n            ]\r\n          )\r\n        }\r\n        );\r\n    }, []);\r\n\r\n    let prizes = prizesData.sort(function (a, b) {\r\n      // Turn your strings into dates, and then subtract them\r\n      // to get a value that is either negative, positive, or zero.\r\n      return new Date(b.createdAt) - new Date(a.createdAt);\r\n    });\r\n\r\n\r\n    function postImage(prizes) {\r\n      if (prizes.image) {\r\n        return (\r\n          <Image\r\n            borderColor=\"gray.200\"\r\n            shadow={9}\r\n            width={300}\r\n            alt={prizes.createdAt}\r\n            source={{ uri: prizes.image }}\r\n            style={{ width: 300, height: 300, borderRadius: 5, resizeMode: 'contain' }}\r\n          />\r\n        )\r\n      } else {\r\n        return null;\r\n      }\r\n    }\r\n\r\n    function deleteButton(prize) {\r\n      if (value.admin) {\r\n        return (\r\n          <Button colorScheme=\"rose\" mb=\"2\" onPress={() => {\r\n            Alert.alert(\r\n              \"Remove Prize\",\r\n              \"Are you sure you want to remove this prize?\",\r\n              [\r\n                {\r\n                  text: \"Cancel\",\r\n                  onPress: () => console.log(\"Cancel Pressed\"),\r\n                  style: \"cancel\"\r\n                },\r\n                {\r\n                  text: \"OK\", onPress: () => {\r\n                    deletePrize(prize._id)\r\n                  }\r\n                }\r\n              ],\r\n              { cancelable: false }\r\n            );\r\n          }}>Remove Item</Button>\r\n        )\r\n      } else {\r\n        return null;\r\n      }\r\n    }\r\n    function buyButton(prize) {\r\n      if (!value.admin) {\r\n        return (\r\n          <Button mb=\"2\" onPress={() => {\r\n            Alert.alert(\r\n              \"Purchase\",\r\n              `Are you sure you want to purchase this ${prize.title}?`,\r\n              [\r\n                {\r\n                  text: \"Cancel\",\r\n                  onPress: () => console.log(\"Cancel Pressed\"),\r\n                  style: \"cancel\"\r\n                },\r\n                {\r\n                  text: \"OK\", onPress: () => {\r\n                    console.log(\"purchased!\")\r\n                  }\r\n                }\r\n              ],\r\n              { cancelable: false }\r\n            );\r\n          }}>Buy Now</Button>\r\n        )\r\n      } else {\r\n        return null;\r\n      }\r\n    }\r\n\r\n    function deletePrize(prize) {\r\n      fetch(`https://crewcoin.herokuapp.com/store/${prize}`, {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          authorization: \"jwt\",\r\n          credentials: \"same-origin\",\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          mode: \"cors\"\r\n        },\r\n        body: JSON.stringify({\r\n          \"prizeId\": prize\r\n        }),\r\n      })\r\n\r\n        .then(res => res.json())\r\n        .then(res => {\r\n          if (res.success) {\r\n            setPrizes(prizes => prizes.filter(prize => prize._id !== res.prizeId))\r\n            setValue({ ...value, store: res.store })\r\n            Alert.alert(\r\n              \"Prize\",\r\n              `Deleted`,\r\n              [\r\n                { text: \"OK\", onPress: () => console.log(\"OK Pressed\") }\r\n              ]\r\n            );\r\n          } else {\r\n            Alert.alert(\r\n              \"Something went wrong\",\r\n              `Error`,\r\n              [\r\n                { text: \"OK\", onPress: () => console.log(\"OK Pressed\") }\r\n              ]\r\n            );\r\n          }\r\n        })\r\n        .catch(err => {\r\n          Alert.alert(\r\n            `Error`,\r\n            \"Please check internet connection!\",\r\n            [\r\n              { text: \"OK\", onPress: () => console.log(\"OK Pressed\") }\r\n            ]\r\n          )\r\n        }\r\n        );\r\n    }\r\n\r\n    return (\r\n      prizes.map(prize => {\r\n        return (\r\n          <Box\r\n            shadow={2}\r\n            style={styles.image5}\r\n            mb=\"2\"\r\n            maxW=\"360\"\r\n            rounded=\"lg\"\r\n            overflow=\"hidden\"\r\n            borderColor=\"gray.300\"\r\n            borderWidth=\"1\"\r\n            pt=\"4\"\r\n            _dark={{\r\n              borderColor: \"gray.900\",\r\n              backgroundColor: \"gray.900\",\r\n            }}\r\n            _web={{\r\n              shadow: 2,\r\n              borderWidth: 0,\r\n            }}\r\n            _light={{\r\n              backgroundColor: \"gray.50\",\r\n            }}\r\n          >\r\n            <Box>\r\n              {postImage(prize)}\r\n            </Box>\r\n            <Stack w=\"330\" p=\"2\" space={3}>\r\n              <Stack>\r\n\r\n                <Heading fontSize={16}>\r\n                  {prize.title}\r\n                </Heading>\r\n\r\n              </Stack>\r\n              <Divider />\r\n              <Text fontWeight=\"400\" fontSize={14}>\r\n                {prize.description}\r\n              </Text>\r\n              <Divider />\r\n              <HStack alignItems=\"center\" space={2} justifyContent=\"space-between\">\r\n                <HStack alignItems=\"center\">\r\n                  <Text\r\n                    fontWeight=\"500\"\r\n                    color=\"amber.600\"\r\n                    _dark={{\r\n                      color: \"amber.600\",\r\n                    }}\r\n                    fontWeight=\"600\"\r\n                  >\r\n                    {prize.cost} Crew Coins\r\n                  </Text>\r\n                </HStack>\r\n                {buyButton(prize)}\r\n                {deleteButton(prize)}\r\n              </HStack>\r\n            </Stack>\r\n          </Box>\r\n        )\r\n      })\r\n    )\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <NativeBaseProvider>\r\n      <AppBar />\r\n      <ImageBackground imageStyle=\r\n        {{ opacity: 0.6 }} style={styles.image2} source={require('../assets/images/splashbg2.png')} resizeMode=\"cover\" >\r\n        <ScrollView>\r\n          <Example prizes={prizes} />\r\n          <Prizes prizes={prizes} />\r\n        </ScrollView>\r\n      </ImageBackground>\r\n      <CardBalance />\r\n    </NativeBaseProvider>\r\n  );\r\n}\r\nfunction AppBar() {\r\n  const { value, setValue } = useContext(UserContext);\r\n  return (\r\n    <>\r\n      <Box safeAreaTop backgroundColor=\"#f2f2f2\" />\r\n\r\n      <HStack bg='amber.300' px=\"1\" justifyContent='space-between' alignItems='center' borderColor=\"gray.300\"\r\n        borderWidth=\"1\">\r\n        <HStack space=\"4\" alignItems='center'>\r\n          <Image style={styles.coin} source={require('../assets/images/crewcoinlogo.png')} />\r\n        </HStack>\r\n        <HStack space=\"4\">\r\n          <Text px=\"1\" style={styles.icon}>\r\n            {value.firstname + \" \" + value.lastname}\r\n          </Text>\r\n        </HStack>\r\n      </HStack>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nfunction CardBalance() {\r\n  const { value, setValue } = useContext(UserContext);\r\n  return (\r\n    <>\r\n      <VStack borderColor=\"gray.300\"\r\n        borderWidth=\"1\" space=\"4\" bg='amber.300' px=\"2\" justifyContent='space-between' alignItems='center'>\r\n        <Center>\r\n          <HStack >\r\n            <Image style={styles.coinbalance} source={require('../assets/images/coinbalance.png')} />\r\n            <Text style={styles.icon2}>{value.balance}</Text>\r\n          </HStack>\r\n        </Center>\r\n      </VStack>\r\n    </>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  icon: {\r\n    color: 'black',\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n\r\n\r\n  },\r\n  gif: {\r\n    width: 80,\r\n    height: 80,\r\n    marginTop: -30,\r\n    marginLeft: -30,\r\n  },\r\n  icon2: {\r\n    color: 'black',\r\n    fontSize: 42,\r\n    fontWeight: '700',\r\n    paddingTop: 23,\r\n    marginTop: 6,\r\n    opacity: 0.9,\r\n    fontFamily: 'System',\r\n  },\r\n  coin: {\r\n    width: 200,\r\n    resizeMode: 'contain',\r\n    height: 50,\r\n  },\r\n  coingif: {\r\n    size: '100%',\r\n  },\r\n  coingif: {\r\n    width: 10,\r\n  },\r\n  coinbalance: {\r\n    zIndex: 2,\r\n    resizeMode: 'contain',\r\n    width: 210,\r\n    marginTop: -90,\r\n    marginBottom: -110,\r\n  },\r\n\r\n  image: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    width: '100%',\r\n    height: '100%',\r\n    resizeMode: 'cover',\r\n  },\r\n  image2: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    width: '100%',\r\n    height: '100%',\r\n    marginBottom: 20,\r\n    marginBottom: 5,\r\n  },\r\n  image3: {\r\n    width: 45,\r\n    resizeMode: 'contain',\r\n    marginBottom: -85,\r\n    marginTop: -90,\r\n    marginLeft: 35,\r\n  },\r\n  image4: {\r\n    width: 51,\r\n    resizeMode: 'contain',\r\n    marginBottom: -85,\r\n    marginTop: -90,\r\n    marginLeft: 10,\r\n  },\r\n\r\n  image5: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    width: 450,\r\n    resizeMode: 'cover',\r\n  },\r\n  title: {\r\n    width: 400,\r\n    resizeMode: 'cover',\r\n    marginTop: -100,\r\n    marginBottom: -100,\r\n    margin: -100,\r\n  },\r\n  header: {\r\n    marginTop: '15%',\r\n    marginLeft: '18%',\r\n    justifyContent: 'flex-start',\r\n    alignItems: 'flex-start',\r\n    backgroundColor: '#fff',\r\n  },\r\n  BalanceBar: {\r\n    position: 'absolute',\r\n    bottom: 0,\r\n    left: 0,\r\n    right: 0,\r\n    borderTopLeftRadius: 60,\r\n    borderTopRightRadius: 60,\r\n  },\r\n  center: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  coin2: {\r\n    width: 80,\r\n    height: 50,\r\n  },\r\n});"]},"metadata":{},"sourceType":"module"}